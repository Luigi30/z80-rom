Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2020.03.01 - 04:02:57]

z80bios.asm
Errors: 0

       1   00:0000                      ; Memory map for Procyon/80 and RC2014 64K
       2   00:0000                      ;
       3   00:0000                      ;	$0000-$7FFF - ROM region - currently uses $0000-$1FFF
       4   00:0000                      ;	$8000-$8FFF - Kernel private RAM
       5   00:0000                      ;	$9000-$FFFF - Transient Program Area (load programs here)
       6   00:0000                      
       7   00:0000                      	OUTPUT "out/z80bios.rom"
       8   00:0000                      
       9   00:0000                      	DEFPAGE	0, 0000h, 0200h		; Boot vectors and stuff
      10   00:0000                      	DEFPAGE 1, 0200h, *	; Kernel code
      11   00:0000                      	DEFPAGE 3, 1000h, 1000h	; VDP driver
      12   00:0000                      	DEFPAGE 2, 8000h, 1000h ; Kernel data
      13   00:0000                      
      14   00:0000                      	include "rc2014.inc"
       1.  00:0000                      ; Function code equates.
       2.  00:0000  (00:0000)           B_RESET			= 0
       3.  00:0000  (00:0001)           B_CONOUT        = 1
       4.  00:0000  (00:0002)           B_STROUT        = 2
       5.  00:0000  (00:0003)           B_CONIN         = 3
       6.  00:0000  (00:0004)           B_CONSTAT       = 4
       7.  00:0000  (00:0005)           B_STRIN         = 5
       8.  00:0000                      
       9.  00:0000                      ; Device IDs for BIOS functions
      10.  00:0000  (00:0001)           DEV_AUX			= 1 ; RS-232.
      11.  00:0000  (00:0002)           DEV_CON			= 2	; Console. Can be redirected.
      12.  00:0000  (00:0005)           DEV_SCREEN		= 5	; Screen.
      13.  00:0000                      
      14.  00:0000                      MACRO	DoBIOS	
      15.  00:0000                    < 		rst	$20
      16.  00:0000                    < ENDMACRO
      17.  00:0000                      
      18.  00:0000                      	;; SIO equates
      19.  00:0000  (00:0080)           SIOA_C	EQU $80
      20.  00:0000  (00:0081)           SIOA_D	EQU $81
      21.  00:0000  (00:0082)           SIOB_C	EQU $82
      22.  00:0000  (00:0083)           SIOB_D	EQU $83
      15   00:0000                      	
      16   00:0000  (00)                		page 0
      17   00:0000                      	;;  see rc2014init.asm
      18   00:0000                      		org 0
      19   00:0000                      	
      20   00:0000  F3                  RST00:	di					; interrupts off
      21   00:0001  C3 0E 0E            		jp	Start
      22   00:0004  00                  		nop
      23   00:0005  00                  		nop
      24   00:0006  00                  		nop
      25   00:0007  00                  		nop			
      26   00:0008                      
      27   00:0008  C3 4A 0F            RST08:	jp	rc2014_sio_TX	; 0x08
      28   00:000B  00                  		nop
      29   00:000C  00                  		nop
      30   00:000D  00                  		nop
      31   00:000E  00                  		nop
      32   00:000F  00                  		nop
      33   00:0010                      
      34   00:0010  C3 2F 0F            RST10:	jp	rc2014_getc		; 0x10
      35   00:0013  00                  		nop
      36   00:0014  00                  		nop
      37   00:0015  00                  		nop
      38   00:0016  00                  		nop
      39   00:0017  00                  		nop
      40   00:0018                      
      41   00:0018  C3 40 0F            RST18:	jp	rc2014_pollc	; 0x18
      42   00:001B  00                  		nop
      43   00:001C  00                  		nop
      44   00:001D  00                  		nop
      45   00:001E  00                  		nop
      46   00:001F  00                  		nop
      47   00:0020                      
      48   00:0020  C3 84 0F            RST20:	jp	BIOS_Dispatch	; 0x20
      49   00:0023  00                  		nop
      50   00:0024  00                  		nop
      51   00:0025  00                  		nop
      52   00:0026  00                  		nop
      53   00:0027  00                  		nop
      54   00:0028                      
      55   00:0028  00                  RST28:	nop	; 0x28
      56   00:0029  00                  		nop
      57   00:002A  00                  		nop
      58   00:002B  00                  		nop
      59   00:002C  00                  		nop
      60   00:002D  00                  		nop
      61   00:002E                      	
      62   00:002E  00                  RST30:	nop	; 0x30
      63   00:002F  00                  		nop
      64   00:0030  00                  		nop
      65   00:0031  00                  		nop
      66   00:0032  00                  		nop
      67   00:0033  00                  		nop
      68   00:0034                      
      69   00:0034  ED 4D               RST38:	reti
      70   00:0036  00                  		nop
      71   00:0037  00                  		nop
      72   00:0038  00                  		nop
      73   00:0039  00                  		nop
      74   00:003A  00                  		nop
      75   00:003B                      
      76   00:003B                      		org 66h
      77   00:0066                      NMI:
      78   00:0066  ED 4D               		reti
      79   00:0068                      	
      80   00:0068                      ;;; ;;;;;;;;;;;;;;;;
      81   00:0068  (01)                	PAGE 1
      82   01:0200                      	org	200h
      83   01:0200                      
      84   01:0200                      	include	"rc2014.asm"
       1.  01:0200  (01)                	page 1
       2.  01:0F23                      
       3.  01:0F23                      BIOS_FnTable:
       4.  01:0F23  99 0F               	dw	BIOS_Reset			; C = 0
       5.  01:0F25  9A 0F               	dw  BIOS_Conout			; C = 1
       6.  01:0F27  9F 0F               	dw	BIOS_Strout			; C = 2
       7.  01:0F29  AE 0F               	dw	BIOS_Conin			; C = 3
       8.  01:0F2B  B3 0F               	dw	BIOS_Constat		; C = 4
       9.  01:0F2D  B8 0F               	dw	BIOS_Strin			; C = 5
      10.  01:0F2F                      
      11.  01:0F2F                      ;;; rc2014_getc
      12.  01:0F2F                      ;;; Wait for the UART to receive a character.
      13.  01:0F2F                      ;;; Return the character in HL.
      14.  01:0F2F                      rc2014_getc:
      15.  01:0F2F  F5                          push 	af
      16.  01:0F30  DB 80               waitch:	in 		a,(SIOA_C)
      17.  01:0F32  CB 47                       bit 	0,a
      18.  01:0F34  28 FA                       jr 		z,waitch
      19.  01:0F36  DB 81                       in 		a,(SIOA_D)
      20.  01:0F38  26 00                       ld 		h,0
      21.  01:0F3A  6F                          ld 		l,a
      22.  01:0F3B  F1                          pop 	af
      23.  01:0F3C  C9                          ret
      24.  01:0F3D                      
      25.  01:0F3D                      ;;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      26.  01:0F3D                      ;;; rc2014_putc
      27.  01:0F3D                      ;;; Output the byte in L to the SIO.
      28.  01:0F3D                      ;;;
      29.  01:0F3D                      rc2014_putc:
      30.  01:0F3D  7D                  	ld	a,l
      31.  01:0F3E  CF                  	rst	$08
      32.  01:0F3F  C9                  	ret
      33.  01:0F40                      
      34.  01:0F40                      ;;; rc2014_pollc
      35.  01:0F40                      ;;; Poll the UART receive buffer.
      36.  01:0F40                      ;;; L <- 1 if data available
      37.  01:0F40                      ;;; L <- 0 if no data available
      38.  01:0F40                      rc2014_pollc:
      39.  01:0F40  2E 00               	ld	l,0
      40.  01:0F42  DB 80               	in	a,(SIOA_C)
      41.  01:0F44  CB 47               	bit	0,a
      42.  01:0F46  C8                  	ret	z
      43.  01:0F47  2E 01               	ld	l,1
      44.  01:0F49  C9                  	ret
      45.  01:0F4A                      
      46.  01:0F4A                      ;;; ;;;;;;;;;;;;;
      47.  01:0F4A                      rc2014_sio_TX:
      48.  01:0F4A  F5                  		push af
      49.  01:0F4B  DB 80               .txb: 	in a,($80)          ; read serial status
      50.  01:0F4D  CB 57                       bit 2,a             ; check status bit 2
      51.  01:0F4F  28 FA                       jr z, .txb        	; loop if zero (serial is busy)
      52.  01:0F51  F1                          pop af
      53.  01:0F52  D3 81                       out ($81), a        ; transmit the character
      54.  01:0F54  C9                          ret
      55.  01:0F55                      
      56.  01:0F55                      ;;; ;;;;;;;;;;;;;
      57.  01:0F55                      rc2014_sio_init:
      58.  01:0F55                      ;;; Set up the SIO channel A for UART transmit/receive.
      59.  01:0F55  3E 30               	ld	a,00110000b	; WR0: error reset, select WR0
      60.  01:0F57  D3 80               	out	(SIOA_C),a
      61.  01:0F59  3E 18               	ld	a,018h		; WR0: reset
      62.  01:0F5B  D3 80               	out	(SIOA_C),a
      63.  01:0F5D                      
      64.  01:0F5D  3E 04               	ld	a,04h		; WR0: select WR4
      65.  01:0F5F  D3 80               	out	(SIOA_C),a
      66.  01:0F61  3E C4               	ld	a,11000100b	; WR4: CLK/64, 1 stop, N parity (at 2.4MHz, 38400bps)
      67.  01:0F63  D3 80               	out	(SIOA_C),a
      68.  01:0F65                      
      69.  01:0F65  3E 05               	ld	a,05h		; WR0: select WR5
      70.  01:0F67  D3 80               	out	(SIOA_C),a
      71.  01:0F69  3E E8               	ld	a,11101000b	; DTR, TX 8bit, no BRK, TX on, no RTS
      72.  01:0F6B  D3 80               	out	(SIOA_C),a
      73.  01:0F6D                      
      74.  01:0F6D  3E 01               	ld	a,01h		; WR0: select WR1
      75.  01:0F6F  D3 82               	out	(SIOB_C),A
      76.  01:0F71  3E 04               	ld	a,00000100b	; No CH B interrupt
      77.  01:0F73                      
      78.  01:0F73  3E 01               	ld	a,01h		; WR0: Select WR1
      79.  01:0F75  D3 80               	out	(SIOA_C),A	
      80.  01:0F77  3E 00               	ld	a,00h		; WR1: All interrupts off
      81.  01:0F79  D3 80               	out	(SIOA_C),A
      82.  01:0F7B                      
      83.  01:0F7B                      	;; Enable SIO RX on channel A.
      84.  01:0F7B  3E 03               	ld	a,03h
      85.  01:0F7D  D3 80               	out	(SIOA_C),a
      86.  01:0F7F  3E C1               	ld	a,0C1h		; RX 8bit, RX on, auto enable off
      87.  01:0F81  D3 80               	out	(SIOA_C),a
      88.  01:0F83                      
      89.  01:0F83  C9                  	ret
      90.  01:0F84                      
      91.  01:0F84                      ;;; ;;;;;;;;;;;;;;;;;
      92.  01:0F84                      ;;; BIOS functions
      93.  01:0F84                      ;;;
      94.  01:0F84                      ;;; API:
      95.  01:0F84                      ;;;		All BIOS functions are prefixed with B_
      96.  01:0F84                      ;;; 	Input is DE
      97.  01:0F84                      ;;;		Output bytes are in A
      98.  01:0F84                      ;;;		Output words are in HL (todo: ?)
      99.  01:0F84                      ;;;
     100.  01:0F84                      ;;;		Do not assume any registers are preserved.
     101.  01:0F84                      BIOS_Dispatch:
     102.  01:0F84                      	;; Dispatch to the function number C.
     103.  01:0F84  D5                  	push	de
     104.  01:0F85  F5                  	push	af
     105.  01:0F86  21 23 0F            	ld		hl,BIOS_FnTable	; grab the jump table address
     106.  01:0F89  16 00               	ld		d,0		; clear D
     107.  01:0F8B                      	
     108.  01:0F8B  CB 21               	sla		c		; shift C to produce a table offset
     109.  01:0F8D  59                  	ld		e,c		; E <- C
     110.  01:0F8E  19                  	add		hl,de	; Apply the offset.
     111.  01:0F8F                      
     112.  01:0F8F  7E                  	ld		a,(hl)	; Get the destination address. 
     113.  01:0F90  5F                  	ld		e,a
     114.  01:0F91  23                  	inc		hl
     115.  01:0F92  56                  	ld		d,(hl)
     116.  01:0F93                      
     117.  01:0F93  D5                  	push	de		; Move it into HL so we can jump to it.
     118.  01:0F94  E1                  	pop		hl
     119.  01:0F95                      
     120.  01:0F95  F1                  	pop		af		; Restore AF and DE.
     121.  01:0F96  D1                  	pop		de
     122.  01:0F97  E9                  	jp		(hl)	; Jump to the BIOS function, which RETs back to where we started.
     123.  01:0F98  C9                  	ret				; Unnecessary unless something breaks
     124.  01:0F99                      
     125.  01:0F99                      ;;
     126.  01:0F99                      BIOS_Reset:
     127.  01:0F99  C7                  	rst 	$00
     128.  01:0F9A                      
     129.  01:0F9A                      ;;
     130.  01:0F9A                      BIOS_Conout:
     131.  01:0F9A                      	;; CONsole OUTput.
     132.  01:0F9A                      	;; 
     133.  01:0F9A                      	;; Input:
     134.  01:0F9A                      	;; D - device code for output
     135.  01:0F9A                      	;; E - character
     136.  01:0F9A  7B                  	ld		a,e
     137.  01:0F9B  CD 4A 0F            	call	rc2014_sio_TX
     138.  01:0F9E  C9                  	ret
     139.  01:0F9F                      
     140.  01:0F9F                      ;;
     141.  01:0F9F                      BIOS_Strout:
     142.  01:0F9F                      	;; STRing OUTput.
     143.  01:0F9F                      	;; Input:
     144.  01:0F9F                      	;; DE - string address
     145.  01:0F9F                      	;;
     146.  01:0F9F                      	;; Perform BIOS_Conout until a 0 is found in the string.
     147.  01:0F9F                      .loop1:
     148.  01:0F9F  1A                  	ld		a,(de)
     149.  01:0FA0  FE 00               	cp		#0
     150.  01:0FA2  28 09               	jr		z,.loop2
     151.  01:0FA4  D5                  	push	de
     152.  01:0FA5  5F                  	ld		e,a
     153.  01:0FA6  CD 9A 0F            	call	BIOS_Conout
     154.  01:0FA9  D1                  	pop		de
     155.  01:0FAA  13                  	inc		de
     156.  01:0FAB  18 F2               	jr		.loop1
     157.  01:0FAD                      
     158.  01:0FAD                      .loop2:
     159.  01:0FAD  C9                  	ret	
     160.  01:0FAE                      ;;
     161.  01:0FAE                      
     162.  01:0FAE                      BIOS_Conin:
     163.  01:0FAE                      	;; CONsole INput.
     164.  01:0FAE                      	;;
     165.  01:0FAE                      	;; Blocks until a character is available on the console.
     166.  01:0FAE                      	;; Output:
     167.  01:0FAE                      	;; A = character received
     168.  01:0FAE  CD 2F 0F            	call	rc2014_getc	; returns char in L
     169.  01:0FB1  7D                  	ld		a,l			; copy it to A and return
     170.  01:0FB2  C9                  	ret
     171.  01:0FB3                      	;;
     172.  01:0FB3                      
     173.  01:0FB3                      BIOS_Constat:
     174.  01:0FB3                      	;; CONsole STATus.
     175.  01:0FB3                      	;;
     176.  01:0FB3                      	;; Output:
     177.  01:0FB3                      	;; A  = 0 if no characters are waiting to be read
     178.  01:0FB3                      	;; A != 0 if character is waiting
     179.  01:0FB3  CD 40 0F            	call	rc2014_pollc
     180.  01:0FB6  7D                  	ld		a,l
     181.  01:0FB7  C9                  	ret
     182.  01:0FB8                      
     183.  01:0FB8                      BIOS_Strin:
     184.  01:0FB8                      	;; Read string into buffer.
     185.  01:0FB8                      	;; Buffer structure is as follows:
     186.  01:0FB8                      	;;	db buffer_size		- how many characters are allowed
     187.  01:0FB8                      	;;	db input_length 	- populated after input is complete
     188.  01:0FB8                      	;;	byte[buffer_size] 	- the input string
     189.  01:0FB8                      	;;
     190.  01:0FB8                      	;; Buffer address is placed in DE.
     191.  01:0FB8  D5                  	push	de
     192.  01:0FB9  FD E1               	pop		iy		; Copy buffer base address to IY.
     193.  01:0FBB  FD 23               	inc		iy
     194.  01:0FBD  FD 23               	inc		iy		; advance 2 bytes to start of the string buffer
     195.  01:0FBF                      
     196.  01:0FBF  DD 21 00 00         	ld		ix,0	; clear input length
     197.  01:0FC3                      
     198.  01:0FC3                      .begin:
     199.  01:0FC3  D7                  	rst		$10		; Get an input character.
     200.  01:0FC4                      
     201.  01:0FC4  7D                  	ld		a,l
     202.  01:0FC5  FE 80               	cp		$80
     203.  01:0FC7  F2 C3 0F            	jp		p,.begin
     204.  01:0FCA                      
     205.  01:0FCA                      	; Check for Ctrl+H
     206.  01:0FCA  7D                  	ld		a,l
     207.  01:0FCB  FE 08               	cp		$08
     208.  01:0FCD  28 05               	jr		z,.handlebs
     209.  01:0FCF                      
     210.  01:0FCF                      .check2:
     211.  01:0FCF                      	; Check for 0x7F (some terminals use this instead)
     212.  01:0FCF  7D                  	ld		a,l
     213.  01:0FD0  FE 7F               	cp		$7F	
     214.  01:0FD2  20 27               	jr		nz,.charout	; Any other character bypasses
     215.  01:0FD4                      
     216.  01:0FD4                      .handlebs:
     217.  01:0FD4                      	;; Handle the backspace.
     218.  01:0FD4  DD 7D               	ld		a,ixl	; is the input length already 0? if so, ignore and go back to waiting for input
     219.  01:0FD6  FE 00               	cp		0
     220.  01:0FD8  28 E9               	jr		z,.begin
     221.  01:0FDA                      
     222.  01:0FDA                      	; Reset the write pointer and length.
     223.  01:0FDA  FD 2B               	dec		iy
     224.  01:0FDC  DD 2B               	dec		ix
     225.  01:0FDE                      
     226.  01:0FDE  D5                  	push	de
     227.  01:0FDF  E5                  	push	hl
     228.  01:0FE0  DD E5               	push	ix
     229.  01:0FE2  FD E5               	push	iy
     230.  01:0FE4  1E 08               	ld		e,$08
     231.  01:0FE6  0E 01               	ld		c,B_CONOUT
     232.  01:0FE8                      	DoBIOS		; console BS
     232.  01:0FE8  E7                >   rst $20
     233.  01:0FE9  1E 20               	ld		e,$20
     234.  01:0FEB  0E 01               	ld		c,B_CONOUT
     235.  01:0FED                      	DoBIOS		; console SPC
     235.  01:0FED  E7                >   rst $20
     236.  01:0FEE  1E 08               	ld		e,$08
     237.  01:0FF0  0E 01               	ld		c,B_CONOUT
     238.  01:0FF2                      	DoBIOS		; console BS
     238.  01:0FF2  E7                >   rst $20
     239.  01:0FF3  FD E1               	pop		iy
     240.  01:0FF5  DD E1               	pop		ix
     241.  01:0FF7  E1                  	pop		hl
     242.  01:0FF8  D1                  	pop		de
     243.  01:0FF9  18 C8               	jr		.begin	; And we're done.
     244.  01:0FFB                      
     245.  01:0FFB                      .charout:
     246.  01:0FFB                      	; write character to buffer
     247.  01:0FFB  FD 75 00            	ld		(iy),l	; copy the character to the input buffer
     248.  01:0FFE  FD 23               	inc		iy		; advance buffer
     249.  01:1000  DD 23               	inc		ix		; length++
     250.  01:1002                      
     251.  01:1002                      	; TODO: Length == buffer size? If so, don't allow more characters.
     252.  01:1002                      
     253.  01:1002                      .write:	
     254.  01:1002                      	; write character to console
     255.  01:1002  D5                  	push	de
     256.  01:1003  E5                  	push	hl
     257.  01:1004  DD E5               	push	ix
     258.  01:1006  FD E5               	push	iy
     259.  01:1008  5D                  	ld		e,l
     260.  01:1009  0E 01               	ld		c,B_CONOUT
     261.  01:100B                      	DoBIOS
     261.  01:100B  E7                >   rst $20
     262.  01:100C  FD E1               	pop		iy
     263.  01:100E  DD E1               	pop		ix
     264.  01:1010  E1                  	pop		hl
     265.  01:1011  D1                  	pop		de
     266.  01:1012                      
     267.  01:1012                      	; Is the character 0x0D?
     268.  01:1012  7D                  	ld		a,l
     269.  01:1013  FE 0D               	cp		$0D	; CR
     270.  01:1015  28 07               	jr		z,.done		; loop if no
     271.  01:1017                      
     272.  01:1017                      	; Is the character 0x0D?
     273.  01:1017  7D                  	ld		a,l
     274.  01:1018  FE 0A               	cp		$0A	; LF
     275.  01:101A  28 02               	jr		z,.done		; loop if no
     276.  01:101C                      
     277.  01:101C  18 A5               	jr		.begin
     278.  01:101E                      
     279.  01:101E                      .done:
     280.  01:101E                      	; add a null
     281.  01:101E  2E 00               	ld		l,0
     282.  01:1020  FD 75 00            	ld		(iy),l	; copy the character to the input buffer
     283.  01:1023  FD 23               	inc		iy		; advance buffer
     284.  01:1025  DD 23               	inc		ix		; length++
     285.  01:1027                      
     286.  01:1027                      	; Write the length to the buffer struct
     287.  01:1027  DD 7D               	ld		a,ixl
     288.  01:1029  D5                  	push	de
     289.  01:102A  FD E1               	pop		iy
     290.  01:102C  FD 77 01            	ld		(iy+1),a
     291.  01:102F                      
     292.  01:102F  C9                  	ret
      85   01:1030                      	include	"strings.asm"
       1.  01:1030  (01)                	PAGE 1
       2.  01:1030                      
       3.  01:1030                      strPrompt:
       4.  01:1030  3E 00               	dz	">"
       5.  01:1032                      strCRLF:
       6.  01:1032  0D 0A 00            	db  13,10,0
       7.  01:1035                      
       8.  01:1035                      HelloWorld:
       9.  01:1035                      	db	"Procyon/80 ROM Monitor - RC2014 SIO/2 64K",13,10,0
       9.  01:1035  50 72 6F 63 79 6F 6E 2F 38 30 20 52 4F 4D 20 4D 
       9.  01:1045  6F 6E 69 74 6F 72 20 2D 20 52 43 32 30 31 34 20 
       9.  01:1055  53 49 4F 2F 32 20 36 34 4B 0D 0A 00 
      10.  01:1061                      
      11.  01:1061                      strYouEntered:
      12.  01:1061                      	dz	"You entered: "
      12.  01:1061  59 6F 75 20 65 6E 74 65 72 65 64 3A 20 00 
      13.  01:106F                      
      14.  01:106F                      strDbgCmd:
      15.  01:106F                          dz  "Command: "
      15.  01:106F  43 6F 6D 6D 61 6E 64 3A 20 00 
      16.  01:1079                      
      17.  01:1079                      strDbgArg:
      18.  01:1079                          dz  "    Arg: "
      18.  01:1079  20 20 20 20 41 72 67 3A 20 00 
      19.  01:1083                      
      20.  01:1083                      strCmdUnknown:
      21.  01:1083                          dz  "*** Unrecognized command"
      21.  01:1083  2A 2A 2A 20 55 6E 72 65 63 6F 67 6E 69 7A 65 64 
      21.  01:1093  20 63 6F 6D 6D 61 6E 64 00 
      22.  01:109C                      
      23.  01:109C                      strCmdArgumentError:
      24.  01:109C                      	dz  "*** Argument error"
      24.  01:109C  2A 2A 2A 20 41 72 67 75 6D 65 6E 74 20 65 72 72 
      24.  01:10AC  6F 72 00 
      25.  01:10AF                      
      26.  01:10AF                      strBanner1:
      27.  01:10AF                      	dz	"Procyon/80 ROM BIOS and Monitor"
      27.  01:10AF  50 72 6F 63 79 6F 6E 2F 38 30 20 52 4F 4D 20 42 
      27.  01:10BF  49 4F 53 20 61 6E 64 20 4D 6F 6E 69 74 6F 72 00 
      28.  01:10CF                      
      29.  01:10CF                      strBanner2:
      30.  01:10CF                      	dz	"Software by LuigiThirty"
      30.  01:10CF  53 6F 66 74 77 61 72 65 20 62 79 20 4C 75 69 67 
      30.  01:10DF  69 54 68 69 72 74 79 00 
      31.  01:10E7                      
      32.  01:10E7                      strBanner3:
      33.  01:10E7                      	dz	"Revision 02/13/1979"
      33.  01:10E7  52 65 76 69 73 69 6F 6E 20 30 32 2F 31 33 2F 31 
      33.  01:10F7  39 37 39 00 
      34.  01:10FB                      
      35.  01:10FB                      strBanner4:
      36.  01:10FB                      	dz	"here, it's always 1979"
      36.  01:10FB  68 65 72 65 2C 20 69 74 27 73 20 61 6C 77 61 79 
      36.  01:110B  73 20 31 39 37 39 00 
      86   01:1112                      	include "vdpbios.asm"
       1.  01:1112  (01)                    PAGE 1
       2.  01:0200                          
       3.  01:0200                          include "vdpbios.inc"
       1:  01:0200  (01:0098)           VDP_PORT_VRAM  = $98
       2:  01:0200  (01:0099)           VDP_PORT_REGS  = $99
       3:  01:0200                      
       4:  01:0200                      ; Command bits
       5:  01:0200  (01:0040)           VDP_VRAM_WRITE  = $40
       6:  01:0200  (01:0080)           VDP_REG_WRITE   = $80
       7:  01:0200                      
       8:  01:0200  (01:0004)           tmswait:        equ 4      ; wait divisor
       9:  01:0200                      
      10:  01:0200  (01:A02F)           _VDPClearPixel:  equ $A02F ; cpl, and b
      11:  01:0200  (01:00B0)           _VDPSetPixel:    equ $00B0 ; nop, or b
      12:  01:0200                      
      13:  01:0200                      ; Function table names.
      14:  01:0200  (01:0000)           VDP_Reset                   equ 0
      15:  01:0200  (01:0001)           VDP_GoTextMode              equ 1
      16:  01:0200  (01:0002)           VDP_GoGraphics1             equ 2
      17:  01:0200  (01:0003)           VDP_GoGraphics2             equ 3
      18:  01:0200  (01:0004)           VDP_SetVRAMWriteAddress     equ 4
      19:  01:0200  (01:0005)           VDP_SetRegistersFromArray   equ 5
      20:  01:0200  (01:0006)           VDP_SetRegister             equ 6
      21:  01:0200  (01:0007)           VDP_VRAMBlockCopy           equ 7
      22:  01:0200  (01:0008)           VDP_StringOut               equ 8
      23:  01:0200  (01:0009)           VDP_SetTextPosition         equ 9
      24:  01:0200  (01:000A)           VDP_GoBitmapMode            equ 10
      25:  01:0200  (01:000B)           VDP_GetPixelAddress         equ 11
      26:  01:0200  (01:000C)           VDP_SetVRAMReadAddress      equ 12
      27:  01:0200                      
      28:  01:0200  (01:F000)           VDP_JUMPTABLE_PUBLIC = $F000
      29:  01:0200                      
      30:  01:0200                      MACRO	VDPBIOS cmd
      31:  01:0200                    <     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
      32:  01:0200                    < ENDMACRO
      33:  01:0200                      
      34:  01:0200                      MACRO   VRAMWait
      35:  01:0200                    <         defs    14/tmswait, 0         ; nops to waste time
      36:  01:0200                    < ENDMACRO
       4.  01:0200                      
       5.  01:0200                      VDP_B_ColdStart:
       6.  01:0200                          ; Copy the table from VDP_B_FnTable to the public table in RAM.
       7.  01:0200  01 00 01                ld  bc,256
       8.  01:0203  11 00 F0                ld  de,VDP_FnTable_Public
       9.  01:0206  21 2B 0B                ld  hl,VDP_B_FnTable
      10.  01:0209  ED B0                   ldir
      11.  01:020B  C9                      ret
      12.  01:020C                      
      13.  01:020C                      ; copy a null-terminated string to VRAM
      14.  01:020C                      ;       HL = ram source address
      15.  01:020C                      VDP_B_StringOut:
      16.  01:020C                      .loop:
      17.  01:020C  7E                      ld      a, (hl)                 ; get the current byte from ram
      18.  01:020D  FE 00                   cp      0                       ; return when NULL is encountered
      19.  01:020F  C8                      ret     z
      20.  01:0210  D3 98                   out     (VDP_PORT_VRAM), a             ; send it to vram
      21.  01:0212  00 (3)                  defs    14/tmswait, 0         ; nops to waste time
      22.  01:0215  23                      inc     hl                      ; next byte
      23.  01:0216  18 F4                   jr      .loop
      24.  01:0218  C9                      ret
      25.  01:0219                      
      26.  01:0219                      VDP_B_VRAMBlockCopy:
      27.  01:0219                      ; copy bytes from ram to vram
      28.  01:0219                      ;       HL = ram source address
      29.  01:0219                      ;       DE = vram destination address
      30.  01:0219                      ;       BC = byte count
      31.  01:0219  CD 4E 02                call    VDP_B_SetVRAMWriteAddress   ; set the starting address
      32.  01:021C                      .copyloop:
      33.  01:021C  7E                      ld      a, (hl)                 ; get the current byte from ram
      34.  01:021D  D3 98                   out     (VDP_PORT_VRAM), a           ; send it to vram
      35.  01:021F  00 (3)                  defs    14/tmswait, 0         ; nops to waste time
      36.  01:0222  23                      inc     hl                      ; next byte
      37.  01:0223  0B                      dec     bc                      ; continue until count is zero
      38.  01:0224  78                      ld      a, b
      39.  01:0225  B1                      or      c
      40.  01:0226  20 F4                   jr      nz, .copyloop
      41.  01:0228  C9                      ret
      42.  01:0229                      
      43.  01:0229                      VDP_B_SetRegister:
      44.  01:0229                          ; A is the value
      45.  01:0229                          ; E is the register number
      46.  01:0229                      
      47.  01:0229  21 91 82                ld      hl,VDP_ShadowRegs
      48.  01:022C  16 00                   ld      d,0
      49.  01:022E  19                      add     hl,de   ; Add offset to shadow register.
      50.  01:022F  77                      ld      (hl),a  ; Update shadow value.
      51.  01:0230  D3 99                   out     (VDP_PORT_REGS),a    ; send a byte of data
      52.  01:0232  3E 80                   ld      a,VDP_REG_WRITE ; select register to write it to
      53.  01:0234  B3                      or      e
      54.  01:0235  D3 99                   out     (VDP_PORT_REGS),a
      55.  01:0237                      
      56.  01:0237  C9                      ret
      57.  01:0238                      
      58.  01:0238                      VDP_B_SetRegistersFromArray:
      59.  01:0238                          ; HL is an array of registers.
      60.  01:0238  11 91 82                ld      de, VDP_ShadowRegs      ; start of shadow area
      61.  01:023B  0E 08               	ld      c, 8                    ; 8 registers
      62.  01:023D                      .regloop:
      63.  01:023D  7E                    	ld      a, (hl)                 ; get register value from table
      64.  01:023E  D3 99               	out     (VDP_PORT_REGS), a      ; send it to the TMS
      65.  01:0240  3E 08               	ld      a, 8                    ; calculate current register number
      66.  01:0242  91                  	sub     c
      67.  01:0243  F6 80               	or      VDP_REG_WRITE           ; set high bit to indicate a register
      68.  01:0245  ED A0                   ldi                             ; shadow, then inc pointers and dec counter
      69.  01:0247  D3 99               	out     (VDP_PORT_REGS), a           ; send it to the TMS
      70.  01:0249  AF                      xor     a                       ; continue until count reaches 0
      71.  01:024A  B1                      or      c
      72.  01:024B  20 F0               	jr      nz, .regloop
      73.  01:024D  C9                  	ret
      74.  01:024E                      
      75.  01:024E                      ; set the next address of vram to write
      76.  01:024E                      ;   DE = address
      77.  01:024E                      VDP_B_SetVRAMWriteAddress:
      78.  01:024E  7B                      ld      a, e                    ; send lsb
      79.  01:024F  D3 99                   out     (VDP_PORT_REGS), a
      80.  01:0251  7A                      ld      a, d                    ; mask off msb to max of 16KB
      81.  01:0252  E6 3F                   and     $3F
      82.  01:0254  F6 40                   or      $40                     ; set second highest bit to indicate write
      83.  01:0256  D3 99                   out     (VDP_PORT_REGS), a           ; send msb
      84.  01:0258  C9                      ret
      85.  01:0259                      
      86.  01:0259                      VDP_B_Reset:
      87.  01:0259                          ; Set up blank mode.
      88.  01:0259  21 23 0B                ld      hl,VDP_DefaultRegisters
      89.  01:025C  CD 38 02                call    VDP_B_SetRegistersFromArray
      90.  01:025F                      
      91.  01:025F  11 00 00                ld      de,0
      92.  01:0262  CD 4E 02                call    VDP_B_SetVRAMWriteAddress
      93.  01:0265                      
      94.  01:0265  11 00 40                ld      de, $4000               ; write 16KB
      95.  01:0268  01 98 00                ld      bc, VDP_PORT_VRAM       ; writing 0s to vram
      96.  01:026B                      .clearloop:
      97.  01:026B  ED 41                   out     (c), b                  ; send to vram
      98.  01:026D  1B                      dec     de                      ; continue until counter is 0
      99.  01:026E  7A                      ld      a, d
     100.  01:026F  B3                      or      e
     101.  01:0270  20 F9                   jr      nz, .clearloop
     102.  01:0272                      
     103.  01:0272  C9                      ret
     104.  01:0273                      
     105.  01:0273                      VDP_B_GoTextMode:
     106.  01:0273  3E 00                   ld      a,0
     107.  01:0275  B2                      or      d
     108.  01:0276  B3                      or      e
     109.  01:0277  FE 00                   cp      0   ; If DE is 0, use the default font.
     110.  01:0279  20 03                   jr      nz,.copyfont
     111.  01:027B  11 0B 03                ld      de,VDP_ASCIIFont
     112.  01:027E                      
     113.  01:027E                      .copyfont
     114.  01:027E  EB                      ex      de,hl
     115.  01:027F  E5                      push    hl                      ; save address of font
     116.  01:0280  CD 59 02                call    VDP_B_Reset
     117.  01:0283  E1                      pop     hl                      ; load font into pattern table
     118.  01:0284  11 00 08                ld      de, $0800
     119.  01:0287  01 00 08                ld      bc, $0800
     120.  01:028A  CD 19 02                call    VDP_B_VRAMBlockCopy
     121.  01:028D  21 0B 0B                ld      hl,VDP_Regs_Text
     122.  01:0290  CD 38 02                call    VDP_B_SetRegistersFromArray
     123.  01:0293  C9                      ret
     124.  01:0294                      
     125.  01:0294                      VDP_B_GoGraphics1:
     126.  01:0294  CD 59 02                call    VDP_B_Reset
     127.  01:0297  21 13 0B                ld      hl,VDP_Regs_Graphics1
     128.  01:029A  CD 38 02                call    VDP_B_SetRegistersFromArray
     129.  01:029D  C9                      ret
     130.  01:029E                      
     131.  01:029E                      VDP_B_GoGraphics2:
     132.  01:029E  CD 59 02                call    VDP_B_Reset
     133.  01:02A1  21 1B 0B                ld      hl,VDP_Regs_Graphics2
     134.  01:02A4  CD 38 02                call    VDP_B_SetRegistersFromArray
     135.  01:02A7  C9                      ret
     136.  01:02A8                      
     137.  01:02A8                      ; set the address to place text at X/Y coordinate
     138.  01:02A8                      ;       A = X
     139.  01:02A8                      ;       E = Y
     140.  01:02A8                      VDP_B_SetTextPosition:
     141.  01:02A8  16 00                   ld      d, 0
     142.  01:02AA  21 00 00                ld      hl, 0
     143.  01:02AD  19                      add     hl, de                  ; Y x 1
     144.  01:02AE  29                      add     hl, hl                  ; Y x 2
     145.  01:02AF  29                      add     hl, hl                  ; Y x 4
     146.  01:02B0  19                      add     hl, de                  ; Y x 5
     147.  01:02B1  29                      add     hl, hl                  ; Y x 10
     148.  01:02B2  29                      add     hl, hl                  ; Y x 20
     149.  01:02B3  29                      add     hl, hl                  ; Y x 40
     150.  01:02B4  5F                      ld      e, a
     151.  01:02B5  19                      add     hl, de                  ; add column for final address
     152.  01:02B6  EB                      ex      de, hl                  ; send address to TMS
     153.  01:02B7  CD 4E 02                call    VDP_B_SetVRAMWriteAddress
     154.  01:02BA  C9                      ret
     155.  01:02BB                      
     156.  01:02BB                      VDP_B_GoBitmapMode:
     157.  01:02BB                          ; Set up Graphics II for a pixel-addressable bitmap.
     158.  01:02BB                          VDPBIOS VDP_GoGraphics2
     158.  01:02BB  CD 09 F0          >     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
     159.  01:02BE  CD DF 02                call    VDP_BI_SetupGraphicsIIColorTable
     160.  01:02C1  CD F6 02                call    VDP_BI_SetupGraphicsIINameTable
     161.  01:02C4  C9                      ret
     162.  01:02C5                      
     163.  01:02C5                      ; calculate address byte containing X/Y coordinate
     164.  01:02C5                      ;       B = Y position
     165.  01:02C5                      ;       C = X position
     166.  01:02C5                      ;       returns address in DE
     167.  01:02C5                      VDP_B_GetPixelAddress:
     168.  01:02C5  78                          ld      a, b                    ; d = (y / 8)
     169.  01:02C6  0F                          rrca
     170.  01:02C7  0F                          rrca
     171.  01:02C8  0F                          rrca
     172.  01:02C9  E6 1F                       and     $1F
     173.  01:02CB  57                          ld      d, a
     174.  01:02CC                      
     175.  01:02CC  79                          ld      a, c                    ; e = (x & f8)
     176.  01:02CD  E6 F8                       and     $F8
     177.  01:02CF  5F                          ld      e, a
     178.  01:02D0                      
     179.  01:02D0  78                          ld      a, b                    ; e += (y & 7)
     180.  01:02D1  E6 07                       and     7
     181.  01:02D3  B3                          or      e
     182.  01:02D4  5F                          ld      e, a
     183.  01:02D5  C9                          ret
     184.  01:02D6                      
     185.  01:02D6                      ; set the next address of vram to read
     186.  01:02D6                      ;       DE = address
     187.  01:02D6                      VDP_B_SetVRAMReadAddress:
     188.  01:02D6  7B                      ld      a, e                    ; send lsb
     189.  01:02D7  D3 99                   out     (VDP_PORT_REGS), a
     190.  01:02D9  7A                      ld      a, d                    ; mask off msb to max of 16KB
     191.  01:02DA  E6 3F                   and     $3F
     192.  01:02DC  D3 99                   out     (VDP_PORT_REGS), a      ; send msb
     193.  01:02DE  C9                      ret
     194.  01:02DF                      
     195.  01:02DF                      VDP_BI_SetupGraphicsIIColorTable:
     196.  01:02DF                          ; Set up the color table.
     197.  01:02DF  11 00 20                ld      de,$2000
     198.  01:02E2                          VDPBIOS VDP_SetVRAMWriteAddress
     198.  01:02E2  CD 0C F0          >     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
     199.  01:02E5                      
     200.  01:02E5                          ; Fill the color table.
     201.  01:02E5  16 18                   ld      d,$18   ; outer loops
     202.  01:02E7  06 00                   ld      b,0     ; 256 inner loops
     203.  01:02E9  3E F0                   ld      a,$F0   ; fg white, bg black
     204.  01:02EB                      .loop:
     205.  01:02EB  D3 98                   out     (VDP_PORT_VRAM),a
     206.  01:02ED                          VRAMWait
     206.  01:02ED  00 (3)            >         defs    14/tmswait, 0
     207.  01:02F0  10 F9                   djnz    .loop
     208.  01:02F2  15                      dec     d
     209.  01:02F3  20 F6                   jr      nz,.loop
     210.  01:02F5                          
     211.  01:02F5  C9                      ret
     212.  01:02F6                      
     213.  01:02F6                      VDP_BI_SetupGraphicsIINameTable:
     214.  01:02F6                          ; Fill the nametable.
     215.  01:02F6                          ; Write $00-$FF sequentially to VRAM 3 times.
     216.  01:02F6                          ; Now the pattern table is a bitmap. Magic!
     217.  01:02F6                      
     218.  01:02F6  11 00 38                ld      de,$3800
     219.  01:02F9                          VDPBIOS VDP_SetVRAMWriteAddress
     219.  01:02F9  CD 0C F0          >     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
     220.  01:02FC                      
     221.  01:02FC  16 03                   ld      d,3 ; outer loops
     222.  01:02FE  06 00                   ld      b,0 ; 256 inner loops
     223.  01:0300  3E 00                   ld      a,0 ; fg white, bg green
     224.  01:0302                      .drawLoop1:
     225.  01:0302  D3 98                   out     (VDP_PORT_VRAM),a
     226.  01:0304  3C                      inc     a
     227.  01:0305  00 (3)                  defs    14/tmswait, 0         ; nops to waste time
     228.  01:0308  10 F8                   djnz    .drawLoop1
     229.  01:030A                      
     230.  01:030A  C9                      ret
     231.  01:030B                      	
     232.  01:030B                      VDP_ASCIIFont:
     233.  01:030B                          include "tms/tmsfont.asm"
       1:  01:030B                      ; 6x8 bitmap font by Oleg Kosenkov
       2:  01:030B                      ; Source: https://github.com/idispatch/raster-fonts/blob/master/font-6x8.c
       3:  01:030B                      
       4:  01:030B                              ; code=0, hex=0x00, ascii="^@"
       5:  01:030B  00                          defb %00000000
       6:  01:030C  00                          defb %00000000
       7:  01:030D  00                          defb %00000000
       8:  01:030E  00                          defb %00000000
       9:  01:030F  00                          defb %00000000
      10:  01:0310  00                          defb %00000000
      11:  01:0311  00                          defb %00000000
      12:  01:0312  00                          defb %00000000
      13:  01:0313                      
      14:  01:0313                              ; code=1, hex=0x01, ascii="^A"
      15:  01:0313  38                          defb %00111000
      16:  01:0314  44                          defb %01000100
      17:  01:0315  6C                          defb %01101100
      18:  01:0316  44                          defb %01000100
      19:  01:0317  54                          defb %01010100
      20:  01:0318  44                          defb %01000100
      21:  01:0319  38                          defb %00111000
      22:  01:031A  00                          defb %00000000
      23:  01:031B                      
      24:  01:031B                              ; code=2, hex=0x02, ascii="^B"
      25:  01:031B  38                          defb %00111000
      26:  01:031C  7C                          defb %01111100
      27:  01:031D  54                          defb %01010100
      28:  01:031E  7C                          defb %01111100
      29:  01:031F  44                          defb %01000100
      30:  01:0320  7C                          defb %01111100
      31:  01:0321  38                          defb %00111000
      32:  01:0322  00                          defb %00000000
      33:  01:0323                      
      34:  01:0323                              ; code=3, hex=0x03, ascii="^C"
      35:  01:0323  00                          defb %00000000
      36:  01:0324  28                          defb %00101000
      37:  01:0325  7C                          defb %01111100
      38:  01:0326  7C                          defb %01111100
      39:  01:0327  7C                          defb %01111100
      40:  01:0328  38                          defb %00111000
      41:  01:0329  10                          defb %00010000
      42:  01:032A  00                          defb %00000000
      43:  01:032B                      
      44:  01:032B                              ; code=4, hex=0x04, ascii="^D"
      45:  01:032B  00                          defb %00000000
      46:  01:032C  10                          defb %00010000
      47:  01:032D  38                          defb %00111000
      48:  01:032E  7C                          defb %01111100
      49:  01:032F  7C                          defb %01111100
      50:  01:0330  38                          defb %00111000
      51:  01:0331  10                          defb %00010000
      52:  01:0332  00                          defb %00000000
      53:  01:0333                      
      54:  01:0333                              ; code=5, hex=0x05, ascii="^E"
      55:  01:0333  10                          defb %00010000
      56:  01:0334  38                          defb %00111000
      57:  01:0335  38                          defb %00111000
      58:  01:0336  10                          defb %00010000
      59:  01:0337  7C                          defb %01111100
      60:  01:0338  7C                          defb %01111100
      61:  01:0339  10                          defb %00010000
      62:  01:033A  00                          defb %00000000
      63:  01:033B                      
      64:  01:033B                              ; code=6, hex=0x06, ascii="^F"
      65:  01:033B  00                          defb %00000000
      66:  01:033C  10                          defb %00010000
      67:  01:033D  38                          defb %00111000
      68:  01:033E  7C                          defb %01111100
      69:  01:033F  7C                          defb %01111100
      70:  01:0340  10                          defb %00010000
      71:  01:0341  38                          defb %00111000
      72:  01:0342  00                          defb %00000000
      73:  01:0343                      
      74:  01:0343                              ; code=7, hex=0x07, ascii="^G"
      75:  01:0343  00                          defb %00000000
      76:  01:0344  00                          defb %00000000
      77:  01:0345  00                          defb %00000000
      78:  01:0346  30                          defb %00110000
      79:  01:0347  30                          defb %00110000
      80:  01:0348  00                          defb %00000000
      81:  01:0349  00                          defb %00000000
      82:  01:034A  00                          defb %00000000
      83:  01:034B                      
      84:  01:034B                              ; code=8, hex=0x08, ascii="^H"
      85:  01:034B  FC                          defb %11111100
      86:  01:034C  FC                          defb %11111100
      87:  01:034D  FC                          defb %11111100
      88:  01:034E  CC                          defb %11001100
      89:  01:034F  CC                          defb %11001100
      90:  01:0350  FC                          defb %11111100
      91:  01:0351  FC                          defb %11111100
      92:  01:0352  FC                          defb %11111100
      93:  01:0353                      
      94:  01:0353                              ; code=9, hex=0x09, ascii="^I"
      95:  01:0353  00                          defb %00000000
      96:  01:0354  00                          defb %00000000
      97:  01:0355  78                          defb %01111000
      98:  01:0356  48                          defb %01001000
      99:  01:0357  48                          defb %01001000
     100:  01:0358  78                          defb %01111000
     101:  01:0359  00                          defb %00000000
     102:  01:035A  00                          defb %00000000
     103:  01:035B                      
     104:  01:035B                              ; code=10, hex=0x0A, ascii="^J"
     105:  01:035B  FC                          defb %11111100
     106:  01:035C  FC                          defb %11111100
     107:  01:035D  84                          defb %10000100
     108:  01:035E  B4                          defb %10110100
     109:  01:035F  B4                          defb %10110100
     110:  01:0360  84                          defb %10000100
     111:  01:0361  FC                          defb %11111100
     112:  01:0362  FC                          defb %11111100
     113:  01:0363                      
     114:  01:0363                              ; code=11, hex=0x0B, ascii="^K"
     115:  01:0363  00                          defb %00000000
     116:  01:0364  1C                          defb %00011100
     117:  01:0365  0C                          defb %00001100
     118:  01:0366  34                          defb %00110100
     119:  01:0367  48                          defb %01001000
     120:  01:0368  48                          defb %01001000
     121:  01:0369  30                          defb %00110000
     122:  01:036A  00                          defb %00000000
     123:  01:036B                      
     124:  01:036B                              ; code=12, hex=0x0C, ascii="^L"
     125:  01:036B  38                          defb %00111000
     126:  01:036C  44                          defb %01000100
     127:  01:036D  44                          defb %01000100
     128:  01:036E  38                          defb %00111000
     129:  01:036F  10                          defb %00010000
     130:  01:0370  38                          defb %00111000
     131:  01:0371  10                          defb %00010000
     132:  01:0372  00                          defb %00000000
     133:  01:0373                      
     134:  01:0373                              ; code=13, hex=0x0D, ascii="^M"
     135:  01:0373  10                          defb %00010000
     136:  01:0374  18                          defb %00011000
     137:  01:0375  14                          defb %00010100
     138:  01:0376  10                          defb %00010000
     139:  01:0377  30                          defb %00110000
     140:  01:0378  70                          defb %01110000
     141:  01:0379  60                          defb %01100000
     142:  01:037A  00                          defb %00000000
     143:  01:037B                      
     144:  01:037B                              ; code=14, hex=0x0E, ascii="^N"
     145:  01:037B  0C                          defb %00001100
     146:  01:037C  34                          defb %00110100
     147:  01:037D  2C                          defb %00101100
     148:  01:037E  34                          defb %00110100
     149:  01:037F  2C                          defb %00101100
     150:  01:0380  6C                          defb %01101100
     151:  01:0381  60                          defb %01100000
     152:  01:0382  00                          defb %00000000
     153:  01:0383                      
     154:  01:0383                              ; code=15, hex=0x0F, ascii="^O"
     155:  01:0383  00                          defb %00000000
     156:  01:0384  54                          defb %01010100
     157:  01:0385  38                          defb %00111000
     158:  01:0386  6C                          defb %01101100
     159:  01:0387  38                          defb %00111000
     160:  01:0388  54                          defb %01010100
     161:  01:0389  00                          defb %00000000
     162:  01:038A  00                          defb %00000000
     163:  01:038B                      
     164:  01:038B                              ; code=16, hex=0x10, ascii="^P"
     165:  01:038B  20                          defb %00100000
     166:  01:038C  30                          defb %00110000
     167:  01:038D  38                          defb %00111000
     168:  01:038E  3C                          defb %00111100
     169:  01:038F  38                          defb %00111000
     170:  01:0390  30                          defb %00110000
     171:  01:0391  20                          defb %00100000
     172:  01:0392  00                          defb %00000000
     173:  01:0393                      
     174:  01:0393                              ; code=17, hex=0x11, ascii="^Q"
     175:  01:0393  08                          defb %00001000
     176:  01:0394  18                          defb %00011000
     177:  01:0395  38                          defb %00111000
     178:  01:0396  78                          defb %01111000
     179:  01:0397  38                          defb %00111000
     180:  01:0398  18                          defb %00011000
     181:  01:0399  08                          defb %00001000
     182:  01:039A  00                          defb %00000000
     183:  01:039B                      
     184:  01:039B                              ; code=18, hex=0x12, ascii="^R"
     185:  01:039B  10                          defb %00010000
     186:  01:039C  38                          defb %00111000
     187:  01:039D  7C                          defb %01111100
     188:  01:039E  10                          defb %00010000
     189:  01:039F  7C                          defb %01111100
     190:  01:03A0  38                          defb %00111000
     191:  01:03A1  10                          defb %00010000
     192:  01:03A2  00                          defb %00000000
     193:  01:03A3                      
     194:  01:03A3                              ; code=19, hex=0x13, ascii="^S"
     195:  01:03A3  28                          defb %00101000
     196:  01:03A4  28                          defb %00101000
     197:  01:03A5  28                          defb %00101000
     198:  01:03A6  28                          defb %00101000
     199:  01:03A7  28                          defb %00101000
     200:  01:03A8  00                          defb %00000000
     201:  01:03A9  28                          defb %00101000
     202:  01:03AA  00                          defb %00000000
     203:  01:03AB                      
     204:  01:03AB                              ; code=20, hex=0x14, ascii="^T"
     205:  01:03AB  3C                          defb %00111100
     206:  01:03AC  54                          defb %01010100
     207:  01:03AD  54                          defb %01010100
     208:  01:03AE  34                          defb %00110100
     209:  01:03AF  14                          defb %00010100
     210:  01:03B0  14                          defb %00010100
     211:  01:03B1  14                          defb %00010100
     212:  01:03B2  00                          defb %00000000
     213:  01:03B3                      
     214:  01:03B3                              ; code=21, hex=0x15, ascii="^U"
     215:  01:03B3  38                          defb %00111000
     216:  01:03B4  44                          defb %01000100
     217:  01:03B5  30                          defb %00110000
     218:  01:03B6  28                          defb %00101000
     219:  01:03B7  18                          defb %00011000
     220:  01:03B8  44                          defb %01000100
     221:  01:03B9  38                          defb %00111000
     222:  01:03BA  00                          defb %00000000
     223:  01:03BB                      
     224:  01:03BB                              ; code=22, hex=0x16, ascii="^V"
     225:  01:03BB  00                          defb %00000000
     226:  01:03BC  00                          defb %00000000
     227:  01:03BD  00                          defb %00000000
     228:  01:03BE  00                          defb %00000000
     229:  01:03BF  00                          defb %00000000
     230:  01:03C0  78                          defb %01111000
     231:  01:03C1  78                          defb %01111000
     232:  01:03C2  00                          defb %00000000
     233:  01:03C3                      
     234:  01:03C3                              ; code=23, hex=0x17, ascii="^W"
     235:  01:03C3  10                          defb %00010000
     236:  01:03C4  38                          defb %00111000
     237:  01:03C5  7C                          defb %01111100
     238:  01:03C6  10                          defb %00010000
     239:  01:03C7  7C                          defb %01111100
     240:  01:03C8  38                          defb %00111000
     241:  01:03C9  10                          defb %00010000
     242:  01:03CA  38                          defb %00111000
     243:  01:03CB                      
     244:  01:03CB                              ; code=24, hex=0x18, ascii="^X"
     245:  01:03CB  10                          defb %00010000
     246:  01:03CC  38                          defb %00111000
     247:  01:03CD  7C                          defb %01111100
     248:  01:03CE  10                          defb %00010000
     249:  01:03CF  10                          defb %00010000
     250:  01:03D0  10                          defb %00010000
     251:  01:03D1  10                          defb %00010000
     252:  01:03D2  00                          defb %00000000
     253:  01:03D3                      
     254:  01:03D3                              ; code=25, hex=0x19, ascii="^Y"
     255:  01:03D3  10                          defb %00010000
     256:  01:03D4  10                          defb %00010000
     257:  01:03D5  10                          defb %00010000
     258:  01:03D6  10                          defb %00010000
     259:  01:03D7  7C                          defb %01111100
     260:  01:03D8  38                          defb %00111000
     261:  01:03D9  10                          defb %00010000
     262:  01:03DA  00                          defb %00000000
     263:  01:03DB                      
     264:  01:03DB                              ; code=26, hex=0x1A, ascii="^Z"
     265:  01:03DB  00                          defb %00000000
     266:  01:03DC  10                          defb %00010000
     267:  01:03DD  18                          defb %00011000
     268:  01:03DE  7C                          defb %01111100
     269:  01:03DF  18                          defb %00011000
     270:  01:03E0  10                          defb %00010000
     271:  01:03E1  00                          defb %00000000
     272:  01:03E2  00                          defb %00000000
     273:  01:03E3                      
     274:  01:03E3                              ; code=27, hex=0x1B, ascii="^["
     275:  01:03E3  00                          defb %00000000
     276:  01:03E4  10                          defb %00010000
     277:  01:03E5  30                          defb %00110000
     278:  01:03E6  7C                          defb %01111100
     279:  01:03E7  30                          defb %00110000
     280:  01:03E8  10                          defb %00010000
     281:  01:03E9  00                          defb %00000000
     282:  01:03EA  00                          defb %00000000
     283:  01:03EB                      
     284:  01:03EB                              ; code=28, hex=0x1C, ascii="^\"
     285:  01:03EB  00                          defb %00000000
     286:  01:03EC  00                          defb %00000000
     287:  01:03ED  00                          defb %00000000
     288:  01:03EE  40                          defb %01000000
     289:  01:03EF  40                          defb %01000000
     290:  01:03F0  40                          defb %01000000
     291:  01:03F1  7C                          defb %01111100
     292:  01:03F2  00                          defb %00000000
     293:  01:03F3                      
     294:  01:03F3                              ; code=29, hex=0x1D, ascii="^]"
     295:  01:03F3  00                          defb %00000000
     296:  01:03F4  28                          defb %00101000
     297:  01:03F5  28                          defb %00101000
     298:  01:03F6  7C                          defb %01111100
     299:  01:03F7  28                          defb %00101000
     300:  01:03F8  28                          defb %00101000
     301:  01:03F9  00                          defb %00000000
     302:  01:03FA  00                          defb %00000000
     303:  01:03FB                      
     304:  01:03FB                              ; code=30, hex=0x1E, ascii="^^"
     305:  01:03FB  10                          defb %00010000
     306:  01:03FC  10                          defb %00010000
     307:  01:03FD  38                          defb %00111000
     308:  01:03FE  38                          defb %00111000
     309:  01:03FF  7C                          defb %01111100
     310:  01:0400  7C                          defb %01111100
     311:  01:0401  00                          defb %00000000
     312:  01:0402  00                          defb %00000000
     313:  01:0403                      
     314:  01:0403                              ; code=31, hex=0x1F, ascii="^_"
     315:  01:0403  7C                          defb %01111100
     316:  01:0404  7C                          defb %01111100
     317:  01:0405  38                          defb %00111000
     318:  01:0406  38                          defb %00111000
     319:  01:0407  10                          defb %00010000
     320:  01:0408  10                          defb %00010000
     321:  01:0409  00                          defb %00000000
     322:  01:040A  00                          defb %00000000
     323:  01:040B                      
     324:  01:040B                              ; code=32, hex=0x20, ascii=" "
     325:  01:040B  00                          defb %00000000
     326:  01:040C  00                          defb %00000000
     327:  01:040D  00                          defb %00000000
     328:  01:040E  00                          defb %00000000
     329:  01:040F  00                          defb %00000000
     330:  01:0410  00                          defb %00000000
     331:  01:0411  00                          defb %00000000
     332:  01:0412  00                          defb %00000000
     333:  01:0413                      
     334:  01:0413                              ; code=33, hex=0x21, ascii="!"
     335:  01:0413  10                          defb %00010000
     336:  01:0414  38                          defb %00111000
     337:  01:0415  38                          defb %00111000
     338:  01:0416  10                          defb %00010000
     339:  01:0417  10                          defb %00010000
     340:  01:0418  00                          defb %00000000
     341:  01:0419  10                          defb %00010000
     342:  01:041A  00                          defb %00000000
     343:  01:041B                      
     344:  01:041B                              ; code=34, hex=0x22, ascii="""
     345:  01:041B  6C                          defb %01101100
     346:  01:041C  6C                          defb %01101100
     347:  01:041D  48                          defb %01001000
     348:  01:041E  00                          defb %00000000
     349:  01:041F  00                          defb %00000000
     350:  01:0420  00                          defb %00000000
     351:  01:0421  00                          defb %00000000
     352:  01:0422  00                          defb %00000000
     353:  01:0423                      
     354:  01:0423                              ; code=35, hex=0x23, ascii="#"
     355:  01:0423  00                          defb %00000000
     356:  01:0424  28                          defb %00101000
     357:  01:0425  7C                          defb %01111100
     358:  01:0426  28                          defb %00101000
     359:  01:0427  28                          defb %00101000
     360:  01:0428  7C                          defb %01111100
     361:  01:0429  28                          defb %00101000
     362:  01:042A  00                          defb %00000000
     363:  01:042B                      
     364:  01:042B                              ; code=36, hex=0x24, ascii="$"
     365:  01:042B  20                          defb %00100000
     366:  01:042C  38                          defb %00111000
     367:  01:042D  40                          defb %01000000
     368:  01:042E  30                          defb %00110000
     369:  01:042F  08                          defb %00001000
     370:  01:0430  70                          defb %01110000
     371:  01:0431  10                          defb %00010000
     372:  01:0432  00                          defb %00000000
     373:  01:0433                      
     374:  01:0433                              ; code=37, hex=0x25, ascii="%"
     375:  01:0433  64                          defb %01100100
     376:  01:0434  64                          defb %01100100
     377:  01:0435  08                          defb %00001000
     378:  01:0436  10                          defb %00010000
     379:  01:0437  20                          defb %00100000
     380:  01:0438  4C                          defb %01001100
     381:  01:0439  4C                          defb %01001100
     382:  01:043A  00                          defb %00000000
     383:  01:043B                      
     384:  01:043B                              ; code=38, hex=0x26, ascii="&"
     385:  01:043B  20                          defb %00100000
     386:  01:043C  50                          defb %01010000
     387:  01:043D  50                          defb %01010000
     388:  01:043E  20                          defb %00100000
     389:  01:043F  54                          defb %01010100
     390:  01:0440  48                          defb %01001000
     391:  01:0441  34                          defb %00110100
     392:  01:0442  00                          defb %00000000
     393:  01:0443                      
     394:  01:0443                              ; code=39, hex=0x27, ascii="'"
     395:  01:0443  30                          defb %00110000
     396:  01:0444  30                          defb %00110000
     397:  01:0445  20                          defb %00100000
     398:  01:0446  00                          defb %00000000
     399:  01:0447  00                          defb %00000000
     400:  01:0448  00                          defb %00000000
     401:  01:0449  00                          defb %00000000
     402:  01:044A  00                          defb %00000000
     403:  01:044B                      
     404:  01:044B                              ; code=40, hex=0x28, ascii="("
     405:  01:044B  10                          defb %00010000
     406:  01:044C  20                          defb %00100000
     407:  01:044D  20                          defb %00100000
     408:  01:044E  20                          defb %00100000
     409:  01:044F  20                          defb %00100000
     410:  01:0450  20                          defb %00100000
     411:  01:0451  10                          defb %00010000
     412:  01:0452  00                          defb %00000000
     413:  01:0453                      
     414:  01:0453                              ; code=41, hex=0x29, ascii=")"
     415:  01:0453  20                          defb %00100000
     416:  01:0454  10                          defb %00010000
     417:  01:0455  10                          defb %00010000
     418:  01:0456  10                          defb %00010000
     419:  01:0457  10                          defb %00010000
     420:  01:0458  10                          defb %00010000
     421:  01:0459  20                          defb %00100000
     422:  01:045A  00                          defb %00000000
     423:  01:045B                      
     424:  01:045B                              ; code=42, hex=0x2A, ascii="*"
     425:  01:045B  00                          defb %00000000
     426:  01:045C  28                          defb %00101000
     427:  01:045D  38                          defb %00111000
     428:  01:045E  7C                          defb %01111100
     429:  01:045F  38                          defb %00111000
     430:  01:0460  28                          defb %00101000
     431:  01:0461  00                          defb %00000000
     432:  01:0462  00                          defb %00000000
     433:  01:0463                      
     434:  01:0463                              ; code=43, hex=0x2B, ascii="+"
     435:  01:0463  00                          defb %00000000
     436:  01:0464  10                          defb %00010000
     437:  01:0465  10                          defb %00010000
     438:  01:0466  7C                          defb %01111100
     439:  01:0467  10                          defb %00010000
     440:  01:0468  10                          defb %00010000
     441:  01:0469  00                          defb %00000000
     442:  01:046A  00                          defb %00000000
     443:  01:046B                      
     444:  01:046B                              ; code=44, hex=0x2C, ascii=","
     445:  01:046B  00                          defb %00000000
     446:  01:046C  00                          defb %00000000
     447:  01:046D  00                          defb %00000000
     448:  01:046E  00                          defb %00000000
     449:  01:046F  00                          defb %00000000
     450:  01:0470  30                          defb %00110000
     451:  01:0471  30                          defb %00110000
     452:  01:0472  20                          defb %00100000
     453:  01:0473                      
     454:  01:0473                              ; code=45, hex=0x2D, ascii="-"
     455:  01:0473  00                          defb %00000000
     456:  01:0474  00                          defb %00000000
     457:  01:0475  00                          defb %00000000
     458:  01:0476  7C                          defb %01111100
     459:  01:0477  00                          defb %00000000
     460:  01:0478  00                          defb %00000000
     461:  01:0479  00                          defb %00000000
     462:  01:047A  00                          defb %00000000
     463:  01:047B                      
     464:  01:047B                              ; code=46, hex=0x2E, ascii="."
     465:  01:047B  00                          defb %00000000
     466:  01:047C  00                          defb %00000000
     467:  01:047D  00                          defb %00000000
     468:  01:047E  00                          defb %00000000
     469:  01:047F  00                          defb %00000000
     470:  01:0480  30                          defb %00110000
     471:  01:0481  30                          defb %00110000
     472:  01:0482  00                          defb %00000000
     473:  01:0483                      
     474:  01:0483                              ; code=47, hex=0x2F, ascii="/"
     475:  01:0483  00                          defb %00000000
     476:  01:0484  04                          defb %00000100
     477:  01:0485  08                          defb %00001000
     478:  01:0486  10                          defb %00010000
     479:  01:0487  20                          defb %00100000
     480:  01:0488  40                          defb %01000000
     481:  01:0489  00                          defb %00000000
     482:  01:048A  00                          defb %00000000
     483:  01:048B                      
     484:  01:048B                              ; code=48, hex=0x30, ascii="0"
     485:  01:048B  38                          defb %00111000
     486:  01:048C  44                          defb %01000100
     487:  01:048D  4C                          defb %01001100
     488:  01:048E  54                          defb %01010100
     489:  01:048F  64                          defb %01100100
     490:  01:0490  44                          defb %01000100
     491:  01:0491  38                          defb %00111000
     492:  01:0492  00                          defb %00000000
     493:  01:0493                      
     494:  01:0493                              ; code=49, hex=0x31, ascii="1"
     495:  01:0493  10                          defb %00010000
     496:  01:0494  30                          defb %00110000
     497:  01:0495  10                          defb %00010000
     498:  01:0496  10                          defb %00010000
     499:  01:0497  10                          defb %00010000
     500:  01:0498  10                          defb %00010000
     501:  01:0499  38                          defb %00111000
     502:  01:049A  00                          defb %00000000
     503:  01:049B                      
     504:  01:049B                              ; code=50, hex=0x32, ascii="2"
     505:  01:049B  38                          defb %00111000
     506:  01:049C  44                          defb %01000100
     507:  01:049D  04                          defb %00000100
     508:  01:049E  18                          defb %00011000
     509:  01:049F  20                          defb %00100000
     510:  01:04A0  40                          defb %01000000
     511:  01:04A1  7C                          defb %01111100
     512:  01:04A2  00                          defb %00000000
     513:  01:04A3                      
     514:  01:04A3                              ; code=51, hex=0x33, ascii="3"
     515:  01:04A3  38                          defb %00111000
     516:  01:04A4  44                          defb %01000100
     517:  01:04A5  04                          defb %00000100
     518:  01:04A6  38                          defb %00111000
     519:  01:04A7  04                          defb %00000100
     520:  01:04A8  44                          defb %01000100
     521:  01:04A9  38                          defb %00111000
     522:  01:04AA  00                          defb %00000000
     523:  01:04AB                      
     524:  01:04AB                              ; code=52, hex=0x34, ascii="4"
     525:  01:04AB  08                          defb %00001000
     526:  01:04AC  18                          defb %00011000
     527:  01:04AD  28                          defb %00101000
     528:  01:04AE  48                          defb %01001000
     529:  01:04AF  7C                          defb %01111100
     530:  01:04B0  08                          defb %00001000
     531:  01:04B1  08                          defb %00001000
     532:  01:04B2  00                          defb %00000000
     533:  01:04B3                      
     534:  01:04B3                              ; code=53, hex=0x35, ascii="5"
     535:  01:04B3  7C                          defb %01111100
     536:  01:04B4  40                          defb %01000000
     537:  01:04B5  40                          defb %01000000
     538:  01:04B6  78                          defb %01111000
     539:  01:04B7  04                          defb %00000100
     540:  01:04B8  44                          defb %01000100
     541:  01:04B9  38                          defb %00111000
     542:  01:04BA  00                          defb %00000000
     543:  01:04BB                      
     544:  01:04BB                              ; code=54, hex=0x36, ascii="6"
     545:  01:04BB  18                          defb %00011000
     546:  01:04BC  20                          defb %00100000
     547:  01:04BD  40                          defb %01000000
     548:  01:04BE  78                          defb %01111000
     549:  01:04BF  44                          defb %01000100
     550:  01:04C0  44                          defb %01000100
     551:  01:04C1  38                          defb %00111000
     552:  01:04C2  00                          defb %00000000
     553:  01:04C3                      
     554:  01:04C3                              ; code=55, hex=0x37, ascii="7"
     555:  01:04C3  7C                          defb %01111100
     556:  01:04C4  04                          defb %00000100
     557:  01:04C5  08                          defb %00001000
     558:  01:04C6  10                          defb %00010000
     559:  01:04C7  20                          defb %00100000
     560:  01:04C8  20                          defb %00100000
     561:  01:04C9  20                          defb %00100000
     562:  01:04CA  00                          defb %00000000
     563:  01:04CB                      
     564:  01:04CB                              ; code=56, hex=0x38, ascii="8"
     565:  01:04CB  38                          defb %00111000
     566:  01:04CC  44                          defb %01000100
     567:  01:04CD  44                          defb %01000100
     568:  01:04CE  38                          defb %00111000
     569:  01:04CF  44                          defb %01000100
     570:  01:04D0  44                          defb %01000100
     571:  01:04D1  38                          defb %00111000
     572:  01:04D2  00                          defb %00000000
     573:  01:04D3                      
     574:  01:04D3                              ; code=57, hex=0x39, ascii="9"
     575:  01:04D3  38                          defb %00111000
     576:  01:04D4  44                          defb %01000100
     577:  01:04D5  44                          defb %01000100
     578:  01:04D6  3C                          defb %00111100
     579:  01:04D7  04                          defb %00000100
     580:  01:04D8  08                          defb %00001000
     581:  01:04D9  30                          defb %00110000
     582:  01:04DA  00                          defb %00000000
     583:  01:04DB                      
     584:  01:04DB                              ; code=58, hex=0x3A, ascii=":"
     585:  01:04DB  00                          defb %00000000
     586:  01:04DC  00                          defb %00000000
     587:  01:04DD  30                          defb %00110000
     588:  01:04DE  30                          defb %00110000
     589:  01:04DF  00                          defb %00000000
     590:  01:04E0  30                          defb %00110000
     591:  01:04E1  30                          defb %00110000
     592:  01:04E2  00                          defb %00000000
     593:  01:04E3                      
     594:  01:04E3                              ; code=59, hex=0x3B, ascii=";"
     595:  01:04E3  00                          defb %00000000
     596:  01:04E4  00                          defb %00000000
     597:  01:04E5  30                          defb %00110000
     598:  01:04E6  30                          defb %00110000
     599:  01:04E7  00                          defb %00000000
     600:  01:04E8  30                          defb %00110000
     601:  01:04E9  30                          defb %00110000
     602:  01:04EA  20                          defb %00100000
     603:  01:04EB                      
     604:  01:04EB                              ; code=60, hex=0x3C, ascii="<"
     605:  01:04EB  08                          defb %00001000
     606:  01:04EC  10                          defb %00010000
     607:  01:04ED  20                          defb %00100000
     608:  01:04EE  40                          defb %01000000
     609:  01:04EF  20                          defb %00100000
     610:  01:04F0  10                          defb %00010000
     611:  01:04F1  08                          defb %00001000
     612:  01:04F2  00                          defb %00000000
     613:  01:04F3                      
     614:  01:04F3                              ; code=61, hex=0x3D, ascii="="
     615:  01:04F3  00                          defb %00000000
     616:  01:04F4  00                          defb %00000000
     617:  01:04F5  7C                          defb %01111100
     618:  01:04F6  00                          defb %00000000
     619:  01:04F7  00                          defb %00000000
     620:  01:04F8  7C                          defb %01111100
     621:  01:04F9  00                          defb %00000000
     622:  01:04FA  00                          defb %00000000
     623:  01:04FB                      
     624:  01:04FB                              ; code=62, hex=0x3E, ascii=">"
     625:  01:04FB  20                          defb %00100000
     626:  01:04FC  10                          defb %00010000
     627:  01:04FD  08                          defb %00001000
     628:  01:04FE  04                          defb %00000100
     629:  01:04FF  08                          defb %00001000
     630:  01:0500  10                          defb %00010000
     631:  01:0501  20                          defb %00100000
     632:  01:0502  00                          defb %00000000
     633:  01:0503                      
     634:  01:0503                              ; code=63, hex=0x3F, ascii="?"
     635:  01:0503  38                          defb %00111000
     636:  01:0504  44                          defb %01000100
     637:  01:0505  04                          defb %00000100
     638:  01:0506  18                          defb %00011000
     639:  01:0507  10                          defb %00010000
     640:  01:0508  00                          defb %00000000
     641:  01:0509  10                          defb %00010000
     642:  01:050A  00                          defb %00000000
     643:  01:050B                      
     644:  01:050B                              ; code=64, hex=0x40, ascii="@"
     645:  01:050B  38                          defb %00111000
     646:  01:050C  44                          defb %01000100
     647:  01:050D  5C                          defb %01011100
     648:  01:050E  54                          defb %01010100
     649:  01:050F  5C                          defb %01011100
     650:  01:0510  40                          defb %01000000
     651:  01:0511  38                          defb %00111000
     652:  01:0512  00                          defb %00000000
     653:  01:0513                      
     654:  01:0513                              ; code=65, hex=0x41, ascii="A"
     655:  01:0513  38                          defb %00111000
     656:  01:0514  44                          defb %01000100
     657:  01:0515  44                          defb %01000100
     658:  01:0516  44                          defb %01000100
     659:  01:0517  7C                          defb %01111100
     660:  01:0518  44                          defb %01000100
     661:  01:0519  44                          defb %01000100
     662:  01:051A  00                          defb %00000000
     663:  01:051B                      
     664:  01:051B                              ; code=66, hex=0x42, ascii="B"
     665:  01:051B  78                          defb %01111000
     666:  01:051C  44                          defb %01000100
     667:  01:051D  44                          defb %01000100
     668:  01:051E  78                          defb %01111000
     669:  01:051F  44                          defb %01000100
     670:  01:0520  44                          defb %01000100
     671:  01:0521  78                          defb %01111000
     672:  01:0522  00                          defb %00000000
     673:  01:0523                      
     674:  01:0523                              ; code=67, hex=0x43, ascii="C"
     675:  01:0523  38                          defb %00111000
     676:  01:0524  44                          defb %01000100
     677:  01:0525  40                          defb %01000000
     678:  01:0526  40                          defb %01000000
     679:  01:0527  40                          defb %01000000
     680:  01:0528  44                          defb %01000100
     681:  01:0529  38                          defb %00111000
     682:  01:052A  00                          defb %00000000
     683:  01:052B                      
     684:  01:052B                              ; code=68, hex=0x44, ascii="D"
     685:  01:052B  78                          defb %01111000
     686:  01:052C  44                          defb %01000100
     687:  01:052D  44                          defb %01000100
     688:  01:052E  44                          defb %01000100
     689:  01:052F  44                          defb %01000100
     690:  01:0530  44                          defb %01000100
     691:  01:0531  78                          defb %01111000
     692:  01:0532  00                          defb %00000000
     693:  01:0533                      
     694:  01:0533                              ; code=69, hex=0x45, ascii="E"
     695:  01:0533  7C                          defb %01111100
     696:  01:0534  40                          defb %01000000
     697:  01:0535  40                          defb %01000000
     698:  01:0536  78                          defb %01111000
     699:  01:0537  40                          defb %01000000
     700:  01:0538  40                          defb %01000000
     701:  01:0539  7C                          defb %01111100
     702:  01:053A  00                          defb %00000000
     703:  01:053B                      
     704:  01:053B                              ; code=70, hex=0x46, ascii="F"
     705:  01:053B  7C                          defb %01111100
     706:  01:053C  40                          defb %01000000
     707:  01:053D  40                          defb %01000000
     708:  01:053E  78                          defb %01111000
     709:  01:053F  40                          defb %01000000
     710:  01:0540  40                          defb %01000000
     711:  01:0541  40                          defb %01000000
     712:  01:0542  00                          defb %00000000
     713:  01:0543                      
     714:  01:0543                              ; code=71, hex=0x47, ascii="G"
     715:  01:0543  38                          defb %00111000
     716:  01:0544  44                          defb %01000100
     717:  01:0545  40                          defb %01000000
     718:  01:0546  5C                          defb %01011100
     719:  01:0547  44                          defb %01000100
     720:  01:0548  44                          defb %01000100
     721:  01:0549  3C                          defb %00111100
     722:  01:054A  00                          defb %00000000
     723:  01:054B                      
     724:  01:054B                              ; code=72, hex=0x48, ascii="H"
     725:  01:054B  44                          defb %01000100
     726:  01:054C  44                          defb %01000100
     727:  01:054D  44                          defb %01000100
     728:  01:054E  7C                          defb %01111100
     729:  01:054F  44                          defb %01000100
     730:  01:0550  44                          defb %01000100
     731:  01:0551  44                          defb %01000100
     732:  01:0552  00                          defb %00000000
     733:  01:0553                      
     734:  01:0553                              ; code=73, hex=0x49, ascii="I"
     735:  01:0553  38                          defb %00111000
     736:  01:0554  10                          defb %00010000
     737:  01:0555  10                          defb %00010000
     738:  01:0556  10                          defb %00010000
     739:  01:0557  10                          defb %00010000
     740:  01:0558  10                          defb %00010000
     741:  01:0559  38                          defb %00111000
     742:  01:055A  00                          defb %00000000
     743:  01:055B                      
     744:  01:055B                              ; code=74, hex=0x4A, ascii="J"
     745:  01:055B  04                          defb %00000100
     746:  01:055C  04                          defb %00000100
     747:  01:055D  04                          defb %00000100
     748:  01:055E  04                          defb %00000100
     749:  01:055F  44                          defb %01000100
     750:  01:0560  44                          defb %01000100
     751:  01:0561  38                          defb %00111000
     752:  01:0562  00                          defb %00000000
     753:  01:0563                      
     754:  01:0563                              ; code=75, hex=0x4B, ascii="K"
     755:  01:0563  44                          defb %01000100
     756:  01:0564  48                          defb %01001000
     757:  01:0565  50                          defb %01010000
     758:  01:0566  60                          defb %01100000
     759:  01:0567  50                          defb %01010000
     760:  01:0568  48                          defb %01001000
     761:  01:0569  44                          defb %01000100
     762:  01:056A  00                          defb %00000000
     763:  01:056B                      
     764:  01:056B                              ; code=76, hex=0x4C, ascii="L"
     765:  01:056B  40                          defb %01000000
     766:  01:056C  40                          defb %01000000
     767:  01:056D  40                          defb %01000000
     768:  01:056E  40                          defb %01000000
     769:  01:056F  40                          defb %01000000
     770:  01:0570  40                          defb %01000000
     771:  01:0571  7C                          defb %01111100
     772:  01:0572  00                          defb %00000000
     773:  01:0573                      
     774:  01:0573                              ; code=77, hex=0x4D, ascii="M"
     775:  01:0573  44                          defb %01000100
     776:  01:0574  6C                          defb %01101100
     777:  01:0575  54                          defb %01010100
     778:  01:0576  44                          defb %01000100
     779:  01:0577  44                          defb %01000100
     780:  01:0578  44                          defb %01000100
     781:  01:0579  44                          defb %01000100
     782:  01:057A  00                          defb %00000000
     783:  01:057B                      
     784:  01:057B                              ; code=78, hex=0x4E, ascii="N"
     785:  01:057B  44                          defb %01000100
     786:  01:057C  64                          defb %01100100
     787:  01:057D  54                          defb %01010100
     788:  01:057E  4C                          defb %01001100
     789:  01:057F  44                          defb %01000100
     790:  01:0580  44                          defb %01000100
     791:  01:0581  44                          defb %01000100
     792:  01:0582  00                          defb %00000000
     793:  01:0583                      
     794:  01:0583                              ; code=79, hex=0x4F, ascii="O"
     795:  01:0583  38                          defb %00111000
     796:  01:0584  44                          defb %01000100
     797:  01:0585  44                          defb %01000100
     798:  01:0586  44                          defb %01000100
     799:  01:0587  44                          defb %01000100
     800:  01:0588  44                          defb %01000100
     801:  01:0589  38                          defb %00111000
     802:  01:058A  00                          defb %00000000
     803:  01:058B                      
     804:  01:058B                              ; code=80, hex=0x50, ascii="P"
     805:  01:058B  78                          defb %01111000
     806:  01:058C  44                          defb %01000100
     807:  01:058D  44                          defb %01000100
     808:  01:058E  78                          defb %01111000
     809:  01:058F  40                          defb %01000000
     810:  01:0590  40                          defb %01000000
     811:  01:0591  40                          defb %01000000
     812:  01:0592  00                          defb %00000000
     813:  01:0593                      
     814:  01:0593                              ; code=81, hex=0x51, ascii="Q"
     815:  01:0593  38                          defb %00111000
     816:  01:0594  44                          defb %01000100
     817:  01:0595  44                          defb %01000100
     818:  01:0596  44                          defb %01000100
     819:  01:0597  54                          defb %01010100
     820:  01:0598  48                          defb %01001000
     821:  01:0599  34                          defb %00110100
     822:  01:059A  00                          defb %00000000
     823:  01:059B                      
     824:  01:059B                              ; code=82, hex=0x52, ascii="R"
     825:  01:059B  78                          defb %01111000
     826:  01:059C  44                          defb %01000100
     827:  01:059D  44                          defb %01000100
     828:  01:059E  78                          defb %01111000
     829:  01:059F  48                          defb %01001000
     830:  01:05A0  44                          defb %01000100
     831:  01:05A1  44                          defb %01000100
     832:  01:05A2  00                          defb %00000000
     833:  01:05A3                      
     834:  01:05A3                              ; code=83, hex=0x53, ascii="S"
     835:  01:05A3  38                          defb %00111000
     836:  01:05A4  44                          defb %01000100
     837:  01:05A5  40                          defb %01000000
     838:  01:05A6  38                          defb %00111000
     839:  01:05A7  04                          defb %00000100
     840:  01:05A8  44                          defb %01000100
     841:  01:05A9  38                          defb %00111000
     842:  01:05AA  00                          defb %00000000
     843:  01:05AB                      
     844:  01:05AB                              ; code=84, hex=0x54, ascii="T"
     845:  01:05AB  7C                          defb %01111100
     846:  01:05AC  10                          defb %00010000
     847:  01:05AD  10                          defb %00010000
     848:  01:05AE  10                          defb %00010000
     849:  01:05AF  10                          defb %00010000
     850:  01:05B0  10                          defb %00010000
     851:  01:05B1  10                          defb %00010000
     852:  01:05B2  00                          defb %00000000
     853:  01:05B3                      
     854:  01:05B3                              ; code=85, hex=0x55, ascii="U"
     855:  01:05B3  44                          defb %01000100
     856:  01:05B4  44                          defb %01000100
     857:  01:05B5  44                          defb %01000100
     858:  01:05B6  44                          defb %01000100
     859:  01:05B7  44                          defb %01000100
     860:  01:05B8  44                          defb %01000100
     861:  01:05B9  38                          defb %00111000
     862:  01:05BA  00                          defb %00000000
     863:  01:05BB                      
     864:  01:05BB                              ; code=86, hex=0x56, ascii="V"
     865:  01:05BB  44                          defb %01000100
     866:  01:05BC  44                          defb %01000100
     867:  01:05BD  44                          defb %01000100
     868:  01:05BE  44                          defb %01000100
     869:  01:05BF  44                          defb %01000100
     870:  01:05C0  28                          defb %00101000
     871:  01:05C1  10                          defb %00010000
     872:  01:05C2  00                          defb %00000000
     873:  01:05C3                      
     874:  01:05C3                              ; code=87, hex=0x57, ascii="W"
     875:  01:05C3  44                          defb %01000100
     876:  01:05C4  44                          defb %01000100
     877:  01:05C5  54                          defb %01010100
     878:  01:05C6  54                          defb %01010100
     879:  01:05C7  54                          defb %01010100
     880:  01:05C8  54                          defb %01010100
     881:  01:05C9  28                          defb %00101000
     882:  01:05CA  00                          defb %00000000
     883:  01:05CB                      
     884:  01:05CB                              ; code=88, hex=0x58, ascii="X"
     885:  01:05CB  44                          defb %01000100
     886:  01:05CC  44                          defb %01000100
     887:  01:05CD  28                          defb %00101000
     888:  01:05CE  10                          defb %00010000
     889:  01:05CF  28                          defb %00101000
     890:  01:05D0  44                          defb %01000100
     891:  01:05D1  44                          defb %01000100
     892:  01:05D2  00                          defb %00000000
     893:  01:05D3                      
     894:  01:05D3                              ; code=89, hex=0x59, ascii="Y"
     895:  01:05D3  44                          defb %01000100
     896:  01:05D4  44                          defb %01000100
     897:  01:05D5  44                          defb %01000100
     898:  01:05D6  28                          defb %00101000
     899:  01:05D7  10                          defb %00010000
     900:  01:05D8  10                          defb %00010000
     901:  01:05D9  10                          defb %00010000
     902:  01:05DA  00                          defb %00000000
     903:  01:05DB                      
     904:  01:05DB                              ; code=90, hex=0x5A, ascii="Z"
     905:  01:05DB  78                          defb %01111000
     906:  01:05DC  08                          defb %00001000
     907:  01:05DD  10                          defb %00010000
     908:  01:05DE  20                          defb %00100000
     909:  01:05DF  40                          defb %01000000
     910:  01:05E0  40                          defb %01000000
     911:  01:05E1  78                          defb %01111000
     912:  01:05E2  00                          defb %00000000
     913:  01:05E3                      
     914:  01:05E3                              ; code=91, hex=0x5B, ascii="["
     915:  01:05E3  38                          defb %00111000
     916:  01:05E4  20                          defb %00100000
     917:  01:05E5  20                          defb %00100000
     918:  01:05E6  20                          defb %00100000
     919:  01:05E7  20                          defb %00100000
     920:  01:05E8  20                          defb %00100000
     921:  01:05E9  38                          defb %00111000
     922:  01:05EA  00                          defb %00000000
     923:  01:05EB                      
     924:  01:05EB                              ; code=92, hex=0x5C, ascii="\"
     925:  01:05EB  00                          defb %00000000
     926:  01:05EC  40                          defb %01000000
     927:  01:05ED  20                          defb %00100000
     928:  01:05EE  10                          defb %00010000
     929:  01:05EF  08                          defb %00001000
     930:  01:05F0  04                          defb %00000100
     931:  01:05F1  00                          defb %00000000
     932:  01:05F2  00                          defb %00000000
     933:  01:05F3                      
     934:  01:05F3                              ; code=93, hex=0x5D, ascii="]"
     935:  01:05F3  38                          defb %00111000
     936:  01:05F4  08                          defb %00001000
     937:  01:05F5  08                          defb %00001000
     938:  01:05F6  08                          defb %00001000
     939:  01:05F7  08                          defb %00001000
     940:  01:05F8  08                          defb %00001000
     941:  01:05F9  38                          defb %00111000
     942:  01:05FA  00                          defb %00000000
     943:  01:05FB                      
     944:  01:05FB                              ; code=94, hex=0x5E, ascii="^"
     945:  01:05FB  10                          defb %00010000
     946:  01:05FC  28                          defb %00101000
     947:  01:05FD  44                          defb %01000100
     948:  01:05FE  00                          defb %00000000
     949:  01:05FF  00                          defb %00000000
     950:  01:0600  00                          defb %00000000
     951:  01:0601  00                          defb %00000000
     952:  01:0602  00                          defb %00000000
     953:  01:0603                      
     954:  01:0603                              ; code=95, hex=0x5F, ascii="_"
     955:  01:0603  00                          defb %00000000
     956:  01:0604  00                          defb %00000000
     957:  01:0605  00                          defb %00000000
     958:  01:0606  00                          defb %00000000
     959:  01:0607  00                          defb %00000000
     960:  01:0608  00                          defb %00000000
     961:  01:0609  00                          defb %00000000
     962:  01:060A  FC                          defb %11111100
     963:  01:060B                      
     964:  01:060B                              ; code=96, hex=0x60, ascii="`"
     965:  01:060B  30                          defb %00110000
     966:  01:060C  30                          defb %00110000
     967:  01:060D  10                          defb %00010000
     968:  01:060E  00                          defb %00000000
     969:  01:060F  00                          defb %00000000
     970:  01:0610  00                          defb %00000000
     971:  01:0611  00                          defb %00000000
     972:  01:0612  00                          defb %00000000
     973:  01:0613                      
     974:  01:0613                              ; code=97, hex=0x61, ascii="a"
     975:  01:0613  00                          defb %00000000
     976:  01:0614  00                          defb %00000000
     977:  01:0615  38                          defb %00111000
     978:  01:0616  04                          defb %00000100
     979:  01:0617  3C                          defb %00111100
     980:  01:0618  44                          defb %01000100
     981:  01:0619  3C                          defb %00111100
     982:  01:061A  00                          defb %00000000
     983:  01:061B                      
     984:  01:061B                              ; code=98, hex=0x62, ascii="b"
     985:  01:061B  40                          defb %01000000
     986:  01:061C  40                          defb %01000000
     987:  01:061D  78                          defb %01111000
     988:  01:061E  44                          defb %01000100
     989:  01:061F  44                          defb %01000100
     990:  01:0620  44                          defb %01000100
     991:  01:0621  78                          defb %01111000
     992:  01:0622  00                          defb %00000000
     993:  01:0623                      
     994:  01:0623                              ; code=99, hex=0x63, ascii="c"
     995:  01:0623  00                          defb %00000000
     996:  01:0624  00                          defb %00000000
     997:  01:0625  38                          defb %00111000
     998:  01:0626  44                          defb %01000100
     999:  01:0627  40                          defb %01000000
    1000:  01:0628  44                          defb %01000100
    1001:  01:0629  38                          defb %00111000
    1002:  01:062A  00                          defb %00000000
    1003:  01:062B                      
    1004:  01:062B                              ; code=100, hex=0x64, ascii="d"
    1005:  01:062B  04                          defb %00000100
    1006:  01:062C  04                          defb %00000100
    1007:  01:062D  3C                          defb %00111100
    1008:  01:062E  44                          defb %01000100
    1009:  01:062F  44                          defb %01000100
    1010:  01:0630  44                          defb %01000100
    1011:  01:0631  3C                          defb %00111100
    1012:  01:0632  00                          defb %00000000
    1013:  01:0633                      
    1014:  01:0633                              ; code=101, hex=0x65, ascii="e"
    1015:  01:0633  00                          defb %00000000
    1016:  01:0634  00                          defb %00000000
    1017:  01:0635  38                          defb %00111000
    1018:  01:0636  44                          defb %01000100
    1019:  01:0637  78                          defb %01111000
    1020:  01:0638  40                          defb %01000000
    1021:  01:0639  38                          defb %00111000
    1022:  01:063A  00                          defb %00000000
    1023:  01:063B                      
    1024:  01:063B                              ; code=102, hex=0x66, ascii="f"
    1025:  01:063B  18                          defb %00011000
    1026:  01:063C  20                          defb %00100000
    1027:  01:063D  20                          defb %00100000
    1028:  01:063E  78                          defb %01111000
    1029:  01:063F  20                          defb %00100000
    1030:  01:0640  20                          defb %00100000
    1031:  01:0641  20                          defb %00100000
    1032:  01:0642  00                          defb %00000000
    1033:  01:0643                      
    1034:  01:0643                              ; code=103, hex=0x67, ascii="g"
    1035:  01:0643  00                          defb %00000000
    1036:  01:0644  00                          defb %00000000
    1037:  01:0645  3C                          defb %00111100
    1038:  01:0646  44                          defb %01000100
    1039:  01:0647  44                          defb %01000100
    1040:  01:0648  3C                          defb %00111100
    1041:  01:0649  04                          defb %00000100
    1042:  01:064A  38                          defb %00111000
    1043:  01:064B                      
    1044:  01:064B                              ; code=104, hex=0x68, ascii="h"
    1045:  01:064B  40                          defb %01000000
    1046:  01:064C  40                          defb %01000000
    1047:  01:064D  70                          defb %01110000
    1048:  01:064E  48                          defb %01001000
    1049:  01:064F  48                          defb %01001000
    1050:  01:0650  48                          defb %01001000
    1051:  01:0651  48                          defb %01001000
    1052:  01:0652  00                          defb %00000000
    1053:  01:0653                      
    1054:  01:0653                              ; code=105, hex=0x69, ascii="i"
    1055:  01:0653  10                          defb %00010000
    1056:  01:0654  00                          defb %00000000
    1057:  01:0655  10                          defb %00010000
    1058:  01:0656  10                          defb %00010000
    1059:  01:0657  10                          defb %00010000
    1060:  01:0658  10                          defb %00010000
    1061:  01:0659  18                          defb %00011000
    1062:  01:065A  00                          defb %00000000
    1063:  01:065B                      
    1064:  01:065B                              ; code=106, hex=0x6A, ascii="j"
    1065:  01:065B  08                          defb %00001000
    1066:  01:065C  00                          defb %00000000
    1067:  01:065D  18                          defb %00011000
    1068:  01:065E  08                          defb %00001000
    1069:  01:065F  08                          defb %00001000
    1070:  01:0660  08                          defb %00001000
    1071:  01:0661  48                          defb %01001000
    1072:  01:0662  30                          defb %00110000
    1073:  01:0663                      
    1074:  01:0663                              ; code=107, hex=0x6B, ascii="k"
    1075:  01:0663  40                          defb %01000000
    1076:  01:0664  40                          defb %01000000
    1077:  01:0665  48                          defb %01001000
    1078:  01:0666  50                          defb %01010000
    1079:  01:0667  60                          defb %01100000
    1080:  01:0668  50                          defb %01010000
    1081:  01:0669  48                          defb %01001000
    1082:  01:066A  00                          defb %00000000
    1083:  01:066B                      
    1084:  01:066B                              ; code=108, hex=0x6C, ascii="l"
    1085:  01:066B  10                          defb %00010000
    1086:  01:066C  10                          defb %00010000
    1087:  01:066D  10                          defb %00010000
    1088:  01:066E  10                          defb %00010000
    1089:  01:066F  10                          defb %00010000
    1090:  01:0670  10                          defb %00010000
    1091:  01:0671  18                          defb %00011000
    1092:  01:0672  00                          defb %00000000
    1093:  01:0673                      
    1094:  01:0673                              ; code=109, hex=0x6D, ascii="m"
    1095:  01:0673  00                          defb %00000000
    1096:  01:0674  00                          defb %00000000
    1097:  01:0675  68                          defb %01101000
    1098:  01:0676  54                          defb %01010100
    1099:  01:0677  54                          defb %01010100
    1100:  01:0678  44                          defb %01000100
    1101:  01:0679  44                          defb %01000100
    1102:  01:067A  00                          defb %00000000
    1103:  01:067B                      
    1104:  01:067B                              ; code=110, hex=0x6E, ascii="n"
    1105:  01:067B  00                          defb %00000000
    1106:  01:067C  00                          defb %00000000
    1107:  01:067D  70                          defb %01110000
    1108:  01:067E  48                          defb %01001000
    1109:  01:067F  48                          defb %01001000
    1110:  01:0680  48                          defb %01001000
    1111:  01:0681  48                          defb %01001000
    1112:  01:0682  00                          defb %00000000
    1113:  01:0683                      
    1114:  01:0683                              ; code=111, hex=0x6F, ascii="o"
    1115:  01:0683  00                          defb %00000000
    1116:  01:0684  00                          defb %00000000
    1117:  01:0685  38                          defb %00111000
    1118:  01:0686  44                          defb %01000100
    1119:  01:0687  44                          defb %01000100
    1120:  01:0688  44                          defb %01000100
    1121:  01:0689  38                          defb %00111000
    1122:  01:068A  00                          defb %00000000
    1123:  01:068B                      
    1124:  01:068B                              ; code=112, hex=0x70, ascii="p"
    1125:  01:068B  00                          defb %00000000
    1126:  01:068C  00                          defb %00000000
    1127:  01:068D  78                          defb %01111000
    1128:  01:068E  44                          defb %01000100
    1129:  01:068F  44                          defb %01000100
    1130:  01:0690  44                          defb %01000100
    1131:  01:0691  78                          defb %01111000
    1132:  01:0692  40                          defb %01000000
    1133:  01:0693                      
    1134:  01:0693                              ; code=113, hex=0x71, ascii="q"
    1135:  01:0693  00                          defb %00000000
    1136:  01:0694  00                          defb %00000000
    1137:  01:0695  3C                          defb %00111100
    1138:  01:0696  44                          defb %01000100
    1139:  01:0697  44                          defb %01000100
    1140:  01:0698  44                          defb %01000100
    1141:  01:0699  3C                          defb %00111100
    1142:  01:069A  04                          defb %00000100
    1143:  01:069B                      
    1144:  01:069B                              ; code=114, hex=0x72, ascii="r"
    1145:  01:069B  00                          defb %00000000
    1146:  01:069C  00                          defb %00000000
    1147:  01:069D  58                          defb %01011000
    1148:  01:069E  24                          defb %00100100
    1149:  01:069F  20                          defb %00100000
    1150:  01:06A0  20                          defb %00100000
    1151:  01:06A1  70                          defb %01110000
    1152:  01:06A2  00                          defb %00000000
    1153:  01:06A3                      
    1154:  01:06A3                              ; code=115, hex=0x73, ascii="s"
    1155:  01:06A3  00                          defb %00000000
    1156:  01:06A4  00                          defb %00000000
    1157:  01:06A5  38                          defb %00111000
    1158:  01:06A6  40                          defb %01000000
    1159:  01:06A7  38                          defb %00111000
    1160:  01:06A8  04                          defb %00000100
    1161:  01:06A9  38                          defb %00111000
    1162:  01:06AA  00                          defb %00000000
    1163:  01:06AB                      
    1164:  01:06AB                              ; code=116, hex=0x74, ascii="t"
    1165:  01:06AB  00                          defb %00000000
    1166:  01:06AC  20                          defb %00100000
    1167:  01:06AD  78                          defb %01111000
    1168:  01:06AE  20                          defb %00100000
    1169:  01:06AF  20                          defb %00100000
    1170:  01:06B0  28                          defb %00101000
    1171:  01:06B1  10                          defb %00010000
    1172:  01:06B2  00                          defb %00000000
    1173:  01:06B3                      
    1174:  01:06B3                              ; code=117, hex=0x75, ascii="u"
    1175:  01:06B3  00                          defb %00000000
    1176:  01:06B4  00                          defb %00000000
    1177:  01:06B5  48                          defb %01001000
    1178:  01:06B6  48                          defb %01001000
    1179:  01:06B7  48                          defb %01001000
    1180:  01:06B8  58                          defb %01011000
    1181:  01:06B9  28                          defb %00101000
    1182:  01:06BA  00                          defb %00000000
    1183:  01:06BB                      
    1184:  01:06BB                              ; code=118, hex=0x76, ascii="v"
    1185:  01:06BB  00                          defb %00000000
    1186:  01:06BC  00                          defb %00000000
    1187:  01:06BD  44                          defb %01000100
    1188:  01:06BE  44                          defb %01000100
    1189:  01:06BF  44                          defb %01000100
    1190:  01:06C0  28                          defb %00101000
    1191:  01:06C1  10                          defb %00010000
    1192:  01:06C2  00                          defb %00000000
    1193:  01:06C3                      
    1194:  01:06C3                              ; code=119, hex=0x77, ascii="w"
    1195:  01:06C3  00                          defb %00000000
    1196:  01:06C4  00                          defb %00000000
    1197:  01:06C5  44                          defb %01000100
    1198:  01:06C6  44                          defb %01000100
    1199:  01:06C7  54                          defb %01010100
    1200:  01:06C8  7C                          defb %01111100
    1201:  01:06C9  28                          defb %00101000
    1202:  01:06CA  00                          defb %00000000
    1203:  01:06CB                      
    1204:  01:06CB                              ; code=120, hex=0x78, ascii="x"
    1205:  01:06CB  00                          defb %00000000
    1206:  01:06CC  00                          defb %00000000
    1207:  01:06CD  48                          defb %01001000
    1208:  01:06CE  48                          defb %01001000
    1209:  01:06CF  30                          defb %00110000
    1210:  01:06D0  48                          defb %01001000
    1211:  01:06D1  48                          defb %01001000
    1212:  01:06D2  00                          defb %00000000
    1213:  01:06D3                      
    1214:  01:06D3                              ; code=121, hex=0x79, ascii="y"
    1215:  01:06D3  00                          defb %00000000
    1216:  01:06D4  00                          defb %00000000
    1217:  01:06D5  48                          defb %01001000
    1218:  01:06D6  48                          defb %01001000
    1219:  01:06D7  48                          defb %01001000
    1220:  01:06D8  38                          defb %00111000
    1221:  01:06D9  10                          defb %00010000
    1222:  01:06DA  60                          defb %01100000
    1223:  01:06DB                      
    1224:  01:06DB                              ; code=122, hex=0x7A, ascii="z"
    1225:  01:06DB  00                          defb %00000000
    1226:  01:06DC  00                          defb %00000000
    1227:  01:06DD  78                          defb %01111000
    1228:  01:06DE  08                          defb %00001000
    1229:  01:06DF  30                          defb %00110000
    1230:  01:06E0  40                          defb %01000000
    1231:  01:06E1  78                          defb %01111000
    1232:  01:06E2  00                          defb %00000000
    1233:  01:06E3                      
    1234:  01:06E3                              ; code=123, hex=0x7B, ascii="{"
    1235:  01:06E3  18                          defb %00011000
    1236:  01:06E4  20                          defb %00100000
    1237:  01:06E5  20                          defb %00100000
    1238:  01:06E6  60                          defb %01100000
    1239:  01:06E7  20                          defb %00100000
    1240:  01:06E8  20                          defb %00100000
    1241:  01:06E9  18                          defb %00011000
    1242:  01:06EA  00                          defb %00000000
    1243:  01:06EB                      
    1244:  01:06EB                              ; code=124, hex=0x7C, ascii="|"
    1245:  01:06EB  10                          defb %00010000
    1246:  01:06EC  10                          defb %00010000
    1247:  01:06ED  10                          defb %00010000
    1248:  01:06EE  00                          defb %00000000
    1249:  01:06EF  10                          defb %00010000
    1250:  01:06F0  10                          defb %00010000
    1251:  01:06F1  10                          defb %00010000
    1252:  01:06F2  00                          defb %00000000
    1253:  01:06F3                      
    1254:  01:06F3                              ; code=125, hex=0x7D, ascii="}"
    1255:  01:06F3  30                          defb %00110000
    1256:  01:06F4  08                          defb %00001000
    1257:  01:06F5  08                          defb %00001000
    1258:  01:06F6  0C                          defb %00001100
    1259:  01:06F7  08                          defb %00001000
    1260:  01:06F8  08                          defb %00001000
    1261:  01:06F9  30                          defb %00110000
    1262:  01:06FA  00                          defb %00000000
    1263:  01:06FB                      
    1264:  01:06FB                              ; code=126, hex=0x7E, ascii="~"
    1265:  01:06FB  28                          defb %00101000
    1266:  01:06FC  50                          defb %01010000
    1267:  01:06FD  00                          defb %00000000
    1268:  01:06FE  00                          defb %00000000
    1269:  01:06FF  00                          defb %00000000
    1270:  01:0700  00                          defb %00000000
    1271:  01:0701  00                          defb %00000000
    1272:  01:0702  00                          defb %00000000
    1273:  01:0703                      
    1274:  01:0703                              ; code=127, hex=0x7F, ascii="^?"
    1275:  01:0703  10                          defb %00010000
    1276:  01:0704  38                          defb %00111000
    1277:  01:0705  6C                          defb %01101100
    1278:  01:0706  44                          defb %01000100
    1279:  01:0707  44                          defb %01000100
    1280:  01:0708  7C                          defb %01111100
    1281:  01:0709  00                          defb %00000000
    1282:  01:070A  00                          defb %00000000
    1283:  01:070B                      
    1284:  01:070B                              ; code=128, hex=0x80, ascii="!^@"
    1285:  01:070B  38                          defb %00111000
    1286:  01:070C  44                          defb %01000100
    1287:  01:070D  40                          defb %01000000
    1288:  01:070E  40                          defb %01000000
    1289:  01:070F  44                          defb %01000100
    1290:  01:0710  38                          defb %00111000
    1291:  01:0711  10                          defb %00010000
    1292:  01:0712  30                          defb %00110000
    1293:  01:0713                      
    1294:  01:0713                              ; code=129, hex=0x81, ascii="!^A"
    1295:  01:0713  48                          defb %01001000
    1296:  01:0714  00                          defb %00000000
    1297:  01:0715  48                          defb %01001000
    1298:  01:0716  48                          defb %01001000
    1299:  01:0717  48                          defb %01001000
    1300:  01:0718  58                          defb %01011000
    1301:  01:0719  28                          defb %00101000
    1302:  01:071A  00                          defb %00000000
    1303:  01:071B                      
    1304:  01:071B                              ; code=130, hex=0x82, ascii="!^B"
    1305:  01:071B  0C                          defb %00001100
    1306:  01:071C  00                          defb %00000000
    1307:  01:071D  38                          defb %00111000
    1308:  01:071E  44                          defb %01000100
    1309:  01:071F  78                          defb %01111000
    1310:  01:0720  40                          defb %01000000
    1311:  01:0721  38                          defb %00111000
    1312:  01:0722  00                          defb %00000000
    1313:  01:0723                      
    1314:  01:0723                              ; code=131, hex=0x83, ascii="!^C"
    1315:  01:0723  38                          defb %00111000
    1316:  01:0724  00                          defb %00000000
    1317:  01:0725  38                          defb %00111000
    1318:  01:0726  04                          defb %00000100
    1319:  01:0727  3C                          defb %00111100
    1320:  01:0728  44                          defb %01000100
    1321:  01:0729  3C                          defb %00111100
    1322:  01:072A  00                          defb %00000000
    1323:  01:072B                      
    1324:  01:072B                              ; code=132, hex=0x84, ascii="!^D"
    1325:  01:072B  28                          defb %00101000
    1326:  01:072C  00                          defb %00000000
    1327:  01:072D  38                          defb %00111000
    1328:  01:072E  04                          defb %00000100
    1329:  01:072F  3C                          defb %00111100
    1330:  01:0730  44                          defb %01000100
    1331:  01:0731  3C                          defb %00111100
    1332:  01:0732  00                          defb %00000000
    1333:  01:0733                      
    1334:  01:0733                              ; code=133, hex=0x85, ascii="!^E"
    1335:  01:0733  30                          defb %00110000
    1336:  01:0734  00                          defb %00000000
    1337:  01:0735  38                          defb %00111000
    1338:  01:0736  04                          defb %00000100
    1339:  01:0737  3C                          defb %00111100
    1340:  01:0738  44                          defb %01000100
    1341:  01:0739  3C                          defb %00111100
    1342:  01:073A  00                          defb %00000000
    1343:  01:073B                      
    1344:  01:073B                              ; code=134, hex=0x86, ascii="!^F"
    1345:  01:073B  38                          defb %00111000
    1346:  01:073C  28                          defb %00101000
    1347:  01:073D  38                          defb %00111000
    1348:  01:073E  04                          defb %00000100
    1349:  01:073F  3C                          defb %00111100
    1350:  01:0740  44                          defb %01000100
    1351:  01:0741  3C                          defb %00111100
    1352:  01:0742  00                          defb %00000000
    1353:  01:0743                      
    1354:  01:0743                              ; code=135, hex=0x87, ascii="!^G"
    1355:  01:0743  00                          defb %00000000
    1356:  01:0744  38                          defb %00111000
    1357:  01:0745  44                          defb %01000100
    1358:  01:0746  40                          defb %01000000
    1359:  01:0747  44                          defb %01000100
    1360:  01:0748  38                          defb %00111000
    1361:  01:0749  10                          defb %00010000
    1362:  01:074A  30                          defb %00110000
    1363:  01:074B                      
    1364:  01:074B                              ; code=136, hex=0x88, ascii="!^H"
    1365:  01:074B  38                          defb %00111000
    1366:  01:074C  00                          defb %00000000
    1367:  01:074D  38                          defb %00111000
    1368:  01:074E  44                          defb %01000100
    1369:  01:074F  78                          defb %01111000
    1370:  01:0750  40                          defb %01000000
    1371:  01:0751  38                          defb %00111000
    1372:  01:0752  00                          defb %00000000
    1373:  01:0753                      
    1374:  01:0753                              ; code=137, hex=0x89, ascii="!^I"
    1375:  01:0753  28                          defb %00101000
    1376:  01:0754  00                          defb %00000000
    1377:  01:0755  38                          defb %00111000
    1378:  01:0756  44                          defb %01000100
    1379:  01:0757  78                          defb %01111000
    1380:  01:0758  40                          defb %01000000
    1381:  01:0759  38                          defb %00111000
    1382:  01:075A  00                          defb %00000000
    1383:  01:075B                      
    1384:  01:075B                              ; code=138, hex=0x8A, ascii="!^J"
    1385:  01:075B  30                          defb %00110000
    1386:  01:075C  00                          defb %00000000
    1387:  01:075D  38                          defb %00111000
    1388:  01:075E  44                          defb %01000100
    1389:  01:075F  78                          defb %01111000
    1390:  01:0760  40                          defb %01000000
    1391:  01:0761  38                          defb %00111000
    1392:  01:0762  00                          defb %00000000
    1393:  01:0763                      
    1394:  01:0763                              ; code=139, hex=0x8B, ascii="!^K"
    1395:  01:0763  28                          defb %00101000
    1396:  01:0764  00                          defb %00000000
    1397:  01:0765  10                          defb %00010000
    1398:  01:0766  10                          defb %00010000
    1399:  01:0767  10                          defb %00010000
    1400:  01:0768  10                          defb %00010000
    1401:  01:0769  18                          defb %00011000
    1402:  01:076A  00                          defb %00000000
    1403:  01:076B                      
    1404:  01:076B                              ; code=140, hex=0x8C, ascii="!^L"
    1405:  01:076B  10                          defb %00010000
    1406:  01:076C  28                          defb %00101000
    1407:  01:076D  00                          defb %00000000
    1408:  01:076E  10                          defb %00010000
    1409:  01:076F  10                          defb %00010000
    1410:  01:0770  10                          defb %00010000
    1411:  01:0771  18                          defb %00011000
    1412:  01:0772  00                          defb %00000000
    1413:  01:0773                      
    1414:  01:0773                              ; code=141, hex=0x8D, ascii="!^M"
    1415:  01:0773  20                          defb %00100000
    1416:  01:0774  00                          defb %00000000
    1417:  01:0775  10                          defb %00010000
    1418:  01:0776  10                          defb %00010000
    1419:  01:0777  10                          defb %00010000
    1420:  01:0778  10                          defb %00010000
    1421:  01:0779  18                          defb %00011000
    1422:  01:077A  00                          defb %00000000
    1423:  01:077B                      
    1424:  01:077B                              ; code=142, hex=0x8E, ascii="!^N"
    1425:  01:077B  28                          defb %00101000
    1426:  01:077C  00                          defb %00000000
    1427:  01:077D  10                          defb %00010000
    1428:  01:077E  28                          defb %00101000
    1429:  01:077F  44                          defb %01000100
    1430:  01:0780  7C                          defb %01111100
    1431:  01:0781  44                          defb %01000100
    1432:  01:0782  00                          defb %00000000
    1433:  01:0783                      
    1434:  01:0783                              ; code=143, hex=0x8F, ascii="!^O"
    1435:  01:0783  38                          defb %00111000
    1436:  01:0784  28                          defb %00101000
    1437:  01:0785  38                          defb %00111000
    1438:  01:0786  6C                          defb %01101100
    1439:  01:0787  44                          defb %01000100
    1440:  01:0788  7C                          defb %01111100
    1441:  01:0789  44                          defb %01000100
    1442:  01:078A  00                          defb %00000000
    1443:  01:078B                      
    1444:  01:078B                              ; code=144, hex=0x90, ascii="!^P"
    1445:  01:078B  0C                          defb %00001100
    1446:  01:078C  00                          defb %00000000
    1447:  01:078D  7C                          defb %01111100
    1448:  01:078E  40                          defb %01000000
    1449:  01:078F  78                          defb %01111000
    1450:  01:0790  40                          defb %01000000
    1451:  01:0791  7C                          defb %01111100
    1452:  01:0792  00                          defb %00000000
    1453:  01:0793                      
    1454:  01:0793                              ; code=145, hex=0x91, ascii="!^Q"
    1455:  01:0793  00                          defb %00000000
    1456:  01:0794  00                          defb %00000000
    1457:  01:0795  78                          defb %01111000
    1458:  01:0796  14                          defb %00010100
    1459:  01:0797  7C                          defb %01111100
    1460:  01:0798  50                          defb %01010000
    1461:  01:0799  3C                          defb %00111100
    1462:  01:079A  00                          defb %00000000
    1463:  01:079B                      
    1464:  01:079B                              ; code=146, hex=0x92, ascii="!^R"
    1465:  01:079B  3C                          defb %00111100
    1466:  01:079C  50                          defb %01010000
    1467:  01:079D  50                          defb %01010000
    1468:  01:079E  7C                          defb %01111100
    1469:  01:079F  50                          defb %01010000
    1470:  01:07A0  50                          defb %01010000
    1471:  01:07A1  5C                          defb %01011100
    1472:  01:07A2  00                          defb %00000000
    1473:  01:07A3                      
    1474:  01:07A3                              ; code=147, hex=0x93, ascii="!^S"
    1475:  01:07A3  38                          defb %00111000
    1476:  01:07A4  00                          defb %00000000
    1477:  01:07A5  30                          defb %00110000
    1478:  01:07A6  48                          defb %01001000
    1479:  01:07A7  48                          defb %01001000
    1480:  01:07A8  48                          defb %01001000
    1481:  01:07A9  30                          defb %00110000
    1482:  01:07AA  00                          defb %00000000
    1483:  01:07AB                      
    1484:  01:07AB                              ; code=148, hex=0x94, ascii="!^T"
    1485:  01:07AB  28                          defb %00101000
    1486:  01:07AC  00                          defb %00000000
    1487:  01:07AD  30                          defb %00110000
    1488:  01:07AE  48                          defb %01001000
    1489:  01:07AF  48                          defb %01001000
    1490:  01:07B0  48                          defb %01001000
    1491:  01:07B1  30                          defb %00110000
    1492:  01:07B2  00                          defb %00000000
    1493:  01:07B3                      
    1494:  01:07B3                              ; code=149, hex=0x95, ascii="!^U"
    1495:  01:07B3  60                          defb %01100000
    1496:  01:07B4  00                          defb %00000000
    1497:  01:07B5  30                          defb %00110000
    1498:  01:07B6  48                          defb %01001000
    1499:  01:07B7  48                          defb %01001000
    1500:  01:07B8  48                          defb %01001000
    1501:  01:07B9  30                          defb %00110000
    1502:  01:07BA  00                          defb %00000000
    1503:  01:07BB                      
    1504:  01:07BB                              ; code=150, hex=0x96, ascii="!^V"
    1505:  01:07BB  38                          defb %00111000
    1506:  01:07BC  00                          defb %00000000
    1507:  01:07BD  48                          defb %01001000
    1508:  01:07BE  48                          defb %01001000
    1509:  01:07BF  48                          defb %01001000
    1510:  01:07C0  58                          defb %01011000
    1511:  01:07C1  28                          defb %00101000
    1512:  01:07C2  00                          defb %00000000
    1513:  01:07C3                      
    1514:  01:07C3                              ; code=151, hex=0x97, ascii="!^W"
    1515:  01:07C3  60                          defb %01100000
    1516:  01:07C4  00                          defb %00000000
    1517:  01:07C5  48                          defb %01001000
    1518:  01:07C6  48                          defb %01001000
    1519:  01:07C7  48                          defb %01001000
    1520:  01:07C8  58                          defb %01011000
    1521:  01:07C9  28                          defb %00101000
    1522:  01:07CA  00                          defb %00000000
    1523:  01:07CB                      
    1524:  01:07CB                              ; code=152, hex=0x98, ascii="!^X"
    1525:  01:07CB  28                          defb %00101000
    1526:  01:07CC  00                          defb %00000000
    1527:  01:07CD  48                          defb %01001000
    1528:  01:07CE  48                          defb %01001000
    1529:  01:07CF  48                          defb %01001000
    1530:  01:07D0  38                          defb %00111000
    1531:  01:07D1  10                          defb %00010000
    1532:  01:07D2  60                          defb %01100000
    1533:  01:07D3                      
    1534:  01:07D3                              ; code=153, hex=0x99, ascii="!^Y"
    1535:  01:07D3  48                          defb %01001000
    1536:  01:07D4  30                          defb %00110000
    1537:  01:07D5  48                          defb %01001000
    1538:  01:07D6  48                          defb %01001000
    1539:  01:07D7  48                          defb %01001000
    1540:  01:07D8  48                          defb %01001000
    1541:  01:07D9  30                          defb %00110000
    1542:  01:07DA  00                          defb %00000000
    1543:  01:07DB                      
    1544:  01:07DB                              ; code=154, hex=0x9A, ascii="!^Z"
    1545:  01:07DB  28                          defb %00101000
    1546:  01:07DC  00                          defb %00000000
    1547:  01:07DD  48                          defb %01001000
    1548:  01:07DE  48                          defb %01001000
    1549:  01:07DF  48                          defb %01001000
    1550:  01:07E0  48                          defb %01001000
    1551:  01:07E1  30                          defb %00110000
    1552:  01:07E2  00                          defb %00000000
    1553:  01:07E3                      
    1554:  01:07E3                              ; code=155, hex=0x9B, ascii="!^["
    1555:  01:07E3  00                          defb %00000000
    1556:  01:07E4  10                          defb %00010000
    1557:  01:07E5  38                          defb %00111000
    1558:  01:07E6  40                          defb %01000000
    1559:  01:07E7  40                          defb %01000000
    1560:  01:07E8  38                          defb %00111000
    1561:  01:07E9  10                          defb %00010000
    1562:  01:07EA  00                          defb %00000000
    1563:  01:07EB                      
    1564:  01:07EB                              ; code=156, hex=0x9C, ascii="!^\"
    1565:  01:07EB  18                          defb %00011000
    1566:  01:07EC  24                          defb %00100100
    1567:  01:07ED  20                          defb %00100000
    1568:  01:07EE  78                          defb %01111000
    1569:  01:07EF  20                          defb %00100000
    1570:  01:07F0  24                          defb %00100100
    1571:  01:07F1  5C                          defb %01011100
    1572:  01:07F2  00                          defb %00000000
    1573:  01:07F3                      
    1574:  01:07F3                              ; code=157, hex=0x9D, ascii="!^]"
    1575:  01:07F3  44                          defb %01000100
    1576:  01:07F4  28                          defb %00101000
    1577:  01:07F5  10                          defb %00010000
    1578:  01:07F6  7C                          defb %01111100
    1579:  01:07F7  10                          defb %00010000
    1580:  01:07F8  7C                          defb %01111100
    1581:  01:07F9  10                          defb %00010000
    1582:  01:07FA  00                          defb %00000000
    1583:  01:07FB                      
    1584:  01:07FB                              ; code=158, hex=0x9E, ascii="!^^"
    1585:  01:07FB  60                          defb %01100000
    1586:  01:07FC  50                          defb %01010000
    1587:  01:07FD  50                          defb %01010000
    1588:  01:07FE  68                          defb %01101000
    1589:  01:07FF  5C                          defb %01011100
    1590:  01:0800  48                          defb %01001000
    1591:  01:0801  48                          defb %01001000
    1592:  01:0802  00                          defb %00000000
    1593:  01:0803                      
    1594:  01:0803                              ; code=159, hex=0x9F, ascii="!^_"
    1595:  01:0803  08                          defb %00001000
    1596:  01:0804  14                          defb %00010100
    1597:  01:0805  10                          defb %00010000
    1598:  01:0806  38                          defb %00111000
    1599:  01:0807  10                          defb %00010000
    1600:  01:0808  10                          defb %00010000
    1601:  01:0809  50                          defb %01010000
    1602:  01:080A  20                          defb %00100000
    1603:  01:080B                      
    1604:  01:080B                              ; code=160, hex=0xA0, ascii="! "
    1605:  01:080B  18                          defb %00011000
    1606:  01:080C  00                          defb %00000000
    1607:  01:080D  38                          defb %00111000
    1608:  01:080E  04                          defb %00000100
    1609:  01:080F  3C                          defb %00111100
    1610:  01:0810  44                          defb %01000100
    1611:  01:0811  3C                          defb %00111100
    1612:  01:0812  00                          defb %00000000
    1613:  01:0813                      
    1614:  01:0813                              ; code=161, hex=0xA1, ascii="!!"
    1615:  01:0813  18                          defb %00011000
    1616:  01:0814  00                          defb %00000000
    1617:  01:0815  10                          defb %00010000
    1618:  01:0816  10                          defb %00010000
    1619:  01:0817  10                          defb %00010000
    1620:  01:0818  10                          defb %00010000
    1621:  01:0819  18                          defb %00011000
    1622:  01:081A  00                          defb %00000000
    1623:  01:081B                      
    1624:  01:081B                              ; code=162, hex=0xA2, ascii="!""
    1625:  01:081B  18                          defb %00011000
    1626:  01:081C  00                          defb %00000000
    1627:  01:081D  30                          defb %00110000
    1628:  01:081E  48                          defb %01001000
    1629:  01:081F  48                          defb %01001000
    1630:  01:0820  48                          defb %01001000
    1631:  01:0821  30                          defb %00110000
    1632:  01:0822  00                          defb %00000000
    1633:  01:0823                      
    1634:  01:0823                              ; code=163, hex=0xA3, ascii="!#"
    1635:  01:0823  18                          defb %00011000
    1636:  01:0824  00                          defb %00000000
    1637:  01:0825  48                          defb %01001000
    1638:  01:0826  48                          defb %01001000
    1639:  01:0827  48                          defb %01001000
    1640:  01:0828  58                          defb %01011000
    1641:  01:0829  28                          defb %00101000
    1642:  01:082A  00                          defb %00000000
    1643:  01:082B                      
    1644:  01:082B                              ; code=164, hex=0xA4, ascii="!$"
    1645:  01:082B  28                          defb %00101000
    1646:  01:082C  50                          defb %01010000
    1647:  01:082D  00                          defb %00000000
    1648:  01:082E  70                          defb %01110000
    1649:  01:082F  48                          defb %01001000
    1650:  01:0830  48                          defb %01001000
    1651:  01:0831  48                          defb %01001000
    1652:  01:0832  00                          defb %00000000
    1653:  01:0833                      
    1654:  01:0833                              ; code=165, hex=0xA5, ascii="!%"
    1655:  01:0833  28                          defb %00101000
    1656:  01:0834  50                          defb %01010000
    1657:  01:0835  00                          defb %00000000
    1658:  01:0836  48                          defb %01001000
    1659:  01:0837  68                          defb %01101000
    1660:  01:0838  58                          defb %01011000
    1661:  01:0839  48                          defb %01001000
    1662:  01:083A  00                          defb %00000000
    1663:  01:083B                      
    1664:  01:083B                              ; code=166, hex=0xA6, ascii="!&"
    1665:  01:083B  38                          defb %00111000
    1666:  01:083C  04                          defb %00000100
    1667:  01:083D  3C                          defb %00111100
    1668:  01:083E  44                          defb %01000100
    1669:  01:083F  3C                          defb %00111100
    1670:  01:0840  00                          defb %00000000
    1671:  01:0841  3C                          defb %00111100
    1672:  01:0842  00                          defb %00000000
    1673:  01:0843                      
    1674:  01:0843                              ; code=167, hex=0xA7, ascii="!'"
    1675:  01:0843  30                          defb %00110000
    1676:  01:0844  48                          defb %01001000
    1677:  01:0845  48                          defb %01001000
    1678:  01:0846  48                          defb %01001000
    1679:  01:0847  30                          defb %00110000
    1680:  01:0848  00                          defb %00000000
    1681:  01:0849  78                          defb %01111000
    1682:  01:084A  00                          defb %00000000
    1683:  01:084B                      
    1684:  01:084B                              ; code=168, hex=0xA8, ascii="!("
    1685:  01:084B  10                          defb %00010000
    1686:  01:084C  00                          defb %00000000
    1687:  01:084D  10                          defb %00010000
    1688:  01:084E  30                          defb %00110000
    1689:  01:084F  40                          defb %01000000
    1690:  01:0850  44                          defb %01000100
    1691:  01:0851  38                          defb %00111000
    1692:  01:0852  00                          defb %00000000
    1693:  01:0853                      
    1694:  01:0853                              ; code=169, hex=0xA9, ascii="!)"
    1695:  01:0853  00                          defb %00000000
    1696:  01:0854  00                          defb %00000000
    1697:  01:0855  7C                          defb %01111100
    1698:  01:0856  40                          defb %01000000
    1699:  01:0857  40                          defb %01000000
    1700:  01:0858  40                          defb %01000000
    1701:  01:0859  00                          defb %00000000
    1702:  01:085A  00                          defb %00000000
    1703:  01:085B                      
    1704:  01:085B                              ; code=170, hex=0xAA, ascii="!*"
    1705:  01:085B  00                          defb %00000000
    1706:  01:085C  00                          defb %00000000
    1707:  01:085D  FC                          defb %11111100
    1708:  01:085E  04                          defb %00000100
    1709:  01:085F  04                          defb %00000100
    1710:  01:0860  00                          defb %00000000
    1711:  01:0861  00                          defb %00000000
    1712:  01:0862  00                          defb %00000000
    1713:  01:0863                      
    1714:  01:0863                              ; code=171, hex=0xAB, ascii="!+"
    1715:  01:0863  40                          defb %01000000
    1716:  01:0864  48                          defb %01001000
    1717:  01:0865  50                          defb %01010000
    1718:  01:0866  38                          defb %00111000
    1719:  01:0867  44                          defb %01000100
    1720:  01:0868  08                          defb %00001000
    1721:  01:0869  1C                          defb %00011100
    1722:  01:086A  00                          defb %00000000
    1723:  01:086B                      
    1724:  01:086B                              ; code=172, hex=0xAC, ascii="!,"
    1725:  01:086B  40                          defb %01000000
    1726:  01:086C  48                          defb %01001000
    1727:  01:086D  50                          defb %01010000
    1728:  01:086E  2C                          defb %00101100
    1729:  01:086F  54                          defb %01010100
    1730:  01:0870  1C                          defb %00011100
    1731:  01:0871  04                          defb %00000100
    1732:  01:0872  00                          defb %00000000
    1733:  01:0873                      
    1734:  01:0873                              ; code=173, hex=0xAD, ascii="!-"
    1735:  01:0873  10                          defb %00010000
    1736:  01:0874  00                          defb %00000000
    1737:  01:0875  10                          defb %00010000
    1738:  01:0876  10                          defb %00010000
    1739:  01:0877  38                          defb %00111000
    1740:  01:0878  38                          defb %00111000
    1741:  01:0879  10                          defb %00010000
    1742:  01:087A  00                          defb %00000000
    1743:  01:087B                      
    1744:  01:087B                              ; code=174, hex=0xAE, ascii="!."
    1745:  01:087B  00                          defb %00000000
    1746:  01:087C  00                          defb %00000000
    1747:  01:087D  24                          defb %00100100
    1748:  01:087E  48                          defb %01001000
    1749:  01:087F  24                          defb %00100100
    1750:  01:0880  00                          defb %00000000
    1751:  01:0881  00                          defb %00000000
    1752:  01:0882  00                          defb %00000000
    1753:  01:0883                      
    1754:  01:0883                              ; code=175, hex=0xAF, ascii="!/"
    1755:  01:0883  00                          defb %00000000
    1756:  01:0884  00                          defb %00000000
    1757:  01:0885  48                          defb %01001000
    1758:  01:0886  24                          defb %00100100
    1759:  01:0887  48                          defb %01001000
    1760:  01:0888  00                          defb %00000000
    1761:  01:0889  00                          defb %00000000
    1762:  01:088A  00                          defb %00000000
    1763:  01:088B                      
    1764:  01:088B                              ; code=176, hex=0xB0, ascii="!0"
    1765:  01:088B  54                          defb %01010100
    1766:  01:088C  00                          defb %00000000
    1767:  01:088D  A8                          defb %10101000
    1768:  01:088E  00                          defb %00000000
    1769:  01:088F  54                          defb %01010100
    1770:  01:0890  00                          defb %00000000
    1771:  01:0891  A8                          defb %10101000
    1772:  01:0892  00                          defb %00000000
    1773:  01:0893                      
    1774:  01:0893                              ; code=177, hex=0xB1, ascii="!1"
    1775:  01:0893  54                          defb %01010100
    1776:  01:0894  A8                          defb %10101000
    1777:  01:0895  54                          defb %01010100
    1778:  01:0896  A8                          defb %10101000
    1779:  01:0897  54                          defb %01010100
    1780:  01:0898  A8                          defb %10101000
    1781:  01:0899  54                          defb %01010100
    1782:  01:089A  A8                          defb %10101000
    1783:  01:089B                      
    1784:  01:089B                              ; code=178, hex=0xB2, ascii="!2"
    1785:  01:089B  A8                          defb %10101000
    1786:  01:089C  FC                          defb %11111100
    1787:  01:089D  54                          defb %01010100
    1788:  01:089E  FC                          defb %11111100
    1789:  01:089F  A8                          defb %10101000
    1790:  01:08A0  FC                          defb %11111100
    1791:  01:08A1  54                          defb %01010100
    1792:  01:08A2  FC                          defb %11111100
    1793:  01:08A3                      
    1794:  01:08A3                              ; code=179, hex=0xB3, ascii="!3"
    1795:  01:08A3  10                          defb %00010000
    1796:  01:08A4  10                          defb %00010000
    1797:  01:08A5  10                          defb %00010000
    1798:  01:08A6  10                          defb %00010000
    1799:  01:08A7  10                          defb %00010000
    1800:  01:08A8  10                          defb %00010000
    1801:  01:08A9  10                          defb %00010000
    1802:  01:08AA  10                          defb %00010000
    1803:  01:08AB                      
    1804:  01:08AB                              ; code=180, hex=0xB4, ascii="!4"
    1805:  01:08AB  10                          defb %00010000
    1806:  01:08AC  10                          defb %00010000
    1807:  01:08AD  10                          defb %00010000
    1808:  01:08AE  F0                          defb %11110000
    1809:  01:08AF  10                          defb %00010000
    1810:  01:08B0  10                          defb %00010000
    1811:  01:08B1  10                          defb %00010000
    1812:  01:08B2  10                          defb %00010000
    1813:  01:08B3                      
    1814:  01:08B3                              ; code=181, hex=0xB5, ascii="!5"
    1815:  01:08B3  10                          defb %00010000
    1816:  01:08B4  F0                          defb %11110000
    1817:  01:08B5  10                          defb %00010000
    1818:  01:08B6  F0                          defb %11110000
    1819:  01:08B7  10                          defb %00010000
    1820:  01:08B8  10                          defb %00010000
    1821:  01:08B9  10                          defb %00010000
    1822:  01:08BA  10                          defb %00010000
    1823:  01:08BB                      
    1824:  01:08BB                              ; code=182, hex=0xB6, ascii="!6"
    1825:  01:08BB  50                          defb %01010000
    1826:  01:08BC  50                          defb %01010000
    1827:  01:08BD  50                          defb %01010000
    1828:  01:08BE  D0                          defb %11010000
    1829:  01:08BF  50                          defb %01010000
    1830:  01:08C0  50                          defb %01010000
    1831:  01:08C1  50                          defb %01010000
    1832:  01:08C2  50                          defb %01010000
    1833:  01:08C3                      
    1834:  01:08C3                              ; code=183, hex=0xB7, ascii="!7"
    1835:  01:08C3  00                          defb %00000000
    1836:  01:08C4  00                          defb %00000000
    1837:  01:08C5  00                          defb %00000000
    1838:  01:08C6  F0                          defb %11110000
    1839:  01:08C7  50                          defb %01010000
    1840:  01:08C8  50                          defb %01010000
    1841:  01:08C9  50                          defb %01010000
    1842:  01:08CA  50                          defb %01010000
    1843:  01:08CB                      
    1844:  01:08CB                              ; code=184, hex=0xB8, ascii="!8"
    1845:  01:08CB  00                          defb %00000000
    1846:  01:08CC  F0                          defb %11110000
    1847:  01:08CD  10                          defb %00010000
    1848:  01:08CE  F0                          defb %11110000
    1849:  01:08CF  10                          defb %00010000
    1850:  01:08D0  10                          defb %00010000
    1851:  01:08D1  10                          defb %00010000
    1852:  01:08D2  10                          defb %00010000
    1853:  01:08D3                      
    1854:  01:08D3                              ; code=185, hex=0xB9, ascii="!9"
    1855:  01:08D3  50                          defb %01010000
    1856:  01:08D4  D0                          defb %11010000
    1857:  01:08D5  10                          defb %00010000
    1858:  01:08D6  D0                          defb %11010000
    1859:  01:08D7  50                          defb %01010000
    1860:  01:08D8  50                          defb %01010000
    1861:  01:08D9  50                          defb %01010000
    1862:  01:08DA  50                          defb %01010000
    1863:  01:08DB                      
    1864:  01:08DB                              ; code=186, hex=0xBA, ascii="!:"
    1865:  01:08DB  50                          defb %01010000
    1866:  01:08DC  50                          defb %01010000
    1867:  01:08DD  50                          defb %01010000
    1868:  01:08DE  50                          defb %01010000
    1869:  01:08DF  50                          defb %01010000
    1870:  01:08E0  50                          defb %01010000
    1871:  01:08E1  50                          defb %01010000
    1872:  01:08E2  50                          defb %01010000
    1873:  01:08E3                      
    1874:  01:08E3                              ; code=187, hex=0xBB, ascii="!;"
    1875:  01:08E3  00                          defb %00000000
    1876:  01:08E4  F0                          defb %11110000
    1877:  01:08E5  10                          defb %00010000
    1878:  01:08E6  D0                          defb %11010000
    1879:  01:08E7  50                          defb %01010000
    1880:  01:08E8  50                          defb %01010000
    1881:  01:08E9  50                          defb %01010000
    1882:  01:08EA  50                          defb %01010000
    1883:  01:08EB                      
    1884:  01:08EB                              ; code=188, hex=0xBC, ascii="!<"
    1885:  01:08EB  50                          defb %01010000
    1886:  01:08EC  D0                          defb %11010000
    1887:  01:08ED  10                          defb %00010000
    1888:  01:08EE  F0                          defb %11110000
    1889:  01:08EF  00                          defb %00000000
    1890:  01:08F0  00                          defb %00000000
    1891:  01:08F1  00                          defb %00000000
    1892:  01:08F2  00                          defb %00000000
    1893:  01:08F3                      
    1894:  01:08F3                              ; code=189, hex=0xBD, ascii="!="
    1895:  01:08F3  50                          defb %01010000
    1896:  01:08F4  50                          defb %01010000
    1897:  01:08F5  50                          defb %01010000
    1898:  01:08F6  F0                          defb %11110000
    1899:  01:08F7  00                          defb %00000000
    1900:  01:08F8  00                          defb %00000000
    1901:  01:08F9  00                          defb %00000000
    1902:  01:08FA  00                          defb %00000000
    1903:  01:08FB                      
    1904:  01:08FB                              ; code=190, hex=0xBE, ascii="!>"
    1905:  01:08FB  10                          defb %00010000
    1906:  01:08FC  F0                          defb %11110000
    1907:  01:08FD  10                          defb %00010000
    1908:  01:08FE  F0                          defb %11110000
    1909:  01:08FF  00                          defb %00000000
    1910:  01:0900  00                          defb %00000000
    1911:  01:0901  00                          defb %00000000
    1912:  01:0902  00                          defb %00000000
    1913:  01:0903                      
    1914:  01:0903                              ; code=191, hex=0xBF, ascii="!?"
    1915:  01:0903  00                          defb %00000000
    1916:  01:0904  00                          defb %00000000
    1917:  01:0905  00                          defb %00000000
    1918:  01:0906  F0                          defb %11110000
    1919:  01:0907  10                          defb %00010000
    1920:  01:0908  10                          defb %00010000
    1921:  01:0909  10                          defb %00010000
    1922:  01:090A  10                          defb %00010000
    1923:  01:090B                      
    1924:  01:090B                              ; code=192, hex=0xC0, ascii="!@"
    1925:  01:090B  10                          defb %00010000
    1926:  01:090C  10                          defb %00010000
    1927:  01:090D  10                          defb %00010000
    1928:  01:090E  1C                          defb %00011100
    1929:  01:090F  00                          defb %00000000
    1930:  01:0910  00                          defb %00000000
    1931:  01:0911  00                          defb %00000000
    1932:  01:0912  00                          defb %00000000
    1933:  01:0913                      
    1934:  01:0913                              ; code=193, hex=0xC1, ascii="!A"
    1935:  01:0913  10                          defb %00010000
    1936:  01:0914  10                          defb %00010000
    1937:  01:0915  10                          defb %00010000
    1938:  01:0916  FC                          defb %11111100
    1939:  01:0917  00                          defb %00000000
    1940:  01:0918  00                          defb %00000000
    1941:  01:0919  00                          defb %00000000
    1942:  01:091A  00                          defb %00000000
    1943:  01:091B                      
    1944:  01:091B                              ; code=194, hex=0xC2, ascii="!B"
    1945:  01:091B  00                          defb %00000000
    1946:  01:091C  00                          defb %00000000
    1947:  01:091D  00                          defb %00000000
    1948:  01:091E  FC                          defb %11111100
    1949:  01:091F  10                          defb %00010000
    1950:  01:0920  10                          defb %00010000
    1951:  01:0921  10                          defb %00010000
    1952:  01:0922  10                          defb %00010000
    1953:  01:0923                      
    1954:  01:0923                              ; code=195, hex=0xC3, ascii="!C"
    1955:  01:0923  10                          defb %00010000
    1956:  01:0924  10                          defb %00010000
    1957:  01:0925  10                          defb %00010000
    1958:  01:0926  1C                          defb %00011100
    1959:  01:0927  10                          defb %00010000
    1960:  01:0928  10                          defb %00010000
    1961:  01:0929  10                          defb %00010000
    1962:  01:092A  10                          defb %00010000
    1963:  01:092B                      
    1964:  01:092B                              ; code=196, hex=0xC4, ascii="!D"
    1965:  01:092B  00                          defb %00000000
    1966:  01:092C  00                          defb %00000000
    1967:  01:092D  00                          defb %00000000
    1968:  01:092E  FC                          defb %11111100
    1969:  01:092F  00                          defb %00000000
    1970:  01:0930  00                          defb %00000000
    1971:  01:0931  00                          defb %00000000
    1972:  01:0932  00                          defb %00000000
    1973:  01:0933                      
    1974:  01:0933                              ; code=197, hex=0xC5, ascii="!E"
    1975:  01:0933  10                          defb %00010000
    1976:  01:0934  10                          defb %00010000
    1977:  01:0935  10                          defb %00010000
    1978:  01:0936  FC                          defb %11111100
    1979:  01:0937  10                          defb %00010000
    1980:  01:0938  10                          defb %00010000
    1981:  01:0939  10                          defb %00010000
    1982:  01:093A  10                          defb %00010000
    1983:  01:093B                      
    1984:  01:093B                              ; code=198, hex=0xC6, ascii="!F"
    1985:  01:093B  10                          defb %00010000
    1986:  01:093C  1C                          defb %00011100
    1987:  01:093D  10                          defb %00010000
    1988:  01:093E  1C                          defb %00011100
    1989:  01:093F  10                          defb %00010000
    1990:  01:0940  10                          defb %00010000
    1991:  01:0941  10                          defb %00010000
    1992:  01:0942  10                          defb %00010000
    1993:  01:0943                      
    1994:  01:0943                              ; code=199, hex=0xC7, ascii="!G"
    1995:  01:0943  50                          defb %01010000
    1996:  01:0944  50                          defb %01010000
    1997:  01:0945  50                          defb %01010000
    1998:  01:0946  5C                          defb %01011100
    1999:  01:0947  50                          defb %01010000
    2000:  01:0948  50                          defb %01010000
    2001:  01:0949  50                          defb %01010000
    2002:  01:094A  50                          defb %01010000
    2003:  01:094B                      
    2004:  01:094B                              ; code=200, hex=0xC8, ascii="!H"
    2005:  01:094B  50                          defb %01010000
    2006:  01:094C  5C                          defb %01011100
    2007:  01:094D  40                          defb %01000000
    2008:  01:094E  7C                          defb %01111100
    2009:  01:094F  00                          defb %00000000
    2010:  01:0950  00                          defb %00000000
    2011:  01:0951  00                          defb %00000000
    2012:  01:0952  00                          defb %00000000
    2013:  01:0953                      
    2014:  01:0953                              ; code=201, hex=0xC9, ascii="!I"
    2015:  01:0953  00                          defb %00000000
    2016:  01:0954  7C                          defb %01111100
    2017:  01:0955  40                          defb %01000000
    2018:  01:0956  5C                          defb %01011100
    2019:  01:0957  50                          defb %01010000
    2020:  01:0958  50                          defb %01010000
    2021:  01:0959  50                          defb %01010000
    2022:  01:095A  50                          defb %01010000
    2023:  01:095B                      
    2024:  01:095B                              ; code=202, hex=0xCA, ascii="!J"
    2025:  01:095B  50                          defb %01010000
    2026:  01:095C  DC                          defb %11011100
    2027:  01:095D  00                          defb %00000000
    2028:  01:095E  FC                          defb %11111100
    2029:  01:095F  00                          defb %00000000
    2030:  01:0960  00                          defb %00000000
    2031:  01:0961  00                          defb %00000000
    2032:  01:0962  00                          defb %00000000
    2033:  01:0963                      
    2034:  01:0963                              ; code=203, hex=0xCB, ascii="!K"
    2035:  01:0963  00                          defb %00000000
    2036:  01:0964  FC                          defb %11111100
    2037:  01:0965  00                          defb %00000000
    2038:  01:0966  DC                          defb %11011100
    2039:  01:0967  50                          defb %01010000
    2040:  01:0968  50                          defb %01010000
    2041:  01:0969  50                          defb %01010000
    2042:  01:096A  50                          defb %01010000
    2043:  01:096B                      
    2044:  01:096B                              ; code=204, hex=0xCC, ascii="!L"
    2045:  01:096B  50                          defb %01010000
    2046:  01:096C  5C                          defb %01011100
    2047:  01:096D  40                          defb %01000000
    2048:  01:096E  5C                          defb %01011100
    2049:  01:096F  50                          defb %01010000
    2050:  01:0970  50                          defb %01010000
    2051:  01:0971  50                          defb %01010000
    2052:  01:0972  50                          defb %01010000
    2053:  01:0973                      
    2054:  01:0973                              ; code=205, hex=0xCD, ascii="!M"
    2055:  01:0973  00                          defb %00000000
    2056:  01:0974  FC                          defb %11111100
    2057:  01:0975  00                          defb %00000000
    2058:  01:0976  FC                          defb %11111100
    2059:  01:0977  00                          defb %00000000
    2060:  01:0978  00                          defb %00000000
    2061:  01:0979  00                          defb %00000000
    2062:  01:097A  00                          defb %00000000
    2063:  01:097B                      
    2064:  01:097B                              ; code=206, hex=0xCE, ascii="!N"
    2065:  01:097B  50                          defb %01010000
    2066:  01:097C  DC                          defb %11011100
    2067:  01:097D  00                          defb %00000000
    2068:  01:097E  DC                          defb %11011100
    2069:  01:097F  50                          defb %01010000
    2070:  01:0980  50                          defb %01010000
    2071:  01:0981  50                          defb %01010000
    2072:  01:0982  50                          defb %01010000
    2073:  01:0983                      
    2074:  01:0983                              ; code=207, hex=0xCF, ascii="!O"
    2075:  01:0983  10                          defb %00010000
    2076:  01:0984  FC                          defb %11111100
    2077:  01:0985  00                          defb %00000000
    2078:  01:0986  FC                          defb %11111100
    2079:  01:0987  00                          defb %00000000
    2080:  01:0988  00                          defb %00000000
    2081:  01:0989  00                          defb %00000000
    2082:  01:098A  00                          defb %00000000
    2083:  01:098B                      
    2084:  01:098B                              ; code=208, hex=0xD0, ascii="!P"
    2085:  01:098B  50                          defb %01010000
    2086:  01:098C  50                          defb %01010000
    2087:  01:098D  50                          defb %01010000
    2088:  01:098E  FC                          defb %11111100
    2089:  01:098F  00                          defb %00000000
    2090:  01:0990  00                          defb %00000000
    2091:  01:0991  00                          defb %00000000
    2092:  01:0992  00                          defb %00000000
    2093:  01:0993                      
    2094:  01:0993                              ; code=209, hex=0xD1, ascii="!Q"
    2095:  01:0993  00                          defb %00000000
    2096:  01:0994  FC                          defb %11111100
    2097:  01:0995  00                          defb %00000000
    2098:  01:0996  FC                          defb %11111100
    2099:  01:0997  10                          defb %00010000
    2100:  01:0998  10                          defb %00010000
    2101:  01:0999  10                          defb %00010000
    2102:  01:099A  10                          defb %00010000
    2103:  01:099B                      
    2104:  01:099B                              ; code=210, hex=0xD2, ascii="!R"
    2105:  01:099B  00                          defb %00000000
    2106:  01:099C  00                          defb %00000000
    2107:  01:099D  00                          defb %00000000
    2108:  01:099E  FC                          defb %11111100
    2109:  01:099F  50                          defb %01010000
    2110:  01:09A0  50                          defb %01010000
    2111:  01:09A1  50                          defb %01010000
    2112:  01:09A2  50                          defb %01010000
    2113:  01:09A3                      
    2114:  01:09A3                              ; code=211, hex=0xD3, ascii="!S"
    2115:  01:09A3  50                          defb %01010000
    2116:  01:09A4  50                          defb %01010000
    2117:  01:09A5  50                          defb %01010000
    2118:  01:09A6  7C                          defb %01111100
    2119:  01:09A7  00                          defb %00000000
    2120:  01:09A8  00                          defb %00000000
    2121:  01:09A9  00                          defb %00000000
    2122:  01:09AA  00                          defb %00000000
    2123:  01:09AB                      
    2124:  01:09AB                              ; code=212, hex=0xD4, ascii="!T"
    2125:  01:09AB  10                          defb %00010000
    2126:  01:09AC  1C                          defb %00011100
    2127:  01:09AD  10                          defb %00010000
    2128:  01:09AE  1C                          defb %00011100
    2129:  01:09AF  00                          defb %00000000
    2130:  01:09B0  00                          defb %00000000
    2131:  01:09B1  00                          defb %00000000
    2132:  01:09B2  00                          defb %00000000
    2133:  01:09B3                      
    2134:  01:09B3                              ; code=213, hex=0xD5, ascii="!U"
    2135:  01:09B3  00                          defb %00000000
    2136:  01:09B4  1C                          defb %00011100
    2137:  01:09B5  10                          defb %00010000
    2138:  01:09B6  1C                          defb %00011100
    2139:  01:09B7  10                          defb %00010000
    2140:  01:09B8  10                          defb %00010000
    2141:  01:09B9  10                          defb %00010000
    2142:  01:09BA  10                          defb %00010000
    2143:  01:09BB                      
    2144:  01:09BB                              ; code=214, hex=0xD6, ascii="!V"
    2145:  01:09BB  00                          defb %00000000
    2146:  01:09BC  00                          defb %00000000
    2147:  01:09BD  00                          defb %00000000
    2148:  01:09BE  7C                          defb %01111100
    2149:  01:09BF  50                          defb %01010000
    2150:  01:09C0  50                          defb %01010000
    2151:  01:09C1  50                          defb %01010000
    2152:  01:09C2  50                          defb %01010000
    2153:  01:09C3                      
    2154:  01:09C3                              ; code=215, hex=0xD7, ascii="!W"
    2155:  01:09C3  50                          defb %01010000
    2156:  01:09C4  50                          defb %01010000
    2157:  01:09C5  50                          defb %01010000
    2158:  01:09C6  DC                          defb %11011100
    2159:  01:09C7  50                          defb %01010000
    2160:  01:09C8  50                          defb %01010000
    2161:  01:09C9  50                          defb %01010000
    2162:  01:09CA  50                          defb %01010000
    2163:  01:09CB                      
    2164:  01:09CB                              ; code=216, hex=0xD8, ascii="!X"
    2165:  01:09CB  10                          defb %00010000
    2166:  01:09CC  FC                          defb %11111100
    2167:  01:09CD  00                          defb %00000000
    2168:  01:09CE  FC                          defb %11111100
    2169:  01:09CF  10                          defb %00010000
    2170:  01:09D0  10                          defb %00010000
    2171:  01:09D1  10                          defb %00010000
    2172:  01:09D2  10                          defb %00010000
    2173:  01:09D3                      
    2174:  01:09D3                              ; code=217, hex=0xD9, ascii="!Y"
    2175:  01:09D3  10                          defb %00010000
    2176:  01:09D4  10                          defb %00010000
    2177:  01:09D5  10                          defb %00010000
    2178:  01:09D6  F0                          defb %11110000
    2179:  01:09D7  00                          defb %00000000
    2180:  01:09D8  00                          defb %00000000
    2181:  01:09D9  00                          defb %00000000
    2182:  01:09DA  00                          defb %00000000
    2183:  01:09DB                      
    2184:  01:09DB                              ; code=218, hex=0xDA, ascii="!Z"
    2185:  01:09DB  00                          defb %00000000
    2186:  01:09DC  00                          defb %00000000
    2187:  01:09DD  00                          defb %00000000
    2188:  01:09DE  1C                          defb %00011100
    2189:  01:09DF  10                          defb %00010000
    2190:  01:09E0  10                          defb %00010000
    2191:  01:09E1  10                          defb %00010000
    2192:  01:09E2  10                          defb %00010000
    2193:  01:09E3                      
    2194:  01:09E3                              ; code=219, hex=0xDB, ascii="!["
    2195:  01:09E3  FC                          defb %11111100
    2196:  01:09E4  FC                          defb %11111100
    2197:  01:09E5  FC                          defb %11111100
    2198:  01:09E6  FC                          defb %11111100
    2199:  01:09E7  FC                          defb %11111100
    2200:  01:09E8  FC                          defb %11111100
    2201:  01:09E9  FC                          defb %11111100
    2202:  01:09EA  FC                          defb %11111100
    2203:  01:09EB                      
    2204:  01:09EB                              ; code=220, hex=0xDC, ascii="!\"
    2205:  01:09EB  00                          defb %00000000
    2206:  01:09EC  00                          defb %00000000
    2207:  01:09ED  00                          defb %00000000
    2208:  01:09EE  00                          defb %00000000
    2209:  01:09EF  FC                          defb %11111100
    2210:  01:09F0  FC                          defb %11111100
    2211:  01:09F1  FC                          defb %11111100
    2212:  01:09F2  FC                          defb %11111100
    2213:  01:09F3                      
    2214:  01:09F3                              ; code=221, hex=0xDD, ascii="!]"
    2215:  01:09F3  E0                          defb %11100000
    2216:  01:09F4  E0                          defb %11100000
    2217:  01:09F5  E0                          defb %11100000
    2218:  01:09F6  E0                          defb %11100000
    2219:  01:09F7  E0                          defb %11100000
    2220:  01:09F8  E0                          defb %11100000
    2221:  01:09F9  E0                          defb %11100000
    2222:  01:09FA  E0                          defb %11100000
    2223:  01:09FB                      
    2224:  01:09FB                              ; code=222, hex=0xDE, ascii="!^"
    2225:  01:09FB  1C                          defb %00011100
    2226:  01:09FC  1C                          defb %00011100
    2227:  01:09FD  1C                          defb %00011100
    2228:  01:09FE  1C                          defb %00011100
    2229:  01:09FF  1C                          defb %00011100
    2230:  01:0A00  1C                          defb %00011100
    2231:  01:0A01  1C                          defb %00011100
    2232:  01:0A02  1C                          defb %00011100
    2233:  01:0A03                      
    2234:  01:0A03                              ; code=223, hex=0xDF, ascii="!_"
    2235:  01:0A03  FC                          defb %11111100
    2236:  01:0A04  FC                          defb %11111100
    2237:  01:0A05  FC                          defb %11111100
    2238:  01:0A06  FC                          defb %11111100
    2239:  01:0A07  00                          defb %00000000
    2240:  01:0A08  00                          defb %00000000
    2241:  01:0A09  00                          defb %00000000
    2242:  01:0A0A  00                          defb %00000000
    2243:  01:0A0B                      
    2244:  01:0A0B                              ; code=224, hex=0xE0, ascii="!`"
    2245:  01:0A0B  00                          defb %00000000
    2246:  01:0A0C  00                          defb %00000000
    2247:  01:0A0D  34                          defb %00110100
    2248:  01:0A0E  48                          defb %01001000
    2249:  01:0A0F  48                          defb %01001000
    2250:  01:0A10  34                          defb %00110100
    2251:  01:0A11  00                          defb %00000000
    2252:  01:0A12  00                          defb %00000000
    2253:  01:0A13                      
    2254:  01:0A13                              ; code=225, hex=0xE1, ascii="!a"
    2255:  01:0A13  00                          defb %00000000
    2256:  01:0A14  70                          defb %01110000
    2257:  01:0A15  48                          defb %01001000
    2258:  01:0A16  70                          defb %01110000
    2259:  01:0A17  48                          defb %01001000
    2260:  01:0A18  48                          defb %01001000
    2261:  01:0A19  70                          defb %01110000
    2262:  01:0A1A  40                          defb %01000000
    2263:  01:0A1B                      
    2264:  01:0A1B                              ; code=226, hex=0xE2, ascii="!b"
    2265:  01:0A1B  78                          defb %01111000
    2266:  01:0A1C  48                          defb %01001000
    2267:  01:0A1D  40                          defb %01000000
    2268:  01:0A1E  40                          defb %01000000
    2269:  01:0A1F  40                          defb %01000000
    2270:  01:0A20  40                          defb %01000000
    2271:  01:0A21  40                          defb %01000000
    2272:  01:0A22  00                          defb %00000000
    2273:  01:0A23                      
    2274:  01:0A23                              ; code=227, hex=0xE3, ascii="!c"
    2275:  01:0A23  00                          defb %00000000
    2276:  01:0A24  7C                          defb %01111100
    2277:  01:0A25  28                          defb %00101000
    2278:  01:0A26  28                          defb %00101000
    2279:  01:0A27  28                          defb %00101000
    2280:  01:0A28  28                          defb %00101000
    2281:  01:0A29  28                          defb %00101000
    2282:  01:0A2A  00                          defb %00000000
    2283:  01:0A2B                      
    2284:  01:0A2B                              ; code=228, hex=0xE4, ascii="!d"
    2285:  01:0A2B  78                          defb %01111000
    2286:  01:0A2C  48                          defb %01001000
    2287:  01:0A2D  20                          defb %00100000
    2288:  01:0A2E  10                          defb %00010000
    2289:  01:0A2F  20                          defb %00100000
    2290:  01:0A30  48                          defb %01001000
    2291:  01:0A31  78                          defb %01111000
    2292:  01:0A32  00                          defb %00000000
    2293:  01:0A33                      
    2294:  01:0A33                              ; code=229, hex=0xE5, ascii="!e"
    2295:  01:0A33  00                          defb %00000000
    2296:  01:0A34  00                          defb %00000000
    2297:  01:0A35  3C                          defb %00111100
    2298:  01:0A36  48                          defb %01001000
    2299:  01:0A37  48                          defb %01001000
    2300:  01:0A38  30                          defb %00110000
    2301:  01:0A39  00                          defb %00000000
    2302:  01:0A3A  00                          defb %00000000
    2303:  01:0A3B                      
    2304:  01:0A3B                              ; code=230, hex=0xE6, ascii="!f"
    2305:  01:0A3B  00                          defb %00000000
    2306:  01:0A3C  00                          defb %00000000
    2307:  01:0A3D  48                          defb %01001000
    2308:  01:0A3E  48                          defb %01001000
    2309:  01:0A3F  48                          defb %01001000
    2310:  01:0A40  70                          defb %01110000
    2311:  01:0A41  40                          defb %01000000
    2312:  01:0A42  40                          defb %01000000
    2313:  01:0A43                      
    2314:  01:0A43                              ; code=231, hex=0xE7, ascii="!g"
    2315:  01:0A43  00                          defb %00000000
    2316:  01:0A44  00                          defb %00000000
    2317:  01:0A45  28                          defb %00101000
    2318:  01:0A46  50                          defb %01010000
    2319:  01:0A47  10                          defb %00010000
    2320:  01:0A48  10                          defb %00010000
    2321:  01:0A49  10                          defb %00010000
    2322:  01:0A4A  00                          defb %00000000
    2323:  01:0A4B                      
    2324:  01:0A4B                              ; code=232, hex=0xE8, ascii="!h"
    2325:  01:0A4B  38                          defb %00111000
    2326:  01:0A4C  10                          defb %00010000
    2327:  01:0A4D  38                          defb %00111000
    2328:  01:0A4E  44                          defb %01000100
    2329:  01:0A4F  38                          defb %00111000
    2330:  01:0A50  10                          defb %00010000
    2331:  01:0A51  38                          defb %00111000
    2332:  01:0A52  00                          defb %00000000
    2333:  01:0A53                      
    2334:  01:0A53                              ; code=233, hex=0xE9, ascii="!i"
    2335:  01:0A53  30                          defb %00110000
    2336:  01:0A54  48                          defb %01001000
    2337:  01:0A55  48                          defb %01001000
    2338:  01:0A56  78                          defb %01111000
    2339:  01:0A57  48                          defb %01001000
    2340:  01:0A58  48                          defb %01001000
    2341:  01:0A59  30                          defb %00110000
    2342:  01:0A5A  00                          defb %00000000
    2343:  01:0A5B                      
    2344:  01:0A5B                              ; code=234, hex=0xEA, ascii="!j"
    2345:  01:0A5B  00                          defb %00000000
    2346:  01:0A5C  38                          defb %00111000
    2347:  01:0A5D  44                          defb %01000100
    2348:  01:0A5E  44                          defb %01000100
    2349:  01:0A5F  28                          defb %00101000
    2350:  01:0A60  28                          defb %00101000
    2351:  01:0A61  6C                          defb %01101100
    2352:  01:0A62  00                          defb %00000000
    2353:  01:0A63                      
    2354:  01:0A63                              ; code=235, hex=0xEB, ascii="!k"
    2355:  01:0A63  30                          defb %00110000
    2356:  01:0A64  40                          defb %01000000
    2357:  01:0A65  20                          defb %00100000
    2358:  01:0A66  10                          defb %00010000
    2359:  01:0A67  38                          defb %00111000
    2360:  01:0A68  48                          defb %01001000
    2361:  01:0A69  30                          defb %00110000
    2362:  01:0A6A  00                          defb %00000000
    2363:  01:0A6B                      
    2364:  01:0A6B                              ; code=236, hex=0xEC, ascii="!l"
    2365:  01:0A6B  00                          defb %00000000
    2366:  01:0A6C  00                          defb %00000000
    2367:  01:0A6D  28                          defb %00101000
    2368:  01:0A6E  54                          defb %01010100
    2369:  01:0A6F  54                          defb %01010100
    2370:  01:0A70  28                          defb %00101000
    2371:  01:0A71  00                          defb %00000000
    2372:  01:0A72  00                          defb %00000000
    2373:  01:0A73                      
    2374:  01:0A73                              ; code=237, hex=0xED, ascii="!m"
    2375:  01:0A73  00                          defb %00000000
    2376:  01:0A74  10                          defb %00010000
    2377:  01:0A75  38                          defb %00111000
    2378:  01:0A76  54                          defb %01010100
    2379:  01:0A77  54                          defb %01010100
    2380:  01:0A78  38                          defb %00111000
    2381:  01:0A79  10                          defb %00010000
    2382:  01:0A7A  00                          defb %00000000
    2383:  01:0A7B                      
    2384:  01:0A7B                              ; code=238, hex=0xEE, ascii="!n"
    2385:  01:0A7B  00                          defb %00000000
    2386:  01:0A7C  38                          defb %00111000
    2387:  01:0A7D  40                          defb %01000000
    2388:  01:0A7E  78                          defb %01111000
    2389:  01:0A7F  40                          defb %01000000
    2390:  01:0A80  38                          defb %00111000
    2391:  01:0A81  00                          defb %00000000
    2392:  01:0A82  00                          defb %00000000
    2393:  01:0A83                      
    2394:  01:0A83                              ; code=239, hex=0xEF, ascii="!o"
    2395:  01:0A83  00                          defb %00000000
    2396:  01:0A84  30                          defb %00110000
    2397:  01:0A85  48                          defb %01001000
    2398:  01:0A86  48                          defb %01001000
    2399:  01:0A87  48                          defb %01001000
    2400:  01:0A88  48                          defb %01001000
    2401:  01:0A89  00                          defb %00000000
    2402:  01:0A8A  00                          defb %00000000
    2403:  01:0A8B                      
    2404:  01:0A8B                              ; code=240, hex=0xF0, ascii="!p"
    2405:  01:0A8B  00                          defb %00000000
    2406:  01:0A8C  78                          defb %01111000
    2407:  01:0A8D  00                          defb %00000000
    2408:  01:0A8E  78                          defb %01111000
    2409:  01:0A8F  00                          defb %00000000
    2410:  01:0A90  78                          defb %01111000
    2411:  01:0A91  00                          defb %00000000
    2412:  01:0A92  00                          defb %00000000
    2413:  01:0A93                      
    2414:  01:0A93                              ; code=241, hex=0xF1, ascii="!q"
    2415:  01:0A93  00                          defb %00000000
    2416:  01:0A94  10                          defb %00010000
    2417:  01:0A95  38                          defb %00111000
    2418:  01:0A96  10                          defb %00010000
    2419:  01:0A97  00                          defb %00000000
    2420:  01:0A98  38                          defb %00111000
    2421:  01:0A99  00                          defb %00000000
    2422:  01:0A9A  00                          defb %00000000
    2423:  01:0A9B                      
    2424:  01:0A9B                              ; code=242, hex=0xF2, ascii="!r"
    2425:  01:0A9B  40                          defb %01000000
    2426:  01:0A9C  30                          defb %00110000
    2427:  01:0A9D  08                          defb %00001000
    2428:  01:0A9E  30                          defb %00110000
    2429:  01:0A9F  40                          defb %01000000
    2430:  01:0AA0  00                          defb %00000000
    2431:  01:0AA1  78                          defb %01111000
    2432:  01:0AA2  00                          defb %00000000
    2433:  01:0AA3                      
    2434:  01:0AA3                              ; code=243, hex=0xF3, ascii="!s"
    2435:  01:0AA3  08                          defb %00001000
    2436:  01:0AA4  30                          defb %00110000
    2437:  01:0AA5  40                          defb %01000000
    2438:  01:0AA6  30                          defb %00110000
    2439:  01:0AA7  08                          defb %00001000
    2440:  01:0AA8  00                          defb %00000000
    2441:  01:0AA9  78                          defb %01111000
    2442:  01:0AAA  00                          defb %00000000
    2443:  01:0AAB                      
    2444:  01:0AAB                              ; code=244, hex=0xF4, ascii="!t"
    2445:  01:0AAB  00                          defb %00000000
    2446:  01:0AAC  08                          defb %00001000
    2447:  01:0AAD  14                          defb %00010100
    2448:  01:0AAE  10                          defb %00010000
    2449:  01:0AAF  10                          defb %00010000
    2450:  01:0AB0  10                          defb %00010000
    2451:  01:0AB1  10                          defb %00010000
    2452:  01:0AB2  10                          defb %00010000
    2453:  01:0AB3                      
    2454:  01:0AB3                              ; code=245, hex=0xF5, ascii="!u"
    2455:  01:0AB3  10                          defb %00010000
    2456:  01:0AB4  10                          defb %00010000
    2457:  01:0AB5  10                          defb %00010000
    2458:  01:0AB6  10                          defb %00010000
    2459:  01:0AB7  10                          defb %00010000
    2460:  01:0AB8  50                          defb %01010000
    2461:  01:0AB9  20                          defb %00100000
    2462:  01:0ABA  00                          defb %00000000
    2463:  01:0ABB                      
    2464:  01:0ABB                              ; code=246, hex=0xF6, ascii="!v"
    2465:  01:0ABB  00                          defb %00000000
    2466:  01:0ABC  10                          defb %00010000
    2467:  01:0ABD  00                          defb %00000000
    2468:  01:0ABE  7C                          defb %01111100
    2469:  01:0ABF  00                          defb %00000000
    2470:  01:0AC0  10                          defb %00010000
    2471:  01:0AC1  00                          defb %00000000
    2472:  01:0AC2  00                          defb %00000000
    2473:  01:0AC3                      
    2474:  01:0AC3                              ; code=247, hex=0xF7, ascii="!w"
    2475:  01:0AC3  00                          defb %00000000
    2476:  01:0AC4  28                          defb %00101000
    2477:  01:0AC5  50                          defb %01010000
    2478:  01:0AC6  00                          defb %00000000
    2479:  01:0AC7  28                          defb %00101000
    2480:  01:0AC8  50                          defb %01010000
    2481:  01:0AC9  00                          defb %00000000
    2482:  01:0ACA  00                          defb %00000000
    2483:  01:0ACB                      
    2484:  01:0ACB                              ; code=248, hex=0xF8, ascii="!x"
    2485:  01:0ACB  30                          defb %00110000
    2486:  01:0ACC  48                          defb %01001000
    2487:  01:0ACD  48                          defb %01001000
    2488:  01:0ACE  30                          defb %00110000
    2489:  01:0ACF  00                          defb %00000000
    2490:  01:0AD0  00                          defb %00000000
    2491:  01:0AD1  00                          defb %00000000
    2492:  01:0AD2  00                          defb %00000000
    2493:  01:0AD3                      
    2494:  01:0AD3                              ; code=249, hex=0xF9, ascii="!y"
    2495:  01:0AD3  00                          defb %00000000
    2496:  01:0AD4  00                          defb %00000000
    2497:  01:0AD5  00                          defb %00000000
    2498:  01:0AD6  30                          defb %00110000
    2499:  01:0AD7  30                          defb %00110000
    2500:  01:0AD8  00                          defb %00000000
    2501:  01:0AD9  00                          defb %00000000
    2502:  01:0ADA  00                          defb %00000000
    2503:  01:0ADB                      
    2504:  01:0ADB                              ; code=250, hex=0xFA, ascii="!z"
    2505:  01:0ADB  00                          defb %00000000
    2506:  01:0ADC  00                          defb %00000000
    2507:  01:0ADD  00                          defb %00000000
    2508:  01:0ADE  20                          defb %00100000
    2509:  01:0ADF  00                          defb %00000000
    2510:  01:0AE0  00                          defb %00000000
    2511:  01:0AE1  00                          defb %00000000
    2512:  01:0AE2  00                          defb %00000000
    2513:  01:0AE3                      
    2514:  01:0AE3                              ; code=251, hex=0xFB, ascii="!{"
    2515:  01:0AE3  00                          defb %00000000
    2516:  01:0AE4  1C                          defb %00011100
    2517:  01:0AE5  10                          defb %00010000
    2518:  01:0AE6  10                          defb %00010000
    2519:  01:0AE7  50                          defb %01010000
    2520:  01:0AE8  50                          defb %01010000
    2521:  01:0AE9  20                          defb %00100000
    2522:  01:0AEA  00                          defb %00000000
    2523:  01:0AEB                      
    2524:  01:0AEB                              ; code=252, hex=0xFC, ascii="!|"
    2525:  01:0AEB  50                          defb %01010000
    2526:  01:0AEC  28                          defb %00101000
    2527:  01:0AED  28                          defb %00101000
    2528:  01:0AEE  28                          defb %00101000
    2529:  01:0AEF  00                          defb %00000000
    2530:  01:0AF0  00                          defb %00000000
    2531:  01:0AF1  00                          defb %00000000
    2532:  01:0AF2  00                          defb %00000000
    2533:  01:0AF3                      
    2534:  01:0AF3                              ; code=253, hex=0xFD, ascii="!}"
    2535:  01:0AF3  60                          defb %01100000
    2536:  01:0AF4  10                          defb %00010000
    2537:  01:0AF5  20                          defb %00100000
    2538:  01:0AF6  70                          defb %01110000
    2539:  01:0AF7  00                          defb %00000000
    2540:  01:0AF8  00                          defb %00000000
    2541:  01:0AF9  00                          defb %00000000
    2542:  01:0AFA  00                          defb %00000000
    2543:  01:0AFB                      
    2544:  01:0AFB                              ; code=254, hex=0xFE, ascii="!~"
    2545:  01:0AFB  00                          defb %00000000
    2546:  01:0AFC  00                          defb %00000000
    2547:  01:0AFD  78                          defb %01111000
    2548:  01:0AFE  78                          defb %01111000
    2549:  01:0AFF  78                          defb %01111000
    2550:  01:0B00  78                          defb %01111000
    2551:  01:0B01  00                          defb %00000000
    2552:  01:0B02  00                          defb %00000000
    2553:  01:0B03                      
    2554:  01:0B03                              ; code=255, hex=0xFF, ascii="!^"
    2555:  01:0B03  00                          defb %00000000
    2556:  01:0B04  00                          defb %00000000
    2557:  01:0B05  00                          defb %00000000
    2558:  01:0B06  00                          defb %00000000
    2559:  01:0B07  00                          defb %00000000
    2560:  01:0B08  00                          defb %00000000
    2561:  01:0B09  00                          defb %00000000
    2562:  01:0B0A  00                          defb %000000
     234.  01:0B0B                      
     235.  01:0B0B                      VDP_Regs_Text:
     236.  01:0B0B  00                      db      %00000000               ; text mode, no external video
     237.  01:0B0C  D0                      db      %11010000               ; 16K, Enable Display, Disable Interrupt
     238.  01:0B0D  00                      db      $00                     ; name table at $0000
     239.  01:0B0E  00                      db      $00                     ; color table not used
     240.  01:0B0F  01                      db      $01                     ; pattern table at $0800
     241.  01:0B10  00                      db      $00                     ; sprite attribute table not used
     242.  01:0B11  00                      db      $00                     ; sprite pattern table not used
     243.  01:0B12  F0                      db      $F0                     ; white text on black background
     244.  01:0B13                      
     245.  01:0B13                      VDP_Regs_Graphics1:
     246.  01:0B13  00                      db      %00000000               ; tilemap mode, no external video
     247.  01:0B14  C0                      db      %11000000               ; 16K, enable display, disable interrupt
     248.  01:0B15  05                      db      $05                     ; name table at $1400
     249.  01:0B16  80                      db      $80                     ; color table at $2000
     250.  01:0B17  01                      db      $01                     ; pattern table at $800
     251.  01:0B18  20                      db      $20                     ; sprite attribute table at $1000
     252.  01:0B19  00                      db      $00                     ; sprite pattern table at $0
     253.  01:0B1A  00                      db      $00                     ; black background
     254.  01:0B1B                      
     255.  01:0B1B                      VDP_Regs_Graphics2:
     256.  01:0B1B  02                      db      %00000010               ; bitmap mode, no external video
     257.  01:0B1C  C2                      db      %11000010               ; 16KB ram; enable display
     258.  01:0B1D  0E                      db      $0e                     ; name table at $3800
     259.  01:0B1E  FF                      db      $ff                     ; color table at $2000
     260.  01:0B1F  03                      db      $03                     ; pattern table at $0
     261.  01:0B20  76                      db      $76                     ; sprite attribute table at $3B00
     262.  01:0B21  03                      db      $03                     ; sprite pattern table at $1800
     263.  01:0B22  00                      db      $00                     ; black background
     264.  01:0B23                      
     265.  01:0B23                      VDP_DefaultRegisters:
     266.  01:0B23                          ; Blanking, 16KB VRAM
     267.  01:0B23                          db      $00, $80, $00, $00, $00, $00, $00, $00
     267.  01:0B23  00 80 00 00 00 00 00 00 
     268.  01:0B2B                      
     269.  01:0B2B                      VDP_B_FnTable:
     270.  01:0B2B  C3 59 02            	jp  VDP_B_Reset		            ; C = 0
     271.  01:0B2E  C3 73 02                jp  VDP_B_GoTextMode            ; C = 1
     272.  01:0B31  C3 94 02                jp  VDP_B_GoGraphics1           ; C = 2
     273.  01:0B34  C3 9E 02                jp  VDP_B_GoGraphics2           ; C = 3
     274.  01:0B37  C3 4E 02                jp  VDP_B_SetVRAMWriteAddress   ; C = 4
     275.  01:0B3A  C3 38 02                jp  VDP_B_SetRegistersFromArray ; C = 5
     276.  01:0B3D  C3 29 02                jp  VDP_B_SetRegister           ; C = 6
     277.  01:0B40  C3 19 02                jp  VDP_B_VRAMBlockCopy         ; C = 7
     278.  01:0B43  C3 0C 02                jp  VDP_B_StringOut             ; C = 8
     279.  01:0B46  C3 A8 02                jp  VDP_B_SetTextPosition       ; C = 9
     280.  01:0B49  C3 BB 02                jp  VDP_B_GoBitmapMode          ; C = 10
     281.  01:0B4C  C3 C5 02                jp  VDP_B_GetPixelAddress       ; C = 11
     282.  01:0B4F  C3 D6 02                jp  VDP_B_SetVRAMReadAddress    ; C = 12
     283.  01:0B52                      
     284.  01:0B52  (02)                    PAGE 2
     285.  02:8291  00 (8)              VDP_ShadowRegs: ds 8   ; 8 bytes of shadow registers
     286.  02:8299                      
     287.  02:8299                          org VDP_JUMPTABLE_PUBLIC
     288.  02:F000  00 (256)            VDP_FnTable_Public: ds 256
      87   02:F100                      	include "procapi.asm"
       1.  02:F100  (01)                    PAGE 1
       2.  01:0B52                      
       3.  01:0B52                      	include "procapi.inc"
       1:  01:0B52  (01:0000)           P_STRTOHEX8		= 0
       2:  01:0B52  (01:0001)           P_STRTOHEX16	= 1
       3:  01:0B52  (01:0002)           P_HEX8TOSTR		= 2
       4:  01:0B52  (01:0003)           P_HEX16TOSTR	= 3
       5:  01:0B52  (01:0004)           P_PRINTF        = 4
       6:  01:0B52  (01:0005)           P_B2D8          = 5
       7:  01:0B52  (01:0006)           P_B2D16         = 6
       8:  01:0B52  (01:0007)           P_B2D32         = 7
       9:  01:0B52                      
      10:  01:0B52                      ; Function table base address.
      11:  01:0B52  (01:F100)           PROCYON_PUBLIC_API_BASE = $F100
      12:  01:0B52                      
      13:  01:0B52                      ; Variable base address.
      14:  01:0B52  (01:8300)           PROCAPI_DATA_BASE = $8300
      15:  01:0B52                      
      16:  01:0B52                      ; Offsets for public ProcAPI data values.
      17:  01:0B52  (01:8300)           STRINGTOHEX_SRC     = PROCAPI_DATA_BASE     ; +0
      18:  01:0B52  (01:8310)           STRINGTOHEX_DEST    = STRINGTOHEX_SRC+16    ; +16
      19:  01:0B52  (01:8318)           HEXTOSTRING_SRC     = STRINGTOHEX_DEST+8    ; +24
      20:  01:0B52  (01:831C)           HEXTOSTRING_DEST    = HEXTOSTRING_SRC+4     ; +28
      21:  01:0B52                      
      22:  01:0B52                      ; Calls the function ID.
      23:  01:0B52                      MACRO PROCYON cmd
      24:  01:0B52                    <     call    (PROCYON_PUBLIC_API_BASE+(3*cmd))
      25:  01:0B52                    < ENDMACRO
       4.  01:0B52                      
       5.  01:0B52                      PROCYON_B_FnTable:
       6.  01:0B52  C3 76 0B            	jp	PROCYON_StringToHex8	; C = 0
       7.  01:0B55  C3 BF 0B            	jp	PROCYON_StringToHex16	; C = 1
       8.  01:0B58  C3 78 0C            	jp	PROCYON_Hex8ToString	; C = 2
       9.  01:0B5B  C3 B9 0C            	jp	PROCYON_Hex16ToString	; C = 3
      10.  01:0B5E  C3 1E 0D            	jp	PROCYON_Printf			; C = 4
      11.  01:0B61  C3 A5 12            	jp	B2D8					; C = 5
      12.  01:0B64  C3 A8 12            	jp	B2D16					; C = 6
      13.  01:0B67  C3 AC 12            	jp	B2D32					; C = 7
      14.  01:0B6A                      
      15.  01:0B6A                      PROCYON_B_ColdStart:
      16.  01:0B6A                          ; Copy the table from PROCYON_B_FnTable to the public table in RAM.
      17.  01:0B6A  01 00 01                ld  bc,256
      18.  01:0B6D  11 00 F1                ld  de,PROCYON_FnTable_Public
      19.  01:0B70  21 52 0B                ld  hl,PROCYON_B_FnTable
      20.  01:0B73  ED B0                   ldir
      21.  01:0B75  C9                      ret
      22.  01:0B76                          
      23.  01:0B76                      ;;;;;;;;;;;;;;;;;;;;
      24.  01:0B76                      
      25.  01:0B76                      PROCYON_StringToHex8:
      26.  01:0B76                      ; Convert the string in StringToHex_Source to a 8-bit hex value.
      27.  01:0B76  DD 21 00 83         	ld		ix,_StringToHex_Source
      28.  01:0B7A  FD 21 10 83         	ld		iy,_StringToHex_Dest
      29.  01:0B7E                      
      30.  01:0B7E                      .DoConversion:
      31.  01:0B7E                      .Digit0:
      32.  01:0B7E                      	; Less than $40? Subtract $30.
      33.  01:0B7E                      	; More than $40? Subtract $40.
      34.  01:0B7E  DD 7E 00            	ld		a,(ix+0)
      35.  01:0B81  FE 40               	cp		$40
      36.  01:0B83  FA 95 0B            	jp		m,.Digit0_IsNumber
      37.  01:0B86                      
      38.  01:0B86                      .Digit0_IsAlpha:
      39.  01:0B86  C6 C9               	add		a,-$37
      40.  01:0B88  CB 27               	sla		a
      41.  01:0B8A  CB 27               	sla		a
      42.  01:0B8C  CB 27               	sla		a
      43.  01:0B8E  CB 27               	sla		a
      44.  01:0B90  FD 77 00            	ld		(iy+0),a
      45.  01:0B93  18 0F               	jr		.Digit1
      46.  01:0B95                      
      47.  01:0B95                      .Digit0_IsNumber:
      48.  01:0B95  C6 D0               	add		a,-$30
      49.  01:0B97  CB 27               	sla		a
      50.  01:0B99  CB 27               	sla		a
      51.  01:0B9B  CB 27               	sla		a
      52.  01:0B9D  CB 27               	sla		a
      53.  01:0B9F  FD 77 00            	ld		(iy+0),a
      54.  01:0BA2  18 00               	jr		.Digit1
      55.  01:0BA4                      
      56.  01:0BA4                      .Digit1:
      57.  01:0BA4                      	; Less than $40? Subtract $30.
      58.  01:0BA4                      	; More than $40? Subtract $40.
      59.  01:0BA4  DD 7E 01            	ld		a,(ix+1)
      60.  01:0BA7  FE 40               	cp		$40
      61.  01:0BA9  FA B6 0B            	jp		m,.Digit1_IsNumber
      62.  01:0BAC                      
      63.  01:0BAC                      .Digit1_IsAlpha:
      64.  01:0BAC  C6 C9               	add		a,-$37
      65.  01:0BAE  FD B6 00            	or		(iy+0)
      66.  01:0BB1  FD 77 00            	ld		(iy+0),a
      67.  01:0BB4  18 08               	jr		.Done
      68.  01:0BB6                      
      69.  01:0BB6                      .Digit1_IsNumber:
      70.  01:0BB6  C6 D0               	add		a,-$30
      71.  01:0BB8  FD B6 00            	or		(iy+0)
      72.  01:0BBB  FD 77 00            	ld		(iy+0),a
      73.  01:0BBE                      
      74.  01:0BBE                      .Done:
      75.  01:0BBE  C9                  	ret
      76.  01:0BBF                      
      77.  01:0BBF                      ;;;;;;;;;;;
      78.  01:0BBF                      PROCYON_StringToHex16:
      79.  01:0BBF                      ; Convert the string in StringToHex_Source to a 16-bit hex value.
      80.  01:0BBF  DD 21 00 83         	ld		ix,_StringToHex_Source
      81.  01:0BC3  FD 21 10 83         	ld		iy,_StringToHex_Dest
      82.  01:0BC7                      
      83.  01:0BC7                      	; Right-justify the value and add leading zeroes.
      84.  01:0BC7                      .JustifyLoop:
      85.  01:0BC7  DD 7E 03            	ld		a,(ix+3)
      86.  01:0BCA  FE 00               	cp		0
      87.  01:0BCC  20 19               	jr		nz,.DoConversion
      88.  01:0BCE  DD 7E 02            	ld		a,(ix+2)
      89.  01:0BD1  DD 77 03            	ld		(ix+3),a
      90.  01:0BD4  DD 7E 01            	ld		a,(ix+1)
      91.  01:0BD7  DD 77 02            	ld		(ix+2),a
      92.  01:0BDA  DD 7E 00            	ld		a,(ix+0)
      93.  01:0BDD  DD 77 01            	ld		(ix+1),a
      94.  01:0BE0  3E 30               	ld		a,$30		; ASCII 0
      95.  01:0BE2  DD 77 00            	ld		(ix+0),a
      96.  01:0BE5  18 E0               	jr		.JustifyLoop
      97.  01:0BE7                      
      98.  01:0BE7                      .DoConversion:
      99.  01:0BE7                      .Digit0:
     100.  01:0BE7                      	; Less than $40? Subtract $30.
     101.  01:0BE7                      	; More than $40? Subtract $40.
     102.  01:0BE7  DD 7E 00            	ld		a,(ix+0)
     103.  01:0BEA  FE 40               	cp		$40
     104.  01:0BEC  F2 F2 0B            	jp		p,.Digit0_IsAlpha
     105.  01:0BEF  FA 01 0C            	jp		m,.Digit0_IsNumber
     106.  01:0BF2                      
     107.  01:0BF2                      .Digit0_IsAlpha:
     108.  01:0BF2  C6 C9               	add		a,-$37
     109.  01:0BF4  CB 27               	sla		a
     110.  01:0BF6  CB 27               	sla		a
     111.  01:0BF8  CB 27               	sla		a
     112.  01:0BFA  CB 27               	sla		a
     113.  01:0BFC  FD 77 01            	ld		(iy+1),a
     114.  01:0BFF  18 0F               	jr		.Digit1
     115.  01:0C01                      
     116.  01:0C01                      .Digit0_IsNumber:
     117.  01:0C01  C6 D0               	add		a,-$30
     118.  01:0C03  CB 27               	sla		a
     119.  01:0C05  CB 27               	sla		a
     120.  01:0C07  CB 27               	sla		a
     121.  01:0C09  CB 27               	sla		a
     122.  01:0C0B  FD 77 01            	ld		(iy+1),a
     123.  01:0C0E  18 00               	jr		.Digit1
     124.  01:0C10                      
     125.  01:0C10                      .Digit1:
     126.  01:0C10                      	; Less than $40? Subtract $30.
     127.  01:0C10                      	; More than $40? Subtract $40.
     128.  01:0C10  DD 7E 01            	ld		a,(ix+1)
     129.  01:0C13  FE 40               	cp		$40
     130.  01:0C15  F2 1B 0C            	jp		p,.Digit1_IsAlpha
     131.  01:0C18  FA 25 0C            	jp		m,.Digit1_IsNumber
     132.  01:0C1B                      
     133.  01:0C1B                      .Digit1_IsAlpha:
     134.  01:0C1B  C6 C9               	add		a,-$37
     135.  01:0C1D  FD B6 01            	or		(iy+1)
     136.  01:0C20  FD 77 01            	ld		(iy+1),a
     137.  01:0C23  18 0A               	jr		.Digit2
     138.  01:0C25                      
     139.  01:0C25                      .Digit1_IsNumber:
     140.  01:0C25  C6 D0               	add		a,-$30
     141.  01:0C27  FD B6 01            	or		(iy+1)
     142.  01:0C2A  FD 77 01            	ld		(iy+1),a
     143.  01:0C2D  18 00               	jr		.Digit2
     144.  01:0C2F                      
     145.  01:0C2F                      .Digit2:
     146.  01:0C2F                      	; Less than $40? Subtract $30.
     147.  01:0C2F                      	; More than $40? Subtract $40.
     148.  01:0C2F  DD 7E 02            	ld		a,(ix+2)
     149.  01:0C32  FE 40               	cp		$40
     150.  01:0C34  F2 3A 0C            	jp		p,.Digit2_IsAlpha
     151.  01:0C37  FA 49 0C            	jp		m,.Digit2_IsNumber
     152.  01:0C3A                      
     153.  01:0C3A                      .Digit2_IsAlpha:
     154.  01:0C3A  C6 C9               	add		a,-$37
     155.  01:0C3C  CB 27               	sla		a
     156.  01:0C3E  CB 27               	sla		a
     157.  01:0C40  CB 27               	sla		a
     158.  01:0C42  CB 27               	sla		a
     159.  01:0C44  FD 77 00            	ld		(iy+0),a
     160.  01:0C47  18 0F               	jr		.Digit3
     161.  01:0C49                      
     162.  01:0C49                      .Digit2_IsNumber:
     163.  01:0C49  C6 D0               	add		a,-$30
     164.  01:0C4B  CB 27               	sla		a
     165.  01:0C4D  CB 27               	sla		a
     166.  01:0C4F  CB 27               	sla		a
     167.  01:0C51  CB 27               	sla		a
     168.  01:0C53  FD 77 00            	ld		(iy+0),a
     169.  01:0C56  18 00               	jr		.Digit3
     170.  01:0C58                      
     171.  01:0C58                      .Digit3:
     172.  01:0C58                      	; Less than $40? Subtract $30.
     173.  01:0C58                      	; More than $40? Subtract $40.
     174.  01:0C58  DD 7E 03            	ld		a,(ix+3)
     175.  01:0C5B  FE 40               	cp		$40
     176.  01:0C5D  F2 63 0C            	jp		p,.Digit3_IsAlpha
     177.  01:0C60  FA 6D 0C            	jp		m,.Digit3_IsNumber
     178.  01:0C63                      
     179.  01:0C63                      .Digit3_IsAlpha:
     180.  01:0C63  C6 C9               	add		a,-$37
     181.  01:0C65  FD B6 00            	or		(iy+0)
     182.  01:0C68  FD 77 00            	ld		(iy+0),a
     183.  01:0C6B  18 0A               	jr		.Done
     184.  01:0C6D                      
     185.  01:0C6D                      .Digit3_IsNumber:
     186.  01:0C6D  C6 D0               	add		a,-$30
     187.  01:0C6F  FD B6 00            	or		(iy+0)
     188.  01:0C72  FD 77 00            	ld		(iy+0),a
     189.  01:0C75  18 00               	jr		.Done
     190.  01:0C77                      
     191.  01:0C77                      .Done:
     192.  01:0C77  C9                  	ret
     193.  01:0C78                      
     194.  01:0C78                      ;;;;;;;;
     195.  01:0C78                      PROCYON_Hex8ToString:
     196.  01:0C78                      	; Convert the value in HexToString_Source to ASCII characters.
     197.  01:0C78                      	; A
     198.  01:0C78  FD 21 1C 83         	ld		iy,_HexToString_Dest
     199.  01:0C7C  DD 21 18 83         	ld		ix,_HexToString_Source
     200.  01:0C80                      
     201.  01:0C80  21 00 00            	ld		hl,0
     202.  01:0C83  FD 75 00            	ld		(iy+0),l
     203.  01:0C86  FD 74 01            	ld		(iy+1),h
     204.  01:0C89  FD 75 02            	ld		(iy+2),l
     205.  01:0C8C  FD 74 03            	ld		(iy+3),h
     206.  01:0C8F                      
     207.  01:0C8F  DD 7E 00            	ld		a,(ix)
     208.  01:0C92  E6 F0               	and		$F0		; now we only have A
     209.  01:0C94  CB 3F               	srl		a	
     210.  01:0C96  CB 3F               	srl		a
     211.  01:0C98  CB 3F               	srl 	a
     212.  01:0C9A  CB 3F               	srl 	a
     213.  01:0C9C  C6 90               	add  	a,$90
     214.  01:0C9E  27                  	daa
     215.  01:0C9F  CE 40               	adc  	a,$40
     216.  01:0CA1  27                  	daa
     217.  01:0CA2  FD 77 00            	ld		(iy+0),a
     218.  01:0CA5                      
     219.  01:0CA5                      	; B
     220.  01:0CA5  DD 7E 00            	ld		a,(ix)
     221.  01:0CA8  E6 0F               	and		$0F		; now we only have B
     222.  01:0CAA  C6 90               	add  	a,$90
     223.  01:0CAC  27                  	daa
     224.  01:0CAD  CE 40               	adc  	a,$40
     225.  01:0CAF  27                  	daa
     226.  01:0CB0  FD 77 01            	ld		(iy+1),a
     227.  01:0CB3                      
     228.  01:0CB3  3E 00               	ld		a,0
     229.  01:0CB5  FD 77 02            	ld		(iy+2),a
     230.  01:0CB8                      
     231.  01:0CB8  C9                  	ret
     232.  01:0CB9                      
     233.  01:0CB9                      ;;;
     234.  01:0CB9                      PROCYON_Hex16ToString:
     235.  01:0CB9                      	; Convert the value in HexToString_Source to ASCII characters.
     236.  01:0CB9  DD 21 18 83         	ld		ix,_HexToString_Source
     237.  01:0CBD  FD 21 1C 83         	ld		iy,_HexToString_Dest
     238.  01:0CC1                      
     239.  01:0CC1  21 00 00            	ld		hl,0
     240.  01:0CC4  FD 75 00            	ld		(iy+0),l
     241.  01:0CC7  FD 74 01            	ld		(iy+1),h
     242.  01:0CCA  FD 75 02            	ld		(iy+2),l
     243.  01:0CCD  FD 74 03            	ld		(iy+3),h
     244.  01:0CD0                      
     245.  01:0CD0                      	; A
     246.  01:0CD0  DD 7E 01            	ld		a,(ix+1)
     247.  01:0CD3  E6 F0               	and		$F0		; now we only have A
     248.  01:0CD5  CB 3F               	srl		a
     249.  01:0CD7  CB 3F               	srl		a
     250.  01:0CD9  CB 3F               	srl		a
     251.  01:0CDB  CB 3F               	srl		a
     252.  01:0CDD  C6 90               	add  	a,$90
     253.  01:0CDF  27                  	daa
     254.  01:0CE0  CE 40               	adc  	a,$40
     255.  01:0CE2  27                  	daa
     256.  01:0CE3  FD 77 00            	ld		(iy+0),a
     257.  01:0CE6                      
     258.  01:0CE6                      	; B
     259.  01:0CE6  DD 7E 01            	ld		a,(ix+1)
     260.  01:0CE9  E6 0F               	and		$0F		; now we only have B
     261.  01:0CEB  C6 90               	add  	a,$90
     262.  01:0CED  27                  	daa
     263.  01:0CEE  CE 40               	adc  	a,$40
     264.  01:0CF0  27                  	daa
     265.  01:0CF1  FD 77 01            	ld		(iy+1),a
     266.  01:0CF4                      
     267.  01:0CF4                      	; C
     268.  01:0CF4  DD 7E 00            	ld		a,(ix)
     269.  01:0CF7  E6 F0               	and		$F0		; now we only have C
     270.  01:0CF9  CB 3F               	srl		a	
     271.  01:0CFB  CB 3F               	srl		a
     272.  01:0CFD  CB 3F               	srl 	a
     273.  01:0CFF  CB 3F               	srl 	a
     274.  01:0D01  C6 90               	add  	a,$90
     275.  01:0D03  27                  	daa
     276.  01:0D04  CE 40               	adc  	a,$40
     277.  01:0D06  27                  	daa
     278.  01:0D07  FD 77 02            	ld		(iy+2),a
     279.  01:0D0A                      
     280.  01:0D0A                      	; D
     281.  01:0D0A  DD 7E 00            	ld		a,(ix)
     282.  01:0D0D  E6 0F               	and		$0F		; now we only have D
     283.  01:0D0F  C6 90               	add  	a,$90
     284.  01:0D11  27                  	daa
     285.  01:0D12  CE 40               	adc  	a,$40
     286.  01:0D14  27                  	daa
     287.  01:0D15  FD 77 03            	ld		(iy+3),a
     288.  01:0D18                      
     289.  01:0D18  3E 00               	ld		a,0
     290.  01:0D1A  FD 77 04            	ld		(iy+4),a
     291.  01:0D1D                      
     292.  01:0D1D  C9                  	ret
     293.  01:0D1E                      
     294.  01:0D1E                      ;;;;;;;;;;;;;;;;;;;;;;;;;
     295.  01:0D1E                      ; Printf stuff
     296.  01:0D1E                      PROCYON_Printf:
     297.  01:0D1E                          ; Inputs:
     298.  01:0D1E                          ; stack contains
     299.  01:0D1E                          ;   - top of stack
     300.  01:0D1E                          ;   - ptr to string to print
     301.  01:0D1E                          ;   - value of format parameter 1
     302.  01:0D1E                          ;   - value of format parameter 2
     303.  01:0D1E                          ;   - value of format parameter 3...
     304.  01:0D1E                          ;
     305.  01:0D1E                          ;   supports %s (pointer to string)
     306.  01:0D1E                      
     307.  01:0D1E                          ;   16-bit values:
     308.  01:0D1E                          ;   supports %d (decimal number)
     309.  01:0D1E                          ;   supports %x (hex number)
     310.  01:0D1E                          ;   these are directly in the stack.
     311.  01:0D1E                      
     312.  01:0D1E                          ; Print characters until we hit a format char (%) or a NULL.
     313.  01:0D1E                      
     314.  01:0D1E  ED 73 20 83             ld      (_printf_params),sp  
     315.  01:0D22  DD 2A 20 83             ld      ix,(_printf_params)  
     316.  01:0D26  DD 23                   inc     ix
     317.  01:0D28  DD 23                   inc     ix                  ; IX is the ptr to the parameters
     318.  01:0D2A  DD 22 20 83             ld      (_printf_params),ix  ; Saved in printf_params
     319.  01:0D2E                      
     320.  01:0D2E                          ; Using IX as a stack frame pointer,
     321.  01:0D2E                          ; Grab the string pointer and loop over it calling CONOUT.
     322.  01:0D2E  DD 6E 00                ld      l,(ix+0)
     323.  01:0D31  DD 66 01                ld      h,(ix+1)
     324.  01:0D34                          ; HL is now the string pointer
     325.  01:0D34                      
     326.  01:0D34                      PrintF_StringLoop:
     327.  01:0D34  E5                      push    hl
     328.  01:0D35  7E                      ld		a,(hl)
     329.  01:0D36                      
     330.  01:0D36                          ; Check for NULL.
     331.  01:0D36  FE 00                   cp      $00
     332.  01:0D38  28 26                   jr      z,PrintF_End
     333.  01:0D3A                      
     334.  01:0D3A  FE 25                   cp      "%"
     335.  01:0D3C  28 08                   jr      z,.getFormatChar
     336.  01:0D3E                      
     337.  01:0D3E  5F                      ld      e,a
     338.  01:0D3F  0E 01               	ld		c,B_CONOUT
     339.  01:0D41                      	DoBIOS
     339.  01:0D41  E7                >   rst $20
     340.  01:0D42                      
     341.  01:0D42                      .advance:
     342.  01:0D42  E1                      pop     hl
     343.  01:0D43  23                      inc     hl
     344.  01:0D44  18 EE                   jr      PrintF_StringLoop
     345.  01:0D46                      
     346.  01:0D46                      .getFormatChar:
     347.  01:0D46                          ; Advance string pointer to the format character.
     348.  01:0D46  E1                      pop     hl
     349.  01:0D47  23                      inc     hl
     350.  01:0D48                      
     351.  01:0D48                          ; Determine the format char.
     352.  01:0D48  7E                      ld      a,(hl)
     353.  01:0D49                      
     354.  01:0D49  FE 73                   cp      "s"     ; %s
     355.  01:0D4B  CA D8 0D                jp      z,PrintF_FChar_s
     356.  01:0D4E  FE 78                   cp      "x"     ; %x
     357.  01:0D50  CA BE 0D                jp      z,PrintF_FChar_x
     358.  01:0D53  FE 64                   cp      "d"     ; %d
     359.  01:0D55  CA E8 0D                jp      z,PrintF_FChar_d
     360.  01:0D58  FE 6C                   cp      "l"     ; %l...
     361.  01:0D5A  CA 62 0D                jp      z,PrintF_FChar_l
     362.  01:0D5D                      
     363.  01:0D5D                      PrintF_FormatDone:  ; Entry point when returning from a format char.
     364.  01:0D5D  23                      inc     hl
     365.  01:0D5E  18 D4                   jr      PrintF_StringLoop
     366.  01:0D60                      
     367.  01:0D60                      PrintF_End:         ; PrintF is completely finished.
     368.  01:0D60                          ; Fix the stack before returning.
     369.  01:0D60  E1                      pop     hl
     370.  01:0D61  C9                      ret
     371.  01:0D62                      
     372.  01:0D62                      ;;;
     373.  01:0D62                      PrintF_FChar_l:
     374.  01:0D62                          ; 32-bit (Long) versions of D and X.
     375.  01:0D62  23                      inc     hl
     376.  01:0D63  7E                      ld      a,(hl)
     377.  01:0D64                      
     378.  01:0D64  FE 78                   cp      "x"     ; %lx
     379.  01:0D66  CA 89 0D                jp      z,PrintF_FChar_lx
     380.  01:0D69  FE 64                   cp      "d"     ; %ld
     381.  01:0D6B  CA 71 0D                jp      z,PrintF_FChar_ld  
     382.  01:0D6E                      
     383.  01:0D6E  C3 5D 0D                jp      PrintF_FormatDone
     384.  01:0D71                      
     385.  01:0D71                      ;;;
     386.  01:0D71                      PrintF_FChar_ld:
     387.  01:0D71                          ; Input: (_printf_params) is a stack frame.
     388.  01:0D71  E5                      push    hl  ; save the string pointer
     389.  01:0D72                      
     390.  01:0D72                          ; 32-bit value in the stack
     391.  01:0D72                          ; B2D32 expects the value to be in DE:HL
     392.  01:0D72  CD FC 0D                call    PrintF_AdvanceParamsFrame
     393.  01:0D75  5E                      ld      e,(hl)
     394.  01:0D76  23                      inc     hl
     395.  01:0D77  56                      ld      d,(hl)
     396.  01:0D78  23                      inc     hl
     397.  01:0D79  4E                      ld      c,(hl)
     398.  01:0D7A  23                      inc     hl
     399.  01:0D7B  46                      ld      b,(hl)
     400.  01:0D7C  C5                      push    bc
     401.  01:0D7D  E1                      pop     hl
     402.  01:0D7E  CD AC 12                call    B2D32
     403.  01:0D81  EB                      ex      de,hl
     404.  01:0D82  0E 02               	ld		c,B_STROUT
     405.  01:0D84                      	DoBIOS
     405.  01:0D84  E7                >   rst $20
     406.  01:0D85                      
     407.  01:0D85  E1                      pop     hl
     408.  01:0D86  C3 5D 0D                jp      PrintF_FormatDone
     409.  01:0D89                      
     410.  01:0D89                      ;;;
     411.  01:0D89                      PrintF_FChar_lx:
     412.  01:0D89                          ; Input: (_printf_params) is a stack frame.
     413.  01:0D89  E5                      push    hl  ; save the string pointer
     414.  01:0D8A                      
     415.  01:0D8A                          ; 32-bit value in the stack
     416.  01:0D8A                          ; 0 1 2 3
     417.  01:0D8A  CD FC 0D                call    PrintF_AdvanceParamsFrame
     418.  01:0D8D  CD FC 0D                call    PrintF_AdvanceParamsFrame
     419.  01:0D90                      
     420.  01:0D90  7E                      ld      a,(hl)
     421.  01:0D91  5F                      ld      e,a
     422.  01:0D92  23                      inc     hl
     423.  01:0D93  7E                      ld      a,(hl)
     424.  01:0D94  57                      ld      d,a   
     425.  01:0D95  ED 53 18 83             ld		(HEXTOSTRING_SRC),de
     426.  01:0D99                      	PROCYON P_HEX16TOSTR
     426.  01:0D99  CD 09 F1          >     call    (PROCYON_PUBLIC_API_BASE+(3*cmd))
     427.  01:0D9C  11 1C 83            	ld		de,HEXTOSTRING_DEST
     428.  01:0D9F  0E 02               	ld		c,B_STROUT
     429.  01:0DA1                      	DoBIOS
     429.  01:0DA1  E7                >   rst $20
     430.  01:0DA2                      
     431.  01:0DA2  CD 05 0E                call    PrintF_StepBackParamsFrame
     432.  01:0DA5  7E                      ld      a,(hl)
     433.  01:0DA6  5F                      ld      e,a
     434.  01:0DA7  23                      inc     hl
     435.  01:0DA8  7E                      ld      a,(hl)
     436.  01:0DA9  57                      ld      d,a   
     437.  01:0DAA  ED 53 18 83             ld		(HEXTOSTRING_SRC),de
     438.  01:0DAE                      	PROCYON P_HEX16TOSTR
     438.  01:0DAE  CD 09 F1          >     call    (PROCYON_PUBLIC_API_BASE+(3*cmd))
     439.  01:0DB1  11 1C 83            	ld		de,HEXTOSTRING_DEST
     440.  01:0DB4  0E 02               	ld		c,B_STROUT
     441.  01:0DB6                      	DoBIOS
     441.  01:0DB6  E7                >   rst $20
     442.  01:0DB7                      
     443.  01:0DB7  CD FC 0D                call    PrintF_AdvanceParamsFrame
     444.  01:0DBA                      
     445.  01:0DBA  E1                      pop     hl
     446.  01:0DBB  C3 5D 0D                jp      PrintF_FormatDone
     447.  01:0DBE                      ;;;
     448.  01:0DBE                      PrintF_FChar_x:
     449.  01:0DBE                          ; Input: (_printf_params) is a stack frame.
     450.  01:0DBE  E5                      push    hl  ; save the string pointer
     451.  01:0DBF  CD FC 0D                call    PrintF_AdvanceParamsFrame
     452.  01:0DC2                      
     453.  01:0DC2  7E                      ld      a,(hl)
     454.  01:0DC3  5F                      ld      e,a
     455.  01:0DC4  23                      inc     hl
     456.  01:0DC5  7E                      ld      a,(hl)
     457.  01:0DC6  57                      ld      d,a   
     458.  01:0DC7  ED 53 18 83             ld		(HEXTOSTRING_SRC),de
     459.  01:0DCB                      	PROCYON P_HEX16TOSTR
     459.  01:0DCB  CD 09 F1          >     call    (PROCYON_PUBLIC_API_BASE+(3*cmd))
     460.  01:0DCE  11 1C 83            	ld		de,HEXTOSTRING_DEST
     461.  01:0DD1  0E 02               	ld		c,B_STROUT
     462.  01:0DD3                      	DoBIOS
     462.  01:0DD3  E7                >   rst $20
     463.  01:0DD4                      
     464.  01:0DD4  E1                      pop     hl
     465.  01:0DD5  C3 5D 0D                jp      PrintF_FormatDone
     466.  01:0DD8                      
     467.  01:0DD8                      ;;;
     468.  01:0DD8                      PrintF_FChar_s:
     469.  01:0DD8                          ; Input: (_printf_params) is a stack frame.
     470.  01:0DD8  E5                      push    hl  ; save the string pointer
     471.  01:0DD9  CD FC 0D                call    PrintF_AdvanceParamsFrame
     472.  01:0DDC                      
     473.  01:0DDC                          ; Fetch the string pointer and print.
     474.  01:0DDC  7E                      ld      a,(hl)
     475.  01:0DDD  5F                      ld      e,a
     476.  01:0DDE  23                      inc     hl
     477.  01:0DDF  7E                      ld      a,(hl)
     478.  01:0DE0  57                      ld      d,a    
     479.  01:0DE1  0E 02                   ld      c,B_STROUT
     480.  01:0DE3                          DoBIOS
     480.  01:0DE3  E7                >   rst $20
     481.  01:0DE4                      
     482.  01:0DE4  E1                      pop     hl
     483.  01:0DE5  C3 5D 0D                jp      PrintF_FormatDone
     484.  01:0DE8                      
     485.  01:0DE8                      ;;;
     486.  01:0DE8                      PrintF_FChar_d:
     487.  01:0DE8                          ; Input: (_printf_params) is a stack frame.
     488.  01:0DE8  E5                      push    hl  ; save the string pointer
     489.  01:0DE9  CD FC 0D                call    PrintF_AdvanceParamsFrame
     490.  01:0DEC                      
     491.  01:0DEC                          ; Fetch the 16-bit decimal value
     492.  01:0DEC  4E                      ld      c,(hl)
     493.  01:0DED  23                      inc     hl
     494.  01:0DEE  46                      ld      b,(hl)
     495.  01:0DEF  C5                      push    bc
     496.  01:0DF0  E1                      pop     hl
     497.  01:0DF1  CD A8 12                call    B2D16
     498.  01:0DF4  EB                      ex      de,hl
     499.  01:0DF5  0E 02               	ld		c,B_STROUT
     500.  01:0DF7                      	DoBIOS   
     500.  01:0DF7  E7                >   rst $20
     501.  01:0DF8                      
     502.  01:0DF8  E1                      pop     hl
     503.  01:0DF9  C3 5D 0D                jp      PrintF_FormatDone
     504.  01:0DFC                      
     505.  01:0DFC                      ;;;
     506.  01:0DFC                      PrintF_AdvanceParamsFrame:
     507.  01:0DFC                          ; Advances the printf params stack frame by one word,
     508.  01:0DFC                          ; then saves it back to printf_params.
     509.  01:0DFC  2A 20 83                ld      hl,(_printf_params)
     510.  01:0DFF  23                      inc     hl
     511.  01:0E00  23                      inc     hl
     512.  01:0E01  22 20 83                ld      (_printf_params),hl
     513.  01:0E04  C9                      ret
     514.  01:0E05                      
     515.  01:0E05                      PrintF_StepBackParamsFrame:
     516.  01:0E05                          ; Steps back in the printf params stack frame by one word,
     517.  01:0E05                          ; then saves it back to printf_params.
     518.  01:0E05  2A 20 83                ld      hl,(_printf_params)
     519.  01:0E08  2B                      dec     hl
     520.  01:0E09  2B                      dec     hl
     521.  01:0E0A  22 20 83                ld      (_printf_params),hl
     522.  01:0E0D  C9                      ret
     523.  01:0E0E                      
     524.  01:0E0E                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     525.  01:0E0E                      ; Combined routine for conversion of different sized binary numbers into
     526.  01:0E0E                      ; directly printable ASCII(Z)-string
     527.  01:0E0E                      ; Input value in registers, number size and -related to that- registers to fill
     528.  01:0E0E                      ; is selected by calling the correct entry:
     529.  01:0E0E                      ;
     530.  01:0E0E                      ;  entry  inputregister(s)  decimal value 0 to:
     531.  01:0E0E                      ;   B2D8             A                    255  (3 digits)
     532.  01:0E0E                      ;   B2D16           HL                  65535   5   "
     533.  01:0E0E                      ;   B2D24         E:HL               16777215   8   "
     534.  01:0E0E                      ;   B2D32        DE:HL             4294967295  10   "
     535.  01:0E0E                      ;   B2D48     BC:DE:HL        281474976710655  15   "
     536.  01:0E0E                      ;   B2D64  IX:BC:DE:HL   18446744073709551615  20   "
     537.  01:0E0E                      ;
     538.  01:0E0E                      ; The resulting string is placed into a small buffer attached to this routine,
     539.  01:0E0E                      ; this buffer needs no initialization and can be modified as desired.
     540.  01:0E0E                      ; The number is aligned to the right, and leading 0's are replaced with spaces.
     541.  01:0E0E                      ; On exit HL points to the first digit, (B)C = number of decimals
     542.  01:0E0E                      ; This way any re-alignment / postprocessing is made easy.
     543.  01:0E0E                      ; Changes: AF,BC,DE,HL,IX
     544.  01:0E0E                      ; P.S. some examples below
     545.  01:0E0E                      
     546.  01:0E0E                      ; by Alwin Henseler
     547.  01:0E0E                      
     548.  01:0E0E  (01)                    PAGE 1
     549.  01:12A5                      
     550.  01:12A5  26 00               B2D8:    LD H,0
     551.  01:12A7  6F                           LD L,A
     552.  01:12A8  1E 00               B2D16:   LD E,0
     553.  01:12AA  16 00               B2D24:   LD D,0
     554.  01:12AC  01 00 00            B2D32:   LD BC,0
     555.  01:12AF  DD 21 00 00         B2D48:   LD IX,0          ; zero all non-used bits
     556.  01:12B3  22 22 83            B2D64:   LD (B2DINV),HL
     557.  01:12B6  ED 53 24 83                  LD (B2DINV+2),DE
     558.  01:12BA  ED 43 26 83                  LD (B2DINV+4),BC
     559.  01:12BE  DD 22 28 83                  LD (B2DINV+6),IX ; place full 64-bit input value in buffer
     560.  01:12C2  21 2A 83                     LD HL,B2DBUF
     561.  01:12C5  11 2B 83                     LD DE,B2DBUF+1
     562.  01:12C8  36 20                        LD (HL)," "
     563.  01:12CA  (01:12C9)           B2DFILC: EQU $-1         ; address of fill-character
     564.  01:12CA  01 12 00                     LD BC,18
     565.  01:12CD  ED B0                        LDIR            ; fill 1st 19 bytes of buffer with spaces
     566.  01:12CF  ED 43 3D 83                  LD (B2DEND-1),BC ;set BCD value to "0" & place terminating 0
     567.  01:12D3  1E 01                        LD E,1          ; no. of bytes in BCD value
     568.  01:12D5  21 2A 83                     LD HL,B2DINV+8  ; (address MSB input)+1
     569.  01:12D8  01 09 09                     LD BC,#0909
     570.  01:12DB  AF                           XOR A
     571.  01:12DC  05                  B2DSKP0: DEC B
     572.  01:12DD  28 29                        JR Z,B2DSIZ     ; all 0: continue with postprocessing
     573.  01:12DF  2B                           DEC HL
     574.  01:12E0  B6                           OR (HL)         ; find first byte <>0
     575.  01:12E1  28 F9                        JR Z,B2DSKP0
     576.  01:12E3  0D                  B2DFND1: DEC C
     577.  01:12E4  17                           RLA
     578.  01:12E5  30 FC                        JR NC,B2DFND1   ; determine no. of most significant 1-bit
     579.  01:12E7  1F                           RRA
     580.  01:12E8  57                           LD D,A          ; byte from binary input value
     581.  01:12E9  E5                  B2DLUS2: PUSH HL
     582.  01:12EA  C5                           PUSH BC
     583.  01:12EB  21 3D 83            B2DLUS1: LD HL,B2DEND-1  ; address LSB of BCD value
     584.  01:12EE  43                           LD B,E          ; current length of BCD value in bytes
     585.  01:12EF  CB 12                        RL D            ; highest bit from input value -> carry
     586.  01:12F1  7E                  B2DLUS0: LD A,(HL)
     587.  01:12F2  8F                           ADC A,A
     588.  01:12F3  27                           DAA
     589.  01:12F4  77                           LD (HL),A       ; double 1 BCD byte from intermediate result
     590.  01:12F5  2B                           DEC HL
     591.  01:12F6  10 F9                        DJNZ B2DLUS0    ; and go on to double entire BCD value (+carry!)
     592.  01:12F8  30 03                        JR NC,B2DNXT
     593.  01:12FA  1C                           INC E           ; carry at MSB -> BCD value grew 1 byte larger
     594.  01:12FB  36 01                        LD (HL),1       ; initialize new MSB of BCD value
     595.  01:12FD  0D                  B2DNXT:  DEC C
     596.  01:12FE  20 EB                        JR NZ,B2DLUS1   ; repeat for remaining bits from 1 input byte
     597.  01:1300  C1                           POP BC          ; no. of remaining bytes in input value
     598.  01:1301  0E 08                        LD C,8          ; reset bit-counter
     599.  01:1303  E1                           POP HL          ; pointer to byte from input value
     600.  01:1304  2B                           DEC HL
     601.  01:1305  56                           LD D,(HL)       ; get next group of 8 bits
     602.  01:1306  10 E1                        DJNZ B2DLUS2    ; and repeat until last byte from input value
     603.  01:1308  21 3E 83            B2DSIZ:  LD HL,B2DEND    ; address of terminating 0
     604.  01:130B  4B                           LD C,E          ; size of BCD value in bytes
     605.  01:130C  B7                           OR A
     606.  01:130D  ED 42                        SBC HL,BC       ; calculate address of MSB BCD
     607.  01:130F  54                           LD D,H
     608.  01:1310  5D                           LD E,L
     609.  01:1311  ED 42                        SBC HL,BC
     610.  01:1313  EB                           EX DE,HL        ; HL=address BCD value, DE=start of decimal value
     611.  01:1314  41                           LD B,C          ; no. of bytes BCD
     612.  01:1315  CB 21                        SLA C           ; no. of bytes decimal (possibly 1 too high)
     613.  01:1317  3E 30                        LD A,"0"
     614.  01:1319  ED 6F                        RLD             ; shift bits 4-7 of (HL) into bit 0-3 of A
     615.  01:131B  FE 30                        CP "0"          ; (HL) was > 9h?
     616.  01:131D  20 06                        JR NZ,B2DEXPH   ; if yes, start with recording high digit
     617.  01:131F  0D                           DEC C           ; correct number of decimals
     618.  01:1320  13                           INC DE          ; correct start address
     619.  01:1321  18 04                        JR B2DEXPL      ; continue with converting low digit
     620.  01:1323  ED 6F               B2DEXP:  RLD             ; shift high digit (HL) into low digit of A
     621.  01:1325  12                  B2DEXPH: LD (DE),A       ; record resulting ASCII-code
     622.  01:1326  13                           INC DE
     623.  01:1327  ED 6F               B2DEXPL: RLD
     624.  01:1329  12                           LD (DE),A
     625.  01:132A  13                           INC DE
     626.  01:132B  23                           INC HL          ; next BCD-byte
     627.  01:132C  10 F5                        DJNZ B2DEXP     ; and go on to convert each BCD-byte into 2 ASCII
     628.  01:132E  ED 42                        SBC HL,BC       ; return with HL pointing to 1st decimal
     629.  01:1330  C9                           RET
     630.  01:1331                      
     631.  01:1331                      ;      EXAMPLES
     632.  01:1331                      ;      --------
     633.  01:1331                      
     634.  01:1331                      ; (In these examples, it is assumed there exists a subroutine PRINT, that
     635.  01:1331                      ; prints a string (terminated by a 0-byte) starting at address [HL] )
     636.  01:1331                      
     637.  01:1331                      
     638.  01:1331                      ; Print 1 byte, as follows:
     639.  01:1331                      ;  20
     640.  01:1331                      ;   7
     641.  01:1331                      ; 145  etc.
     642.  01:1331                      ; by:   LD A,byte
     643.  01:1331                      ;       CALL B2D8
     644.  01:1331                      ;       LD HL,B2DEND-3
     645.  01:1331                      ;       CALL PRINT
     646.  01:1331                      
     647.  01:1331                      
     648.  01:1331                      ; Print a 24-bit value, as follows:
     649.  01:1331                      ; 9345
     650.  01:1331                      ; 76856366
     651.  01:1331                      ; 534331
     652.  01:1331                      ; by:   LD E,bit23-16
     653.  01:1331                      ;       LD HL,bit15-0
     654.  01:1331                      ;       CALL B2D24
     655.  01:1331                      ;       CALL PRINT
     656.  01:1331                      
     657.  01:1331                      
     658.  01:1331                      ; Print a 48-bit value, like
     659.  01:1331                      ;     14984366484
     660.  01:1331                      ;              49
     661.  01:1331                      ; 123456789012345
     662.  01:1331                      ;         3155556 etc.
     663.  01:1331                      ; by:
     664.  01:1331                      ;       LD BC,bit47-32
     665.  01:1331                      ;       LD DE,bit31-16
     666.  01:1331                      ;       LD HL,bit15-0
     667.  01:1331                      ;       CALL B2D48
     668.  01:1331                      ;       LD HL,B2DEND-15
     669.  01:1331                      ;       CALL PRINT
     670.  01:1331                      
     671.  01:1331  (02)                	PAGE 2
     672.  02:8152                      	
     673.  02:8152                      	org	PROCAPI_DATA_BASE
     674.  02:8300                      ;;;
     675.  02:8300  00 (16)             _StringToHex_Source:	ds 16	; 0
     676.  02:8310  00 (8)              _StringToHex_Dest:		ds 8	; 16
     677.  02:8318  00 (4)              _HexToString_Source:	ds 4	; 24
     678.  02:831C  00 (4)              _HexToString_Dest:		ds 4	; 28
     679.  02:8320  00 (2)              _printf_params:			ds 2	; 32
     680.  02:8322  00 (8)              B2DINV:  				DS 8    ; 34 ; space for 64-bit input value (LSB first)
     681.  02:832A  00 (20)             B2DBUF:  				DS 20   ; 42 ; space for 20 decimal digits
     682.  02:833E  00 (1)              B2DEND:  				DS 1    ; 62 ; space for terminating 0
     683.  02:833F                      
     684.  02:833F                      
     685.  02:833F                          org PROCYON_PUBLIC_API_BASE
     686.  02:F100  00 (256)            PROCYON_FnTable_Public: ds 256
      88   02:F200                      
      89   02:F200  (01)                	PAGE 1
      90   01:0E0E                      
      91   01:0E0E                      Start:
      92   01:0E0E  21 F9 FF            	ld		hl,$FFF9	; initialize stack
      93   01:0E11  F9                  	ld		sp,hl
      94   01:0E12                      
      95   01:0E12                          ; Clear RAM
      96   01:0E12  21 00 80            	ld		hl,$8000
      97   01:0E15  16 7F                   ld      d,$7F   ; outer loops
      98   01:0E17  06 00                   ld      b,0     ; 256 inner loops
      99   01:0E19  3E 00                   ld      a,$00   ; fg white, bg black
     100   01:0E1B                      .loop:
     101   01:0E1B  77                  	ld		(hl),a
     102   01:0E1C  23                  	inc		hl
     103   01:0E1D  10 FC                   djnz    .loop
     104   01:0E1F  15                      dec     d
     105   01:0E20  20 F9                   jr      nz,.loop
     106   01:0E22                      
     107   01:0E22  F3                  	di
     108   01:0E23  CD 55 0F            	call	rc2014_sio_init
     109   01:0E26                      
     110   01:0E26                      	; Initialize the Procyon API
     111   01:0E26  CD 6A 0B            	call	PROCYON_B_ColdStart
     112   01:0E29                      	
     113   01:0E29                      	; Set up the VDP
     114   01:0E29  CD 00 02            	call	VDP_B_ColdStart
     115   01:0E2C                      
     116   01:0E2C                      	VDPBIOS	VDP_Reset
     116   01:0E2C  CD 00 F0          >     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
     117   01:0E2F                          VDPBIOS VDP_GoTextMode	
     117   01:0E2F  CD 03 F0          >     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
     118   01:0E32                      	
     119   01:0E32  CD B0 13            	call	BOOT_WriteBanner
     120   01:0E35                      
     121   01:0E35                      Greet:
     122   01:0E35  11 35 10            	ld		de,HelloWorld
     123   01:0E38  D5                  	push	de
     124   01:0E39                      	PROCYON P_PRINTF
     124   01:0E39  CD 0C F1          >     call    (PROCYON_PUBLIC_API_BASE+(3*cmd))
     125   01:0E3C  E1                  	pop		hl
     126   01:0E3D                      
     127   01:0E3D                      GetInputString:
     128   01:0E3D                      	; reset offset
     129   01:0E3D  11 30 10            	ld		de,strPrompt
     130   01:0E40  0E 02               	ld		c,B_STROUT
     131   01:0E42                      	DoBIOS
     131   01:0E42  E7                >   rst $20
     132   01:0E43                      
     133   01:0E43  CD 15 0F            	call	ClearInputBuffer
     134   01:0E46  11 00 80            	ld		de,buffer_base
     135   01:0E49  0E 05               	ld		c,B_STRIN
     136   01:0E4B                      	DoBIOS
     136   01:0E4B  E7                >   rst $20
     137   01:0E4C  11 32 10            	ld		de,strCRLF
     138   01:0E4F  0E 02               	ld		c,B_STROUT
     139   01:0E51                      	DoBIOS
     139   01:0E51  E7                >   rst $20
     140   01:0E52                      
     141   01:0E52                      	; Take the first two bytes of buffer_Input and put them in the command register.
     142   01:0E52  ED 5B 02 80         	ld		de,(buffer_Input)
     143   01:0E56  ED 53 0D 81         	ld		(MON_Command),de
     144   01:0E5A                      
     145   01:0E5A                      CheckCmdLength:
     146   01:0E5A                      	; Assume argument starts at buffer_Input+3
     147   01:0E5A  3E 03               	ld		a,3
     148   01:0E5C  32 11 81            	ld		(MON_ArgStartsAt),a
     149   01:0E5F                      
     150   01:0E5F                      	; Is the second byte of the command register 0x20? 
     151   01:0E5F                      	; If so, the argument starts at buffer_Input+2.
     152   01:0E5F  3A 0E 81            	ld		a,(MON_Command+1)
     153   01:0E62  FE 20               	cp		$20
     154   01:0E64  20 05               	jr		nz,GotCmdLength
     155   01:0E66  3E 02               	ld		a,2
     156   01:0E68  32 11 81            	ld		(MON_ArgStartsAt),a
     157   01:0E6B                      
     158   01:0E6B                      GotCmdLength:
     159   01:0E6B  06 0A               	ld		b,10
     160   01:0E6D  CD DE 0E            	call	GetArgument
     161   01:0E70                      	; call	CmdDebugOutput
     162   01:0E70                      
     163   01:0E70  CD E5 13            	call	Monitor_InterpretCommand
     164   01:0E73                      
     165   01:0E73                      ; Loop...
     166   01:0E73                      InputLoopEnd:
     167   01:0E73  11 32 10            	ld		de,strCRLF
     168   01:0E76  0E 02               	ld		c,B_STROUT
     169   01:0E78  C3 3D 0E            	jp		GetInputString
     170   01:0E7B                      
     171   01:0E7B                      ;;;;;;;;
     172   01:0E7B                      CmdDebugOutput:
     173   01:0E7B  11 6F 10            	ld		de,strDbgCmd
     174   01:0E7E  0E 02               	ld		c,B_STROUT
     175   01:0E80                      	DoBIOS
     175   01:0E80  E7                >   rst $20
     176   01:0E81  DD 2A 0D 81         	ld		ix,(MON_Command)
     177   01:0E85  DD 5D               	ld		e,ixl
     178   01:0E87  0E 01               	ld		c,B_CONOUT
     179   01:0E89                      	DoBIOS
     179   01:0E89  E7                >   rst $20
     180   01:0E8A  DD 5C               	ld		e,ixh
     181   01:0E8C  0E 01               	ld		c,B_CONOUT
     182   01:0E8E                      	DoBIOS
     182   01:0E8E  E7                >   rst $20
     183   01:0E8F  11 32 10            	ld		de,strCRLF
     184   01:0E92  0E 02               	ld		c,B_STROUT
     185   01:0E94                      	DoBIOS
     185   01:0E94  E7                >   rst $20
     186   01:0E95                      
     187   01:0E95  11 79 10            	ld		de,strDbgArg
     188   01:0E98  0E 02               	ld		c,B_STROUT
     189   01:0E9A                      	DoBIOS
     189   01:0E9A  E7                >   rst $20
     190   01:0E9B  11 00 88            	ld		de,MON_Argument1
     191   01:0E9E  0E 02               	ld		c,B_STROUT
     192   01:0EA0                      	DoBIOS
     192   01:0EA0  E7                >   rst $20
     193   01:0EA1  11 32 10            	ld		de,strCRLF
     194   01:0EA4  0E 02               	ld		c,B_STROUT
     195   01:0EA6                      	DoBIOS
     195   01:0EA6  E7                >   rst $20
     196   01:0EA7  11 79 10            	ld		de,strDbgArg
     197   01:0EAA  0E 02               	ld		c,B_STROUT
     198   01:0EAC                      	DoBIOS
     198   01:0EAC  E7                >   rst $20
     199   01:0EAD  11 10 88            	ld		de,MON_Argument2
     200   01:0EB0  0E 02               	ld		c,B_STROUT
     201   01:0EB2                      	DoBIOS
     201   01:0EB2  E7                >   rst $20
     202   01:0EB3  11 32 10            	ld		de,strCRLF
     203   01:0EB6  0E 02               	ld		c,B_STROUT
     204   01:0EB8                      	DoBIOS
     204   01:0EB8  E7                >   rst $20
     205   01:0EB9  11 79 10            	ld		de,strDbgArg
     206   01:0EBC  0E 02               	ld		c,B_STROUT
     207   01:0EBE                      	DoBIOS
     207   01:0EBE  E7                >   rst $20
     208   01:0EBF  11 20 88            	ld		de,MON_Argument3
     209   01:0EC2  0E 02               	ld		c,B_STROUT
     210   01:0EC4                      	DoBIOS
     210   01:0EC4  E7                >   rst $20
     211   01:0EC5  11 32 10            	ld		de,strCRLF
     212   01:0EC8  0E 02               	ld		c,B_STROUT
     213   01:0ECA                      	DoBIOS
     213   01:0ECA  E7                >   rst $20
     214   01:0ECB  11 79 10            	ld		de,strDbgArg
     215   01:0ECE  0E 02               	ld		c,B_STROUT
     216   01:0ED0                      	DoBIOS
     216   01:0ED0  E7                >   rst $20
     217   01:0ED1  11 30 88            	ld		de,MON_Argument4
     218   01:0ED4  0E 02               	ld		c,B_STROUT
     219   01:0ED6                      	DoBIOS
     219   01:0ED6  E7                >   rst $20
     220   01:0ED7  11 32 10            	ld		de,strCRLF
     221   01:0EDA  0E 02               	ld		c,B_STROUT
     222   01:0EDC                      	DoBIOS
     222   01:0EDC  E7                >   rst $20
     223   01:0EDD                      
     224   01:0EDD  C9                  	ret
     225   01:0EDE                      
     226   01:0EDE                      ;;;;;;;;;;;;;;;;;;
     227   01:0EDE                      GetArgument:
     228   01:0EDE                      	; Clear the 4 argument buffers.
     229   01:0EDE  06 40               	ld		b,16*4
     230   01:0EE0  3E 00               	ld		a,0
     231   01:0EE2  21 00 88            	ld		hl,MON_Argument1
     232   01:0EE5                      .loop:
     233   01:0EE5  36 00               	ld		(hl),0
     234   01:0EE7  23                  	inc		hl
     235   01:0EE8  10 FB               	djnz	.loop
     236   01:0EEA                      
     237   01:0EEA                      	; Copy from buffer_Input+MON_ArgStartsAt into the argument buffers.
     238   01:0EEA                      	; Max 4 space-delimited arguments.
     239   01:0EEA  11 00 88            	ld		de,MON_Argument1	; <-- MUST BE PAGE ALIGNED FOR POINTER MATH TO WORK!
     240   01:0EED  21 02 80            	ld		hl,buffer_Input
     241   01:0EF0  DD 21 00 88         	ld		ix,MON_Argument1
     242   01:0EF4                      
     243   01:0EF4  3A 11 81            	ld		a,(MON_ArgStartsAt)
     244   01:0EF7  4F                  	ld		c,a
     245   01:0EF8  06 00               	ld		b,0		; BC is now ArgStartsAt
     246   01:0EFA  09                  	add		hl,bc	; And HL is now the beginning of the arguments.
     247   01:0EFB                      
     248   01:0EFB                      	; HL is now the beginning of the argument.
     249   01:0EFB                      	; DE is now the destination address.
     250   01:0EFB                      .ArgumentCopyLoop:
     251   01:0EFB                      	; Copy until we find a SPC. A CR/LF advances to the next argument buffer.
     252   01:0EFB                      	; Only 4 arguments are supported.
     253   01:0EFB  7E                  	ld		a,(hl)
     254   01:0EFC  23                  	inc		hl
     255   01:0EFD  FE 0D               	cp		$0D
     256   01:0EFF  28 13               	jr		z,.done
     257   01:0F01  FE 20               	cp		$20
     258   01:0F03  20 0B               	jr		nz,.copychar
     259   01:0F05                      	
     260   01:0F05                      	; Advance to the next argument.
     261   01:0F05  DD 7D               	ld		a,ixl
     262   01:0F07  C6 10               	add		a,16
     263   01:0F09  5F                  	ld		e,a
     264   01:0F0A  C6 10               	add		a,16
     265   01:0F0C  DD 6F               	ld		ixl,a
     266   01:0F0E                      
     267   01:0F0E  18 EB               	jr		.ArgumentCopyLoop
     268   01:0F10                      
     269   01:0F10                      .copychar:
     270   01:0F10  12                  	ld		(de),a
     271   01:0F11  13                  	inc		de
     272   01:0F12  10 E7               	djnz	.ArgumentCopyLoop
     273   01:0F14                      
     274   01:0F14                      .done:
     275   01:0F14  C9                  	ret
     276   01:0F15                      
     277   01:0F15                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     278   01:0F15                      ClearInputBuffer:
     279   01:0F15  3E 00               	ld		a,0
     280   01:0F17  21 02 80            	ld		hl,buffer_Input
     281   01:0F1A                      .clear:
     282   01:0F1A  36 00               	ld		(hl),0
     283   01:0F1C  23                  	inc		hl
     284   01:0F1D  3C                  	inc		a
     285   01:0F1E  FE FF               	cp		$FF
     286   01:0F20  20 F8               	jr		nz,.clear
     287   01:0F22  C9                  	ret
     288   01:0F23                      
     289   01:0F23                      	include "commands/memory.asm"
       1.  01:0F23  (01)                	PAGE 1
       2.  01:1112                      
       3.  01:1112                      ; Monitor's M command - memory output
       4.  01:1112                      Monitor_CMD_Memory:
       5.  01:1112                      	; Load the arguments into MemoryOutputStartAddr/MemoryOutputEndAddr.
       6.  01:1112                          
       7.  01:1112                          ; Beginning address
       8.  01:1112  2A 00 88            	ld		hl,(MON_Argument1+0)
       9.  01:1115  22 00 83            	ld		(STRINGTOHEX_SRC+0),hl
      10.  01:1118  2A 02 88            	ld		hl,(MON_Argument1+2)
      11.  01:111B  22 02 83            	ld		(STRINGTOHEX_SRC+2),hl
      12.  01:111E  CD BF 0B            	call	PROCYON_StringToHex16
      13.  01:1121  2A 10 83            	ld		hl,(STRINGTOHEX_DEST)
      14.  01:1124  22 01 81            	ld		(MemoryOutputStartAddr),hl
      15.  01:1127                      
      16.  01:1127                      	; Ending address
      17.  01:1127                      	; If MON_Argument2 is NULL, abort with an error.
      18.  01:1127  3A 10 88            	ld		a,(MON_Argument2)
      19.  01:112A  FE 00               	cp		0
      20.  01:112C  28 19               	jr		z,.argerror
      21.  01:112E                      
      22.  01:112E  2A 10 88            	ld		hl,(MON_Argument2)
      23.  01:1131  22 00 83            	ld		(STRINGTOHEX_SRC+0),hl
      24.  01:1134  2A 12 88            	ld		hl,(MON_Argument2+2)
      25.  01:1137  22 02 83            	ld		(STRINGTOHEX_SRC+2),hl
      26.  01:113A  CD BF 0B            	call	PROCYON_StringToHex16
      27.  01:113D                      
      28.  01:113D  2A 10 83            	ld		hl,(STRINGTOHEX_DEST)
      29.  01:1140  22 05 81            	ld		(MemoryOutputEndAddr),hl
      30.  01:1143                      
      31.  01:1143  CD 95 11            	call	Monitor_DoMemoryOutput
      32.  01:1146  C9                  	ret
      33.  01:1147                      
      34.  01:1147                      .argerror:
      35.  01:1147  11 9C 10            	ld		de,strCmdArgumentError
      36.  01:114A  0E 02               	ld		c,B_STROUT
      37.  01:114C                      	DoBIOS
      37.  01:114C  E7                >   rst $20
      38.  01:114D  11 32 10            	ld		de,strCRLF
      39.  01:1150  0E 02               	ld		c,B_STROUT
      40.  01:1152                      	DoBIOS
      40.  01:1152  E7                >   rst $20
      41.  01:1153  C9                  	ret
      42.  01:1154                      
      43.  01:1154                      Monitor_DoMemoryLabel:
      44.  01:1154                      	; Formatting: start address
      45.  01:1154  2A 03 81            	ld		hl,(MemoryOutputCurAddr)
      46.  01:1157  22 18 83            	ld		(HEXTOSTRING_SRC),hl
      47.  01:115A                      	PROCYON	P_HEX16TOSTR
      47.  01:115A  CD 09 F1          >     call    (PROCYON_PUBLIC_API_BASE+(3*cmd))
      48.  01:115D                      
      49.  01:115D  11 1C 83            	ld		de,HEXTOSTRING_DEST
      50.  01:1160  0E 02               	ld		c,B_STROUT
      51.  01:1162                      	DoBIOS
      51.  01:1162  E7                >   rst $20
      52.  01:1163  1E 3A               	ld		e,":"
      53.  01:1165  0E 01               	ld		c,B_CONOUT
      54.  01:1167                      	DoBIOS
      54.  01:1167  E7                >   rst $20
      55.  01:1168  1E 20               	ld		e," "
      56.  01:116A  0E 01               	ld		c,B_CONOUT
      57.  01:116C                      	DoBIOS
      57.  01:116C  E7                >   rst $20
      58.  01:116D  C9                  	ret
      59.  01:116E                      
      60.  01:116E                      Monitor_PrintBytes:
      61.  01:116E                      	; Input:
      62.  01:116E                      	; B  - how many bytes to dump
      63.  01:116E                      	; IX - pointer to start of memory area to dump
      64.  01:116E  C5                  	push	bc
      65.  01:116F                      
      66.  01:116F  DD 7E 00            	ld		a,(ix)						; A has a memory byte
      67.  01:1172  32 18 83            	ld		(HEXTOSTRING_SRC),a		
      68.  01:1175  DD E5               	push	ix
      69.  01:1177                      	; PROCYON	P_HEX8TOSTR
      70.  01:1177  CD 78 0C            	call	PROCYON_Hex8ToString
      71.  01:117A                      
      72.  01:117A                      	; Print two characters of output and a space
      73.  01:117A  3A 1C 83            	ld		a,(HEXTOSTRING_DEST)
      74.  01:117D  5F                  	ld		e,a
      75.  01:117E  0E 01               	ld		c,B_CONOUT
      76.  01:1180                      	DoBIOS								
      76.  01:1180  E7                >   rst $20
      77.  01:1181  3A 1D 83            	ld		a,(HEXTOSTRING_DEST+1)
      78.  01:1184  5F                  	ld		e,a
      79.  01:1185  0E 01               	ld		c,B_CONOUT
      80.  01:1187                      	DoBIOS
      80.  01:1187  E7                >   rst $20
      81.  01:1188  1E 20               	ld		e," "
      82.  01:118A  0E 01               	ld		c,B_CONOUT
      83.  01:118C                      	DoBIOS
      83.  01:118C  E7                >   rst $20
      84.  01:118D                      
      85.  01:118D                      	; Advance the memory source pointer. Continue until B == 0.
      86.  01:118D  DD E1               	pop		ix
      87.  01:118F  DD 23               	inc		ix
      88.  01:1191                      
      89.  01:1191  C1                  	pop		bc
      90.  01:1192  10 DA               	djnz	Monitor_PrintBytes
      91.  01:1194                      
      92.  01:1194  C9                  	ret
      93.  01:1195                      
      94.  01:1195                      Monitor_DoMemoryOutput:
      95.  01:1195  2A 01 81            	ld		hl,(MemoryOutputStartAddr)
      96.  01:1198  22 03 81            	ld		(MemoryOutputCurAddr),hl
      97.  01:119B                      
      98.  01:119B  CD 54 11            	call	Monitor_DoMemoryLabel
      99.  01:119E                      
     100.  01:119E                      	; Output 16 memory bytes
     101.  01:119E  2A 05 81            	ld		hl,(MemoryOutputEndAddr)
     102.  01:11A1  ED 4B 01 81         	ld		bc,(MemoryOutputStartAddr)
     103.  01:11A5  37                  	scf
     104.  01:11A6  3F                  	ccf		; Clear carry flag to get the proper subtraction result.
     105.  01:11A7  23                  	inc		hl	
     106.  01:11A8  ED 42               	sbc		hl,bc
     107.  01:11AA  22 07 81            	ld		(MemoryOutputBytesLeft),hl
     108.  01:11AD                      
     109.  01:11AD  DD 2A 01 81         	ld		ix,(MemoryOutputStartAddr)
     110.  01:11B1  06 10               	ld		b,16
     111.  01:11B3  CD 6E 11            	call	Monitor_PrintBytes
     112.  01:11B6                      
     113.  01:11B6                      EndMemoryLine:
     114.  01:11B6  11 32 10            	ld		de,strCRLF
     115.  01:11B9  0E 02               	ld		c,B_STROUT
     116.  01:11BB                      	DoBIOS
     116.  01:11BB  E7                >   rst $20
     117.  01:11BC                      
     118.  01:11BC  2A 07 81            	ld		hl,(MemoryOutputBytesLeft)
     119.  01:11BF  37                  	scf
     120.  01:11C0  01 10 00            	ld		bc,16
     121.  01:11C3  ED 42               	sbc		hl,bc	; Subtract the 16 bytes we already read.
     122.  01:11C5  FA E4 11            	jp		m,.Done	; End if we're out of memory to write.
     123.  01:11C8  22 07 81            	ld		(MemoryOutputBytesLeft),hl
     124.  01:11CB                      
     125.  01:11CB  01 10 00            	ld		bc,16
     126.  01:11CE  2A 03 81            	ld		hl,(MemoryOutputCurAddr)
     127.  01:11D1  09                  	add		hl,bc						; Advance start pointer
     128.  01:11D2  22 03 81            	ld		(MemoryOutputCurAddr),hl	
     129.  01:11D5  CD 54 11            	call	Monitor_DoMemoryLabel
     130.  01:11D8                      
     131.  01:11D8  06 10               	ld		b,16						; Another 16 bytes
     132.  01:11DA  DD 2A 03 81         	ld		ix,(MemoryOutputCurAddr)
     133.  01:11DE  CD 6E 11            	call	Monitor_PrintBytes
     134.  01:11E1  C3 B6 11            	jp		EndMemoryLine
     135.  01:11E4                      
     136.  01:11E4                      .Done:
     137.  01:11E4  C9                  	ret
     290   01:11E5                      	include "commands/go.asm"
       1.  01:11E5  (01)                	PAGE 1
       2.  01:1485                      
       3.  01:1485                      ; Monitor's G command - Go
       4.  01:1485                      ; JP to an address.
       5.  01:1485                      Monitor_CMD_Go:
       6.  01:1485                      	; If MON_Argument2 is NULL, abort with an error.
       7.  01:1485  3A 00 88            	ld		a,(MON_Argument1)
       8.  01:1488  FE 00               	cp		0
       9.  01:148A  28 14               	jr		z,.argerror
      10.  01:148C                      
      11.  01:148C                          ; Beginning address
      12.  01:148C  2A 00 88            	ld		hl,(MON_Argument1+0)
      13.  01:148F  22 00 83            	ld		(STRINGTOHEX_SRC+0),hl
      14.  01:1492  2A 02 88            	ld		hl,(MON_Argument1+2)
      15.  01:1495  22 02 83            	ld		(STRINGTOHEX_SRC+2),hl
      16.  01:1498                      	PROCYON	P_STRTOHEX16
      16.  01:1498  CD 03 F1          >     call    (PROCYON_PUBLIC_API_BASE+(3*cmd))
      17.  01:149B                      
      18.  01:149B  2A 10 83            	ld		hl,(STRINGTOHEX_DEST)
      19.  01:149E  E9                      jp      (hl)
      20.  01:149F                      
      21.  01:149F  C9                  	ret
      22.  01:14A0                      
      23.  01:14A0                      .argerror:
      24.  01:14A0  11 9C 10            	ld		de,strCmdArgumentError
      25.  01:14A3  0E 02               	ld		c,B_STROUT
      26.  01:14A5                      	DoBIOS
      26.  01:14A5  E7                >   rst $20
      27.  01:14A6  11 32 10            	ld		de,strCRLF
      28.  01:14A9  0E 02               	ld		c,B_STROUT
      29.  01:14AB                      	DoBIOS
      29.  01:14AB  E7                >   rst $20
      30.  01:14AC  C9                  	ret
     291   01:14AD                      	include "commands/upload.asm"
       1.  01:14AD  (01)                    PAGE 1
       2.  01:11E5                      
       3.  01:11E5                      ; Monitor's U command
       4.  01:11E5                      ; Upload a HEX file somewhere in memory
       5.  01:11E5                      Monitor_CMD_Upload:
       6.  01:11E5                          ; Each HEX record contains the destination address.
       7.  01:11E5                      
       8.  01:11E5                          ; Base address of an upload is 9000h.
       9.  01:11E5  11 31 13            	ld		de,STR_HEX_ReadyToReceive
      10.  01:11E8  0E 02               	ld		c,B_STROUT
      11.  01:11EA                      	DoBIOS
      11.  01:11EA  E7                >   rst $20
      12.  01:11EB                      
      13.  01:11EB                      HEX_ProcessRecord:
      14.  01:11EB                          ; Receive one record.
      15.  01:11EB  CD 3F 12                call    HEX_ReceiveRecord
      16.  01:11EE                      
      17.  01:11EE                          ; Is it an EOF?
      18.  01:11EE  3A A0 83                ld      a,(HEX_RecordType)
      19.  01:11F1  FE 01                   cp      1    
      20.  01:11F3  28 19                   jr      z,.Done
      21.  01:11F5  00                      nop
      22.  01:11F6                      
      23.  01:11F6                          ; Copy it to its destination.
      24.  01:11F6  CD 0F 12                call    HEX_CopyRecord
      25.  01:11F9                      
      26.  01:11F9                          ; Check the checksum.
      27.  01:11F9  3A 9D 83                ld      a,(HEX_RunningChecksum)
      28.  01:11FC  FE 00                   cp      0
      29.  01:11FE  20 07                   jr      nz,.bad    
      30.  01:1200                      
      31.  01:1200  1E 23                   ld		e,"#"
      32.  01:1202  0E 01               	ld		c,B_CONOUT
      33.  01:1204                          DoBIOS
      33.  01:1204  E7                >   rst $20
      34.  01:1205  18 05                   jr      .Next
      35.  01:1207                      
      36.  01:1207                      .bad:
      37.  01:1207  1E 58                   ld		e,"X"
      38.  01:1209  0E 01               	ld		c,B_CONOUT
      39.  01:120B                          DoBIOS
      39.  01:120B  E7                >   rst $20
      40.  01:120C                      
      41.  01:120C                      .Next:
      42.  01:120C  18 DD                   jr      HEX_ProcessRecord
      43.  01:120E                      
      44.  01:120E                      .Done:
      45.  01:120E  C9                  	ret
      46.  01:120F                      
      47.  01:120F                      HEX_CopyRecord:
      48.  01:120F  2A 9E 83                ld      hl,(HEX_Address)
      49.  01:1212  11 00 90                ld      de,$9000
      50.  01:1215  19                      add     hl,de
      51.  01:1216  54                      ld      d,h
      52.  01:1217  5D                      ld      e,l
      53.  01:1218  21 A2 83                ld      hl,HEX_RecordData
      54.  01:121B  3A 9A 83                ld      a,(HEX_BytesInRecord)
      55.  01:121E  4F                      ld      c,a
      56.  01:121F  06 00                   ld      b,0
      57.  01:1221  ED B0                   ldir
      58.  01:1223  C9                      ret
      59.  01:1224                      
      60.  01:1224                      HEX_GetASCIIByteValue:
      61.  01:1224                          ; Get two ASCII characters, convert them to a byte value, and return it in A.
      62.  01:1224  0E 03                   ld		c,B_CONIN
      63.  01:1226                          DoBIOS
      63.  01:1226  E7                >   rst $20
      64.  01:1227  32 00 83            	ld		(STRINGTOHEX_SRC+0),a
      65.  01:122A  0E 03                   ld		c,B_CONIN
      66.  01:122C                          DoBIOS
      66.  01:122C  E7                >   rst $20
      67.  01:122D  32 01 83            	ld		(STRINGTOHEX_SRC+1),a
      68.  01:1230  CD 76 0B            	call	PROCYON_StringToHex8
      69.  01:1233                      
      70.  01:1233  3A 10 83            	ld		a,(STRINGTOHEX_DEST)
      71.  01:1236  C9                      ret
      72.  01:1237                      
      73.  01:1237                      HEX_AwaitStartCode:
      74.  01:1237                          ; Listen for the start code.
      75.  01:1237  0E 03                   ld		c,B_CONIN
      76.  01:1239                          DoBIOS
      76.  01:1239  E7                >   rst $20
      77.  01:123A                      
      78.  01:123A  FE 3A                   cp      ":"
      79.  01:123C  20 F9                   jr      nz,HEX_AwaitStartCode
      80.  01:123E                      
      81.  01:123E                          ; Got the start code of a HEX.
      82.  01:123E  C9                      ret
      83.  01:123F                      
      84.  01:123F                      HEX_ReceiveRecord:
      85.  01:123F                          ; Receive a HEX record.
      86.  01:123F                      
      87.  01:123F                          ; Set up our variables.
      88.  01:123F  3E 00                   ld      a,0
      89.  01:1241  32 99 83                ld      (HEX_GotStartCode),a
      90.  01:1244  32 9A 83                ld      (HEX_BytesInRecord),a
      91.  01:1247                          
      92.  01:1247  D9                      exx 
      93.  01:1248  06 00                   ld      b,0     ; The checksum will be in B'
      94.  01:124A  D9                      exx
      95.  01:124B                      
      96.  01:124B  CD 37 12                call    HEX_AwaitStartCode
      97.  01:124E  21 99 83                ld      hl,HEX_GotStartCode
      98.  01:1251  34                      inc     (hl)
      99.  01:1252                      
     100.  01:1252                          ; Next up is the number of bytes contained in this record.
     101.  01:1252  CD 24 12                call    HEX_GetASCIIByteValue
     102.  01:1255  32 9A 83                ld      (HEX_BytesInRecord),a
     103.  01:1258  D9                      exx
     104.  01:1259  80                      add     b       ; Checksum calculation
     105.  01:125A  47                      ld      b,a     ; Store checksum in B
     106.  01:125B  D9                      exx
     107.  01:125C                      
     108.  01:125C                          ; Then a big-endian address.
     109.  01:125C  CD 24 12                call    HEX_GetASCIIByteValue
     110.  01:125F  67                      ld      h,a
     111.  01:1260  D9                      exx
     112.  01:1261  80                      add     b       ; Checksum calculation
     113.  01:1262  47                      ld      b,a     ; Store checksum in B
     114.  01:1263  D9                      exx
     115.  01:1264                      
     116.  01:1264  E5                      push    hl
     117.  01:1265  CD 24 12                call    HEX_GetASCIIByteValue
     118.  01:1268  F5                      push    af
     119.  01:1269  D9                      exx
     120.  01:126A  80                      add     b       ; Checksum calculation
     121.  01:126B  47                      ld      b,a     ; Store checksum in B
     122.  01:126C  D9                      exx
     123.  01:126D  F1                      pop     af
     124.  01:126E                      
     125.  01:126E  E1                      pop     hl
     126.  01:126F  6F                      ld      l,a
     127.  01:1270  22 9E 83                ld      (HEX_Address),hl
     128.  01:1273                      
     129.  01:1273                          ; Then the record type.
     130.  01:1273  CD 24 12                call    HEX_GetASCIIByteValue
     131.  01:1276  32 A0 83                ld      (HEX_RecordType),a
     132.  01:1279  D9                      exx
     133.  01:127A  80                      add     b       ; Checksum calculation
     134.  01:127B  47                      ld      b,a     ; Store checksum in B
     135.  01:127C  D9                      exx
     136.  01:127D                      
     137.  01:127D                          ; Then the record data itself.
     138.  01:127D  3A 9A 83                ld      a,(HEX_BytesInRecord)
     139.  01:1280  FE 00                   cp      0
     140.  01:1282  28 13                   jr      z,HEX_GetChecksum
     141.  01:1284                      
     142.  01:1284  47                      ld      b,a
     143.  01:1285  21 A2 83                ld      hl,HEX_RecordData
     144.  01:1288                      
     145.  01:1288                      ReceiveLoop:
     146.  01:1288  C5                      push    bc
     147.  01:1289  E5                      push    hl
     148.  01:128A                      
     149.  01:128A  CD 24 12                call    HEX_GetASCIIByteValue
     150.  01:128D  E1                      pop     hl 
     151.  01:128E  77                      ld      (hl),a
     152.  01:128F  D9                      exx
     153.  01:1290  80                      add     b       ; Checksum calculation
     154.  01:1291  47                      ld      b,a     ; Store checksum in B
     155.  01:1292  D9                      exx
     156.  01:1293                      
     157.  01:1293  C1                      pop     bc
     158.  01:1294  23                      inc     hl          ; Advance receive buffer
     159.  01:1295  10 F1                   djnz    ReceiveLoop ; Loop until receive count is 0
     160.  01:1297                      
     161.  01:1297                      HEX_GetChecksum:
     162.  01:1297                          ; And finally the checksum.
     163.  01:1297  CD 24 12                call    HEX_GetASCIIByteValue
     164.  01:129A  32 A1 83                ld      (HEX_Checksum),a
     165.  01:129D  D9                      exx
     166.  01:129E  80                      add     b       ; Checksum calculation
     167.  01:129F  47                      ld      b,a     ; Store checksum in B
     168.  01:12A0  32 9D 83                ld      (HEX_RunningChecksum),a ; Final checksum!
     169.  01:12A3  D9                      exx
     170.  01:12A4                      
     171.  01:12A4  C9                      ret
     172.  01:12A5                      
     173.  01:12A5  (02)                    PAGE 2
     174.  02:8399  00                  HEX_GotStartCode:   db 0    ; Did we get the start code?
     175.  02:839A  00                  HEX_BytesInRecord:  db 0    ; How many bytes does this record contain?
     176.  02:839B  00 00               HEX_BaseAddress:    dw 0    ; Base address to write to. The record's offset is added to it.
     177.  02:839D  00                  HEX_RunningChecksum:db 0    ; Running checksum total.
     178.  02:839E                      
     179.  02:839E                      ; The record itself.
     180.  02:839E  00 00               HEX_Address:        dw 0    ; WORD  - Destination address, always big-endian.
     181.  02:83A0  00                  HEX_RecordType:     db 0    ; BYTE  - Record type.
     182.  02:83A1  00                  HEX_Checksum:       db 0    ; BYTE  - Checksum of the record.
     183.  02:83A2  00 (64)             HEX_RecordData:     ds 64   ; ARRAY - The record's contents.
     184.  02:83E2                      
     185.  02:83E2  (01)                    PAGE 1
     186.  01:1331                      STR_HEX_ReadyToReceive:     db "Ready to receive HEX...",13,10,0
     186.  01:1331  52 65 61 64 79 20 74 6F 20 72 65 63 65 69 76 65 
     186.  01:1341  20 48 45 58 2E 2E 2E 0D 0A 00 
     187.  01:134B                      STR_HEX_Debug_GotStart:     db "Got start code",13,10,0
     187.  01:134B  47 6F 74 20 73 74 61 72 74 20 63 6F 64 65 0D 0A 
     187.  01:135B  00 
     188.  01:135C                      STR_HEX_Debug_GotLength:    db "Got rec length",13,10,0
     188.  01:135C  47 6F 74 20 72 65 63 20 6C 65 6E 67 74 68 0D 0A 
     188.  01:136C  00 
     189.  01:136D                      STR_HEX_Debug_GotAddr:      db "Got rec address",13,10,0
     189.  01:136D  47 6F 74 20 72 65 63 20 61 64 64 72 65 73 73 0D 
     189.  01:137D  0A 00 
     190.  01:137F                      STR_HEX_Debug_GotType:      db "Got rec type",13,10,0
     190.  01:137F  47 6F 74 20 72 65 63 20 74 79 70 65 0D 0A 00 
     191.  01:138E                      STR_HEX_Debug_GotData:      db "Got rec data",13,10,0
     191.  01:138E  47 6F 74 20 72 65 63 20 64 61 74 61 0D 0A 00 
     192.  01:139D                      STR_HEX_Debug_GotChecksum:  db "Got rec checksum",13,10,0
     192.  01:139D  47 6F 74 20 72 65 63 20 63 68 65 63 6B 73 75 6D 
     192.  01:13AD  0D 0A 00 
     292   01:13B0                      	include "commands/in.asm"
       1.  01:13B0  (01)                	PAGE 1
       2.  01:140E                      
       3.  01:140E                      Monitor_CMD_In:
       4.  01:140E                      	; If MON_Argument1 is NULL, abort with an error.
       5.  01:140E  3A 00 88            	ld		a,(MON_Argument1)
       6.  01:1411  FE 00               	cp		0
       7.  01:1413  28 2A               	jr		z,.argerror
       8.  01:1415                      
       9.  01:1415  2A 00 88                ld		hl,(MON_Argument1+0)
      10.  01:1418  22 00 83            	ld		(STRINGTOHEX_SRC+0),hl
      11.  01:141B  CD 76 0B            	call	PROCYON_StringToHex8
      12.  01:141E  3A 10 83                ld      a,(STRINGTOHEX_DEST)    ; port to use
      13.  01:1421  4F                  	ld		c,a
      14.  01:1422  ED 78                   in      a,(c)
      15.  01:1424                      
      16.  01:1424  32 18 83                ld      (HEXTOSTRING_SRC),a
      17.  01:1427  CD 78 0C                call    PROCYON_Hex8ToString
      18.  01:142A                          
      19.  01:142A  3A 1C 83                ld		a,(HEXTOSTRING_DEST)
      20.  01:142D  5F                  	ld		e,a
      21.  01:142E  0E 01               	ld		c,B_CONOUT
      22.  01:1430                      	DoBIOS								
      22.  01:1430  E7                >   rst $20
      23.  01:1431  3A 1D 83            	ld		a,(HEXTOSTRING_DEST+1)
      24.  01:1434  5F                  	ld		e,a
      25.  01:1435  0E 01               	ld		c,B_CONOUT
      26.  01:1437                      	DoBIOS
      26.  01:1437  E7                >   rst $20
      27.  01:1438                      
      28.  01:1438  11 32 10            	ld		de,strCRLF
      29.  01:143B  0E 02               	ld		c,B_STROUT
      30.  01:143D                      	DoBIOS
      30.  01:143D  E7                >   rst $20
      31.  01:143E                      
      32.  01:143E  C9                      ret
      33.  01:143F                      
      34.  01:143F                      .argerror:
      35.  01:143F  11 9C 10            	ld		de,strCmdArgumentError
      36.  01:1442  0E 02               	ld		c,B_STROUT
      37.  01:1444                      	DoBIOS
      37.  01:1444  E7                >   rst $20
      38.  01:1445  11 32 10            	ld		de,strCRLF
      39.  01:1448  0E 02               	ld		c,B_STROUT
      40.  01:144A                      	DoBIOS
      40.  01:144A  E7                >   rst $20
      41.  01:144B  C9                  	ret
     293   01:144C                      	include "commands/out.asm"
       1.  01:144C  (01)                	PAGE 1
       2.  01:144C                      
       3.  01:144C                      Monitor_CMD_Out:
       4.  01:144C  3A 00 88            	ld		a,(MON_Argument1)
       5.  01:144F  FE 00               	cp		0
       6.  01:1451  28 25               	jr		z,.argerror
       7.  01:1453                      
       8.  01:1453  2A 00 88                ld		hl,(MON_Argument1+0)
       9.  01:1456  22 00 83            	ld		(STRINGTOHEX_SRC+0),hl
      10.  01:1459  CD 76 0B            	call	PROCYON_StringToHex8
      11.  01:145C  3A 10 83                ld      a,(STRINGTOHEX_DEST)    ; port to use
      12.  01:145F  4F                      ld      c,a
      13.  01:1460  C5                      push    bc
      14.  01:1461                      
      15.  01:1461  2A 10 88                ld		hl,(MON_Argument2+0)
      16.  01:1464  22 00 83            	ld		(STRINGTOHEX_SRC+0),hl
      17.  01:1467  CD 76 0B            	call	PROCYON_StringToHex8
      18.  01:146A  C1                      pop     bc
      19.  01:146B  3A 10 83                ld      a,(STRINGTOHEX_DEST)    ; byte to write
      20.  01:146E  47                      ld      b,a
      21.  01:146F                      
      22.  01:146F  ED 41                   out     (c),b
      23.  01:1471                      
      24.  01:1471  11 32 10            	ld		de,strCRLF
      25.  01:1474  0E 02               	ld		c,B_STROUT
      26.  01:1476                      	DoBIOS
      26.  01:1476  E7                >   rst $20
      27.  01:1477                      
      28.  01:1477  C9                      ret
      29.  01:1478                      
      30.  01:1478                      .argerror:
      31.  01:1478  11 9C 10            	ld		de,strCmdArgumentError
      32.  01:147B  0E 02               	ld		c,B_STROUT
      33.  01:147D                      	DoBIOS
      33.  01:147D  E7                >   rst $20
      34.  01:147E  11 32 10            	ld		de,strCRLF
      35.  01:1481  0E 02               	ld		c,B_STROUT
      36.  01:1483                      	DoBIOS
      36.  01:1483  E7                >   rst $20
      37.  01:1484  C9                  	ret
     294   01:1485                      
     295   01:1485  (01)                	PAGE 1
     296   01:13B0                      
     297   01:13B0                      BOOT_WriteBanner:
     298   01:13B0  3E 05               	ld		a,5
     299   01:13B2  1E 05               	ld		e,5
     300   01:13B4                          VDPBIOS	VDP_SetTextPosition
     300   01:13B4  CD 1B F0          >     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
     301   01:13B7                          
     302   01:13B7  21 AF 10            	ld		hl,strBanner1
     303   01:13BA                      	VDPBIOS VDP_StringOut
     303   01:13BA  CD 18 F0          >     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
     304   01:13BD                          
     305   01:13BD                      
     306   01:13BD  3E 09               	ld		a,9
     307   01:13BF  1E 06               	ld		e,6
     308   01:13C1                          VDPBIOS	VDP_SetTextPosition
     308   01:13C1  CD 1B F0          >     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
     309   01:13C4                          
     310   01:13C4  21 CF 10            	ld		hl,strBanner2
     311   01:13C7                      	VDPBIOS	VDP_StringOut
     311   01:13C7  CD 18 F0          >     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
     312   01:13CA                          
     313   01:13CA                      
     314   01:13CA  3E 00               	ld		a,0
     315   01:13CC  1E 14               	ld		e,20
     316   01:13CE                          VDPBIOS	VDP_SetTextPosition
     316   01:13CE  CD 1B F0          >     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
     317   01:13D1                          
     318   01:13D1  21 E7 10            	ld		hl,strBanner3
     319   01:13D4                      	VDPBIOS	VDP_StringOut
     319   01:13D4  CD 18 F0          >     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
     320   01:13D7                          
     321   01:13D7                      
     322   01:13D7  3E 0A                   ld		a,10
     323   01:13D9  1E 16               	ld		e,22
     324   01:13DB                          VDPBIOS	VDP_SetTextPosition
     324   01:13DB  CD 1B F0          >     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
     325   01:13DE                          
     326   01:13DE  21 FB 10            	ld		hl,strBanner4
     327   01:13E1                      	VDPBIOS	VDP_StringOut
     327   01:13E1  CD 18 F0          >     call    (VDP_JUMPTABLE_PUBLIC+(3*cmd))
     328   01:13E4                          
     329   01:13E4  C9                  	ret
     330   01:13E5                      
     331   01:13E5                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     332   01:13E5                      Monitor_InterpretCommand:
     333   01:13E5                      	; The Z80 version of a switch statement?
     334   01:13E5  3A 0D 81            	ld		a,(MON_Command)
     335   01:13E8                      
     336   01:13E8                      	; JP to the command that matches. 
     337   01:13E8                      	; If no command matches, fall through to an error.
     338   01:13E8                      	; The command's RET will return to *this function's caller*
     339   01:13E8                      	; i.e. the command loop.
     340   01:13E8                      
     341   01:13E8                      	; Command: Memory
     342   01:13E8  FE 4D               	cp		"M"
     343   01:13EA  CA 12 11            	jp		z,Monitor_CMD_Memory
     344   01:13ED                      
     345   01:13ED  FE 47               	cp		"G"
     346   01:13EF  CA 85 14            	jp		z,Monitor_CMD_Go
     347   01:13F2                      
     348   01:13F2  FE 55               	cp		"U"
     349   01:13F4  CA E5 11            	jp		z,Monitor_CMD_Upload
     350   01:13F7                      
     351   01:13F7  FE 49               	cp		"I"
     352   01:13F9  CA 0E 14            	jp		z,Monitor_CMD_In
     353   01:13FC                      
     354   01:13FC  FE 4F               	cp		"O"
     355   01:13FE  CA 4C 14            	jp		z,Monitor_CMD_Out
     356   01:1401                      
     357   01:1401  11 83 10            	ld		de,strCmdUnknown
     358   01:1404  0E 02               	ld		c,B_STROUT
     359   01:1406                      	DoBIOS
     359   01:1406  E7                >   rst $20
     360   01:1407  11 32 10            	ld		de,strCRLF
     361   01:140A  0E 02               	ld		c,B_STROUT
     362   01:140C                      	DoBIOS
     362   01:140C  E7                >   rst $20
     363   01:140D                      
     364   01:140D  C9                  	ret
     365   01:140E                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     366   01:140E                      
     367   01:140E  (02)                	PAGE 2	; Data section in RAM. Assume 32K of RAM on an RC2014.
     368   02:8000                      
     369   02:8000                      buffer_base:
     370   02:8000  00                  buffer_len:				db 0
     371   02:8001  00                  buffer_inputsize:		db 0
     372   02:8002  00 (255)            buffer_Input:			ds 255	; 255 bytes of input storage
     373   02:8101                      
     374   02:8101                      ;;;
     375   02:8101  00 00               MemoryOutputStartAddr:	dw 0
     376   02:8103  00 00               MemoryOutputCurAddr:	dw 0
     377   02:8105  00 00               MemoryOutputEndAddr:	dw 0
     378   02:8107  00 00               MemoryOutputBytesLeft:	dw 0
     379   02:8109                      
     380   02:8109                      ;;;
     381   02:8109  00 00               HEX_DestinationAddr:	dw 0
     382   02:810B                      
     383   02:810B                      ;;;;;;;;;;;;;;;;;;;
     384   02:810B                      ; ROM monitor data stuff
     385   02:810B  00 00               MON_PreviousCmd:	db		0,0
     386   02:810D  00 00               MON_Command:		db		0,0
     387   02:810F                      
     388   02:810F  00 00               MON_ArgDestPtr:		dw		0
     389   02:8111  00                  MON_ArgStartsAt: 	db		0
     390   02:8112                      	org $8800			; ensure these are page-aligned
     391   02:8800  00 (16)             MON_Argument1:		ds		16
     392   02:8810  00 (16)             MON_Argument2:		ds		16
     393   02:8820  00 (16)             MON_Argument3:		ds		16
     394   02:8830  00 (16)             MON_Argument4:		ds		16

    LABELS
-------------------------------------------------
00:00000000 X B_RESET
00:00000001   B_CONOUT
00:00000002   B_STROUT
00:00000003   B_CONIN
00:00000004 X B_CONSTAT
00:00000005   B_STRIN
00:00000001 X DEV_AUX
00:00000002 X DEV_CON
00:00000005 X DEV_SCREEN
00:00000080   SIOA_C
00:00000081   SIOA_D
00:00000082   SIOB_C
00:00000083 X SIOB_D
00:00000000 X RST00
00:00000008 X RST08
00:00000010 X RST10
00:00000018 X RST18
00:00000020 X RST20
00:00000028 X RST28
00:0000002E X RST30
00:00000034 X RST38
00:00000066 X NMI
01:00000F23   BIOS_FnTable
01:00000F2F   rc2014_getc
01:00000F30   waitch
01:00000F3D X rc2014_putc
01:00000F40   rc2014_pollc
01:00000F4A   rc2014_sio_TX
01:00000F4B   rc2014_sio_TX.txb
01:00000F55   rc2014_sio_init
01:00000F84   BIOS_Dispatch
01:00000F99   BIOS_Reset
01:00000F9A   BIOS_Conout
01:00000F9F   BIOS_Strout
01:00000F9F   BIOS_Strout.loop1
01:00000FAD   BIOS_Strout.loop2
01:00000FAE   BIOS_Conin
01:00000FB3   BIOS_Constat
01:00000FB8   BIOS_Strin
01:00000FC3   BIOS_Strin.begin
01:00000FCF X BIOS_Strin.check2
01:00000FD4   BIOS_Strin.handlebs
01:00000FFB   BIOS_Strin.charout
01:00001002 X BIOS_Strin.write
01:0000101E   BIOS_Strin.done
01:00001030   strPrompt
01:00001032   strCRLF
01:00001035   HelloWorld
01:00001061 X strYouEntered
01:0000106F   strDbgCmd
01:00001079   strDbgArg
01:00001083   strCmdUnknown
01:0000109C   strCmdArgumentError
01:000010AF   strBanner1
01:000010CF   strBanner2
01:000010E7   strBanner3
01:000010FB   strBanner4
01:00000098   VDP_PORT_VRAM
01:00000099   VDP_PORT_REGS
01:00000040 X VDP_VRAM_WRITE
01:00000080   VDP_REG_WRITE
01:00000004   tmswait
01:0000A02F X _VDPClearPixel
01:000000B0 X _VDPSetPixel
01:00000000   VDP_Reset
01:00000001   VDP_GoTextMode
01:00000002 X VDP_GoGraphics1
01:00000003   VDP_GoGraphics2
01:00000004   VDP_SetVRAMWriteAddress
01:00000005 X VDP_SetRegistersFromArray
01:00000006 X VDP_SetRegister
01:00000007 X VDP_VRAMBlockCopy
01:00000008   VDP_StringOut
01:00000009   VDP_SetTextPosition
01:0000000A X VDP_GoBitmapMode
01:0000000B X VDP_GetPixelAddress
01:0000000C X VDP_SetVRAMReadAddress
01:0000F000   VDP_JUMPTABLE_PUBLIC
01:00000200   VDP_B_ColdStart
01:0000020C   VDP_B_StringOut
01:0000020C   VDP_B_StringOut.loop
01:00000219   VDP_B_VRAMBlockCopy
01:0000021C   VDP_B_VRAMBlockCopy.copyloop
01:00000229   VDP_B_SetRegister
01:00000238   VDP_B_SetRegistersFromArray
01:0000023D   VDP_B_SetRegistersFromArray.regloop
01:0000024E   VDP_B_SetVRAMWriteAddress
01:00000259   VDP_B_Reset
01:0000026B   VDP_B_Reset.clearloop
01:00000273   VDP_B_GoTextMode
01:0000027E   VDP_B_GoTextMode.copyfont
01:00000294   VDP_B_GoGraphics1
01:0000029E   VDP_B_GoGraphics2
01:000002A8   VDP_B_SetTextPosition
01:000002BB   VDP_B_GoBitmapMode
01:000002C5   VDP_B_GetPixelAddress
01:000002D6   VDP_B_SetVRAMReadAddress
01:000002DF   VDP_BI_SetupGraphicsIIColorTable
01:000002EB   VDP_BI_SetupGraphicsIIColorTable.loop
01:000002F6   VDP_BI_SetupGraphicsIINameTable
01:00000302   VDP_BI_SetupGraphicsIINameTable.drawLoop1
01:0000030B   VDP_ASCIIFont
01:00000B0B   VDP_Regs_Text
01:00000B13   VDP_Regs_Graphics1
01:00000B1B   VDP_Regs_Graphics2
01:00000B23   VDP_DefaultRegisters
01:00000B2B   VDP_B_FnTable
02:00008291   VDP_ShadowRegs
02:0000F000   VDP_FnTable_Public
01:00000000 X P_STRTOHEX8
01:00000001   P_STRTOHEX16
01:00000002 X P_HEX8TOSTR
01:00000003   P_HEX16TOSTR
01:00000004   P_PRINTF
01:00000005 X P_B2D8
01:00000006 X P_B2D16
01:00000007 X P_B2D32
01:0000F100   PROCYON_PUBLIC_API_BASE
01:00008300   PROCAPI_DATA_BASE
01:00008300   STRINGTOHEX_SRC
01:00008310   STRINGTOHEX_DEST
01:00008318   HEXTOSTRING_SRC
01:0000831C   HEXTOSTRING_DEST
01:00000B52   PROCYON_B_FnTable
01:00000B6A   PROCYON_B_ColdStart
01:00000B76   PROCYON_StringToHex8
01:00000B7E X PROCYON_StringToHex8.DoConversion
01:00000B7E X PROCYON_StringToHex8.Digit0
01:00000B86 X PROCYON_StringToHex8.Digit0_IsAlpha
01:00000B95   PROCYON_StringToHex8.Digit0_IsNumber
01:00000BA4   PROCYON_StringToHex8.Digit1
01:00000BAC X PROCYON_StringToHex8.Digit1_IsAlpha
01:00000BB6   PROCYON_StringToHex8.Digit1_IsNumber
01:00000BBE   PROCYON_StringToHex8.Done
01:00000BBF   PROCYON_StringToHex16
01:00000BC7   PROCYON_StringToHex16.JustifyLoop
01:00000BE7   PROCYON_StringToHex16.DoConversion
01:00000BE7 X PROCYON_StringToHex16.Digit0
01:00000BF2   PROCYON_StringToHex16.Digit0_IsAlpha
01:00000C01   PROCYON_StringToHex16.Digit0_IsNumber
01:00000C10   PROCYON_StringToHex16.Digit1
01:00000C1B   PROCYON_StringToHex16.Digit1_IsAlpha
01:00000C25   PROCYON_StringToHex16.Digit1_IsNumber
01:00000C2F   PROCYON_StringToHex16.Digit2
01:00000C3A   PROCYON_StringToHex16.Digit2_IsAlpha
01:00000C49   PROCYON_StringToHex16.Digit2_IsNumber
01:00000C58   PROCYON_StringToHex16.Digit3
01:00000C63   PROCYON_StringToHex16.Digit3_IsAlpha
01:00000C6D   PROCYON_StringToHex16.Digit3_IsNumber
01:00000C77   PROCYON_StringToHex16.Done
01:00000C78   PROCYON_Hex8ToString
01:00000CB9   PROCYON_Hex16ToString
01:00000D1E   PROCYON_Printf
01:00000D34   PrintF_StringLoop
01:00000D42 X PrintF_StringLoop.advance
01:00000D46   PrintF_StringLoop.getFormatChar
01:00000D5D   PrintF_FormatDone
01:00000D60   PrintF_End
01:00000D62   PrintF_FChar_l
01:00000D71   PrintF_FChar_ld
01:00000D89   PrintF_FChar_lx
01:00000DBE   PrintF_FChar_x
01:00000DD8   PrintF_FChar_s
01:00000DE8   PrintF_FChar_d
01:00000DFC   PrintF_AdvanceParamsFrame
01:00000E05   PrintF_StepBackParamsFrame
01:000012A5   B2D8
01:000012A8   B2D16
01:000012AA X B2D24
01:000012AC   B2D32
01:000012AF X B2D48
01:000012B3 X B2D64
01:000012C9 X B2DFILC
01:000012DC   B2DSKP0
01:000012E3   B2DFND1
01:000012E9   B2DLUS2
01:000012EB   B2DLUS1
01:000012F1   B2DLUS0
01:000012FD   B2DNXT
01:00001308   B2DSIZ
01:00001323   B2DEXP
01:00001325   B2DEXPH
01:00001327   B2DEXPL
02:00008300   _StringToHex_Source
02:00008310   _StringToHex_Dest
02:00008318   _HexToString_Source
02:0000831C   _HexToString_Dest
02:00008320   _printf_params
02:00008322   B2DINV
02:0000832A   B2DBUF
02:0000833E   B2DEND
02:0000F100   PROCYON_FnTable_Public
01:00000E0E   Start
01:00000E1B   Start.loop
01:00000E35 X Greet
01:00000E3D   GetInputString
01:00000E5A X CheckCmdLength
01:00000E6B   GotCmdLength
01:00000E73 X InputLoopEnd
01:00000E7B X CmdDebugOutput
01:00000EDE   GetArgument
01:00000EE5   GetArgument.loop
01:00000EFB   GetArgument.ArgumentCopyLoop
01:00000F10   GetArgument.copychar
01:00000F14   GetArgument.done
01:00000F15   ClearInputBuffer
01:00000F1A   ClearInputBuffer.clear
01:00001112   Monitor_CMD_Memory
01:00001147   Monitor_CMD_Memory.argerror
01:00001154   Monitor_DoMemoryLabel
01:0000116E   Monitor_PrintBytes
01:00001195   Monitor_DoMemoryOutput
01:000011B6   EndMemoryLine
01:000011E4   EndMemoryLine.Done
01:00001485   Monitor_CMD_Go
01:000014A0   Monitor_CMD_Go.argerror
01:000011E5   Monitor_CMD_Upload
01:000011EB   HEX_ProcessRecord
01:00001207   HEX_ProcessRecord.bad
01:0000120C   HEX_ProcessRecord.Next
01:0000120E   HEX_ProcessRecord.Done
01:0000120F   HEX_CopyRecord
01:00001224   HEX_GetASCIIByteValue
01:00001237   HEX_AwaitStartCode
01:0000123F   HEX_ReceiveRecord
01:00001288   ReceiveLoop
01:00001297   HEX_GetChecksum
02:00008399   HEX_GotStartCode
02:0000839A   HEX_BytesInRecord
02:0000839B X HEX_BaseAddress
02:0000839D   HEX_RunningChecksum
02:0000839E   HEX_Address
02:000083A0   HEX_RecordType
02:000083A1   HEX_Checksum
02:000083A2   HEX_RecordData
01:00001331   STR_HEX_ReadyToReceive
01:0000134B X STR_HEX_Debug_GotStart
01:0000135C X STR_HEX_Debug_GotLength
01:0000136D X STR_HEX_Debug_GotAddr
01:0000137F X STR_HEX_Debug_GotType
01:0000138E X STR_HEX_Debug_GotData
01:0000139D X STR_HEX_Debug_GotChecksum
01:0000140E   Monitor_CMD_In
01:0000143F   Monitor_CMD_In.argerror
01:0000144C   Monitor_CMD_Out
01:00001478   Monitor_CMD_Out.argerror
01:000013B0   BOOT_WriteBanner
01:000013E5   Monitor_InterpretCommand
02:00008000   buffer_base
02:00008000 X buffer_len
02:00008001 X buffer_inputsize
02:00008002   buffer_Input
02:00008101   MemoryOutputStartAddr
02:00008103   MemoryOutputCurAddr
02:00008105   MemoryOutputEndAddr
02:00008107   MemoryOutputBytesLeft
02:00008109 X HEX_DestinationAddr
02:0000810B X MON_PreviousCmd
02:0000810D   MON_Command
02:0000810F X MON_ArgDestPtr
02:00008111   MON_ArgStartsAt
02:00008800   MON_Argument1
02:00008810   MON_Argument2
02:00008820   MON_Argument3
02:00008830   MON_Argument4


 Output: z80bios.out
-------------------------------------------------

 Page: 00
  Org: 00000000  Size: *  Used: 00000000

    No output

 Output: out\z80bios.rom
-------------------------------------------------

 Page: 00
  Org: 00000000  Size: 00000200  Used: 0000003D

   Address   Length Align   Label
   00000000      61         RST00
   0000003D     451       <empty>

 Page: 01
  Org: 00000200  Size: *  Used: 000012AD

   Address   Length Align   Label
   00000200    2386         VDP_B_ColdStart
   00000B52     700         PROCYON_B_FnTable
   00000E0E     277         Start
   00000F23     269         BIOS_FnTable
   00001030     226         strPrompt
   00001112     211         Monitor_CMD_Memory
   000011E5     192         Monitor_CMD_Upload
   000012A5     140         B2D8
   00001331     127         STR_HEX_ReadyToReceive
   000013B0      94         BOOT_WriteBanner
   0000140E      62         Monitor_CMD_In
   0000144C      57         Monitor_CMD_Out
   00001485      40         Monitor_CMD_Go

 Page: 02
  Org: 00008000  Size: 00001000  Used: 000003E2

   Address   Length Align   Label
   00008000     338         buffer_base
   00008152     319         _StringToHex_Source
   00008291     264         VDP_ShadowRegs
   00008399      73         HEX_GotStartCode
   000083E2    3102       <empty>

 Page: 03
  Org: 00001000  Size: 00001000  Used: 00000000

   00001000    4096       <empty>
