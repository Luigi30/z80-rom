Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2020.02.17 - 23:30:56]

testprogs/atatest.asm
Errors: 0

       1   00:0000                          OUTPUT  "testprogs/out/atatest.bin"
       2   00:0000                      
       3   00:0000                      	DEFPAGE 1, 09000h, *    ; CODE
       4   00:0000                          DEFPAGE 2, *, *         ; DATA
       5   00:0000                      
       6   00:0000                          incdir  ".."
       7   00:0000                          include "procapi.inc"
       1.  00:0000  (00:0000)           P_STRTOHEX8		= 0
       2.  00:0000  (00:0001)           P_STRTOHEX16	= 1
       3.  00:0000  (00:0002)           P_HEX8TOSTR		= 2
       4.  00:0000  (00:0003)           P_HEX16TOSTR	= 3
       5.  00:0000  (00:0004)           P_PRINTF        = 4
       6.  00:0000  (00:0005)           P_B2D8          = 5
       7.  00:0000  (00:0006)           P_B2D16         = 6
       8.  00:0000  (00:0007)           P_B2D32         = 7
       9.  00:0000                      
      10.  00:0000                      ; Function table base address.
      11.  00:0000  (00:F100)           PROCYON_PUBLIC_API_BASE = $F100
      12.  00:0000                      
      13.  00:0000                      ; Variable base address.
      14.  00:0000  (00:8300)           PROCAPI_DATA_BASE = $8300
      15.  00:0000                      
      16.  00:0000                      ; Offsets for public ProcAPI data values.
      17.  00:0000  (00:8300)           STRINGTOHEX_SRC     = PROCAPI_DATA_BASE     ; +0
      18.  00:0000  (00:8310)           STRINGTOHEX_DEST    = STRINGTOHEX_SRC+16    ; +16
      19.  00:0000  (00:8318)           HEXTOSTRING_SRC     = STRINGTOHEX_DEST+8    ; +24
      20.  00:0000  (00:831C)           HEXTOSTRING_DEST    = HEXTOSTRING_SRC+4     ; +28
      21.  00:0000                      
      22.  00:0000                      ; Calls the function ID.
      23.  00:0000                      MACRO PROCYON cmd
      24.  00:0000                    <     call    (PROCYON_PUBLIC_API_BASE+(3*cmd))
      25.  00:0000                    < ENDMACRO
       8   00:0000                          include "rc2014.inc"
       1.  00:0000                      ; Function code equates.
       2.  00:0000  (00:0000)           B_RESET			= 0
       3.  00:0000  (00:0001)           B_CONOUT        = 1
       4.  00:0000  (00:0002)           B_STROUT        = 2
       5.  00:0000  (00:0003)           B_CONIN         = 3
       6.  00:0000  (00:0004)           B_CONSTAT       = 4
       7.  00:0000  (00:0005)           B_STRIN         = 5
       8.  00:0000                      
       9.  00:0000                      ; Device IDs for BIOS functions
      10.  00:0000  (00:0001)           DEV_AUX			= 1 ; RS-232.
      11.  00:0000  (00:0002)           DEV_CON			= 2	; Console. Can be redirected.
      12.  00:0000  (00:0005)           DEV_SCREEN		= 5	; Screen.
      13.  00:0000                      
      14.  00:0000                      MACRO	DoBIOS	
      15.  00:0000                    < 		rst	$20
      16.  00:0000                    < ENDMACRO
       9   00:0000                          include "ata.inc"
       1.  00:0000  (00:0010)           ATA_IO_BASE         = $10
       2.  00:0000  (00:0010)           ATA_REG_DATA        = ATA_IO_BASE+0 ; R/W
       3.  00:0000  (00:0011)           ATA_REG_ERROR       = ATA_IO_BASE+1 ; R
       4.  00:0000  (00:0011)           ATA_REG_FEATURES    = ATA_IO_BASE+1 ; W
       5.  00:0000  (00:0012)           ATA_REG_SECTORCOUNT = ATA_IO_BASE+2 ; R/W
       6.  00:0000  (00:0013)           ATA_REG_LBALO       = ATA_IO_BASE+3 ; R/W
       7.  00:0000  (00:0014)           ATA_REG_LBAMID      = ATA_IO_BASE+4 ; R/W
       8.  00:0000  (00:0015)           ATA_REG_LBAHI       = ATA_IO_BASE+5 ; R/W
       9.  00:0000  (00:0016)           ATA_REG_DRIVESELECT = ATA_IO_BASE+6 ; R/W
      10.  00:0000  (00:0017)           ATA_REG_STATUS      = ATA_IO_BASE+7 ; R
      11.  00:0000  (00:0017)           ATA_REG_COMMAND     = ATA_IO_BASE+7 ; W
      12.  00:0000                      
      13.  00:0000  (00:0001)           ATA_ERROR_AMNF      = $01
      14.  00:0000  (00:0002)           ATA_ERROR_TKZNF     = $02
      15.  00:0000  (00:0004)           ATA_ERROR_ABRT      = $04
      16.  00:0000  (00:0008)           ATA_ERROR_MCR       = $08
      17.  00:0000  (00:0010)           ATA_ERROR_IDNF      = $10
      18.  00:0000  (00:0020)           ATA_ERROR_MC        = $20
      19.  00:0000  (00:0040)           ATA_ERROR_UNC       = $40
      20.  00:0000  (00:0080)           ATA_ERROR_BBK       = $80
      21.  00:0000                      
      22.  00:0000  (00:0001)           ATA_STATUS_ERR      = $01
      23.  00:0000  (00:0002)           ATA_STATUS_IDX      = $02
      24.  00:0000  (00:0004)           ATA_STATUS_CORR     = $04
      25.  00:0000  (00:0008)           ATA_STATUS_DRQ      = $08   ; Drive Request
      26.  00:0000  (00:0010)           ATA_STATUS_SRV      = $10
      27.  00:0000  (00:0020)           ATA_STATUS_DF       = $20
      28.  00:0000  (00:0040)           ATA_STATUS_RDY      = $40   ; Ready
      29.  00:0000  (00:0080)           ATA_STATUS_BSY      = $80   ; Busy
      30.  00:0000                      
      31.  00:0000  (00:00E0)           ATA_DRIVE_MASTER    = $E0
      32.  00:0000  (00:00F0)           ATA_DRIVE_SLAVE     = $F0
      33.  00:0000                      
      34.  00:0000                      ; Command bytes
      35.  00:0000  (00:0020)           ATA_CMD_READ_SECTORS= $20
      36.  00:0000  (00:00EC)           ATA_CMD_IDENTIFY    = $EC
      37.  00:0000  (00:00EF)           ATA_CMD_SET_FEATURE = $EF
      10   00:0000                          include "fat16.inc"
       1.  00:0000                      ; http://read.pudn.com/downloads77/ebook/294884/FAT32%20Spec%20%28SDA%20Contribution%29.pdf
       2.  00:0000                      
       3.  00:0000                          struct Fat12BPB
       4.  00:0000                    < jump                ds  3
       5.  00:0000                    < oemName             ds  8
       6.  00:0000                    < bytesPerSector      dw  
       7.  00:0000                    < sectorsPerCluster   db  
       8.  00:0000                    < reservedSectors     dw  
       9.  00:0000                    < numberOfFATs        db  
      10.  00:0000                    < maxRootDirEntries   dw  
      11.  00:0000                    < numLogicalSectors16 dw  
      12.  00:0000                    < mediaDescriptor     db  
      13.  00:0000                    < sectorsPerFAT       dw
      14.  00:0000                    < sectorsPerTrack     dw
      15.  00:0000                    < numHeads            dw
      16.  00:0000                    < hiddenSectors       dd
      17.  00:0000                    < numLogicalSectors32 dd
      18.  00:0000                    < driveNum            db
      19.  00:0000                    < reserved            db
      20.  00:0000                    < bootSignature       db
      21.  00:0000                    < volumeID            dd
      22.  00:0000                    < volumeLabel         ds  11
      23.  00:0000                    < fsType              ds  8
      24.  00:0000                    < padding             ds  448
      25.  00:0000                    < bsignature          dw
      26.  00:0000                    <     endstruct
      11   00:0000                      
      12   00:0000  (01)                    PAGE 1
      13   01:9000                      Entry:
      14   01:9000  C3 5C 90                jp      START
      15   01:9003                      
      16   01:9003  00 00               Math_OperandA   dw  0   ; 16-bit
      17   01:9005  00 00               Math_OperandB   dw  0   ; 16-bit
      18   01:9007  00 00 00 00         Math_ResultR    dd  0   ; 32-bit
      19   01:900B                      
      20   01:900B                      AddU16:
      21   01:900B                          ; U16 + U16 = U32
      22   01:900B                          ; A   + B   = C
      23   01:900B  2A 03 90                ld      hl,(Math_OperandA)
      24   01:900E  ED 5B 05 90             ld      de,(Math_OperandB)
      25   01:9012  19                      add     hl,de
      26   01:9013  38 0A                   jr      c,.carry
      27   01:9015                      
      28   01:9015                      .nocarry:
      29   01:9015  22 07 90                ld      (Math_ResultR),hl
      30   01:9018  21 00 00                ld      hl,0
      31   01:901B  22 09 90                ld      (Math_ResultR+2),hl
      32   01:901E  C9                      ret
      33   01:901F                      
      34   01:901F                      .carry:
      35   01:901F  22 07 90                ld      (Math_ResultR),hl
      36   01:9022  21 00 01                ld      hl,$0100
      37   01:9025  22 09 90                ld      (Math_ResultR+2),hl
      38   01:9028  C9                      ret
      39   01:9029                      
      40   01:9029                      ;;;
      41   01:9029                      
      42   01:9029                      AddS16:
      43   01:9029                          ; S16 + S16 = S32
      44   01:9029                          ; A   + B   = C
      45   01:9029  2A 03 90                ld      hl,(Math_OperandA)
      46   01:902C  ED 5B 05 90             ld      de,(Math_OperandB)
      47   01:9030  19                      add     hl,de
      48   01:9031  22 07 90                ld      (Math_ResultR),hl
      49   01:9034  21 FF FF                ld      hl,$FFFF
      50   01:9037  22 09 90                ld      (Math_ResultR+2),hl
      51   01:903A  C9                      ret
      52   01:903B                      
      53   01:903B                      ;;;
      54   01:903B                      
      55   01:903B                      SubS16:
      56   01:903B                          ; S16 - S16 = S32
      57   01:903B                          ; A   - B   = C
      58   01:903B  2A 03 90                ld      hl,(Math_OperandA)
      59   01:903E  ED 5B 05 90             ld      de,(Math_OperandB)
      60   01:9042  37                      scf
      61   01:9043  3F                      ccf
      62   01:9044  ED 52                   sbc     hl,de
      63   01:9046  38 0A                   jr      c,.carry
      64   01:9048                      
      65   01:9048                      .nocarry:
      66   01:9048  22 07 90                ld      (Math_ResultR),hl
      67   01:904B  21 00 00                ld      hl,0
      68   01:904E  22 09 90                ld      (Math_ResultR+2),hl
      69   01:9051  C9                      ret
      70   01:9052                      
      71   01:9052                      .carry:
      72   01:9052  22 07 90                ld      (Math_ResultR),hl
      73   01:9055  21 FF FF                ld      hl,$FFFF
      74   01:9058  22 09 90                ld      (Math_ResultR+2),hl
      75   01:905B  C9                      ret
      76   01:905C                      
      77   01:905C                      ;;;;;;;;;;;;;;;;;;;;;
      78   01:905C                      
      79   01:905C                      START:
      80   01:905C  11 02 92                ld		de,strATADetect
      81   01:905F  0E 02               	ld		c,B_STROUT
      82   01:9061                      	DoBIOS
      82   01:9061  E7                >   rst $20
      83   01:9062                      
      84   01:9062  F3                      di
      85   01:9063                      
      86   01:9063                          ; ld      hl,$0000
      87   01:9063                          ; push    hl
      88   01:9063                          ; ld      hl,$1122
      89   01:9063                          ; push    hl
      90   01:9063                          ; ld      hl,strPrintfTest
      91   01:9063                          ; push    hl
      92   01:9063                          ; call    Printf
      93   01:9063                          ; pop     hl
      94   01:9063                          ; pop     hl
      95   01:9063                          ; pop     hl
      96   01:9063                      
      97   01:9063  CD 79 91                call    ATA_Set8BitMode
      98   01:9066                      
      99   01:9066  21 00 A0                ld      hl,bufATACmdResponse
     100   01:9069  CD 82 91                call    ATA_DoIdentify
     101   01:906C                      
     102   01:906C  11 71 92                ld		de,strATAFieldSerial
     103   01:906F  0E 02               	ld		c,B_STROUT
     104   01:9071                      	DoBIOS
     104   01:9071  E7                >   rst $20
     105   01:9072  21 00 A0                ld      hl,bufATACmdResponse
     106   01:9075  CD 29 91                call    PrintSerialNumber
     107   01:9078  11 FF 91                ld		de,strCRLF
     108   01:907B  0E 02               	ld		c,B_STROUT
     109   01:907D                      	DoBIOS
     109   01:907D  E7                >   rst $20
     110   01:907E                          
     111   01:907E  11 51 92                ld		de,strATAFieldModel
     112   01:9081  0E 02               	ld		c,B_STROUT
     113   01:9083                      	DoBIOS
     113   01:9083  E7                >   rst $20
     114   01:9084  21 00 A0                ld      hl,bufATACmdResponse
     115   01:9087  CD 44 91                call    PrintModelNumber
     116   01:908A  11 FF 91                ld		de,strCRLF
     117   01:908D  0E 02               	ld		c,B_STROUT
     118   01:908F                      	DoBIOS
     118   01:908F  E7                >   rst $20
     119   01:9090                      
     120   01:9090  21 00 A0                ld      hl,bufATACmdResponse
     121   01:9093  CD 5F 91                call    PrintSectorCount
     122   01:9096  11 FF 91                ld		de,strCRLF
     123   01:9099  0E 02               	ld		c,B_STROUT
     124   01:909B                      	DoBIOS
     124   01:909B  E7                >   rst $20
     125   01:909C                      
     126   01:909C  21 00 A2                ld      hl,bufATASectorBuffer
     127   01:909F  22 5A 93                ld      (ATA_DataBuffer),hl
     128   01:90A2  3E 01                   ld      a,1
     129   01:90A4  32 5F 93                ld      (ATA_SectorsToRead),a
     130   01:90A7  3E 00                   ld      a,0
     131   01:90A9  32 5C 93                ld      (ATA_LBA_Lo),a
     132   01:90AC  32 5D 93                ld      (ATA_LBA_Mid),a
     133   01:90AF  32 5E 93                ld      (ATA_LBA_Hi),a
     134   01:90B2  CD BA 91                call    ATA_ReadLBASector
     135   01:90B5                      
     136   01:90B5  CD D0 90                call    PrintBPBInfo
     137   01:90B8                      
     138   01:90B8  FB                      ei
     139   01:90B9                      
     140   01:90B9  C9                      ret
     141   01:90BA                      
     142   01:90BA                      ;;;;;;;;;;;;;;;;
     143   01:90BA                      
     144   01:90BA                      strPrintfTest:  db  "printf test ld: %ld",13,10,0
     144   01:90BA  70 72 69 6E 74 66 20 74 65 73 74 20 6C 64 3A 20 
     144   01:90CA  25 6C 64 0D 0A 00 
     145   01:90D0                      
     146   01:90D0                      PrintBPBInfo:
     147   01:90D0  11 96 92                ld		de,strBPBHeader
     148   01:90D3  0E 02               	ld		c,B_STROUT
     149   01:90D5                      	DoBIOS
     149   01:90D5  E7                >   rst $20
     150   01:90D6  11 FF 91                ld		de,strCRLF
     151   01:90D9  0E 02               	ld		c,B_STROUT
     152   01:90DB                      	DoBIOS
     152   01:90DB  E7                >   rst $20
     153   01:90DC                      
     154   01:90DC                      .volumeLabel:
     155   01:90DC  21 00 A2                ld      hl,bufATASectorBuffer
     156   01:90DF  01 2B 00                ld      bc,Fat12BPB.volumeLabel
     157   01:90E2  09                      add     hl,bc
     158   01:90E3                      
     159   01:90E3  01 0B 00                ld      bc,11
     160   01:90E6  11 18 93                ld      de,bufStringBuffer
     161   01:90E9  ED B0                   ldir    ; Copy label to string buffer
     162   01:90EB                      
     163   01:90EB  21 18 93                ld      hl,bufStringBuffer
     164   01:90EE  E5                      push    hl
     165   01:90EF  21 A9 92                ld      hl,strBPBLabel
     166   01:90F2  E5                      push    hl
     167   01:90F3                          PROCYON P_PRINTF
     167   01:90F3  CD 0C F1          >     call    (PROCYON_PUBLIC_API_BASE+(3*cmd))
     168   01:90F6  E1                      pop     hl
     169   01:90F7  E1                      pop     hl
     170   01:90F8                      
     171   01:90F8                      .bytesPerSector:
     172   01:90F8  21 00 A2                ld      hl,bufATASectorBuffer
     173   01:90FB  01 0B 00                ld      bc,Fat12BPB.bytesPerSector
     174   01:90FE  09                      add     hl,bc
     175   01:90FF  4E                      ld      c,(hl)
     176   01:9100  23                      inc     hl
     177   01:9101  46                      ld      b,(hl)
     178   01:9102  C5                      push    bc
     179   01:9103  21 D5 92                ld      hl,strBPBbps
     180   01:9106  E5                      push    hl
     181   01:9107                          PROCYON P_PRINTF
     181   01:9107  CD 0C F1          >     call    (PROCYON_PUBLIC_API_BASE+(3*cmd))
     182   01:910A  E1                      pop     hl
     183   01:910B  E1                      pop     hl
     184   01:910C                      
     185   01:910C                      .fsType:
     186   01:910C  21 00 A2                ld      hl,bufATASectorBuffer
     187   01:910F  01 36 00                ld      bc,Fat12BPB.fsType
     188   01:9112  09                      add     hl,bc
     189   01:9113                      
     190   01:9113  01 08 00                ld      bc,8
     191   01:9116  11 18 93                ld      de,bufStringBuffer
     192   01:9119  ED B0                   ldir    ; Copy label to string buffer
     193   01:911B                      
     194   01:911B  21 18 93                ld      hl,bufStringBuffer
     195   01:911E  E5                      push    hl
     196   01:911F  21 01 93                ld      hl,strBPBfsType
     197   01:9122  E5                      push    hl
     198   01:9123                          PROCYON P_PRINTF
     198   01:9123  CD 0C F1          >     call    (PROCYON_PUBLIC_API_BASE+(3*cmd))
     199   01:9126  E1                      pop     hl
     200   01:9127  E1                      pop     hl
     201   01:9128                      
     202   01:9128  C9                      ret
     203   01:9129                      
     204   01:9129                      PrintSerialNumber:
     205   01:9129                          ; Input: HL is a ptr to the IDENTIFY response
     206   01:9129                          
     207   01:9129                          ; Serial number is at buf+20 to buf+38 with swapped endianness.
     208   01:9129  01 14 00                ld      bc,20
     209   01:912C  09                      add     hl,bc
     210   01:912D                      
     211   01:912D  06 0A                   ld      b,10
     212   01:912F                      .loop:
     213   01:912F  C5                      push    bc
     214   01:9130  23                      inc     hl
     215   01:9131  E5                      push    hl
     216   01:9132  5E                      ld		e,(hl)
     217   01:9133  0E 01               	ld		c,B_CONOUT
     218   01:9135                      	DoBIOS
     218   01:9135  E7                >   rst $20
     219   01:9136  E1                      pop     hl
     220   01:9137  2B                      dec     hl
     221   01:9138  E5                      push    hl
     222   01:9139  5E                      ld		e,(hl)
     223   01:913A  0E 01               	ld		c,B_CONOUT
     224   01:913C                      	DoBIOS
     224   01:913C  E7                >   rst $20
     225   01:913D  E1                      pop     hl
     226   01:913E  23                      inc     hl
     227   01:913F  23                      inc     hl
     228   01:9140  C1                      pop     bc
     229   01:9141  10 EC                   djnz    .loop
     230   01:9143                      
     231   01:9143  C9                      ret
     232   01:9144                      
     233   01:9144                      PrintModelNumber:
     234   01:9144                          ; Input: HL is a ptr to the IDENTIFY response
     235   01:9144                          ; Serial number is at buf+54 to buf+92 with swapped endianness.
     236   01:9144  01 36 00                ld      bc,54
     237   01:9147  09                      add     hl,bc
     238   01:9148                      
     239   01:9148  06 13                   ld      b,19
     240   01:914A                      .loop:
     241   01:914A  C5                      push    bc
     242   01:914B  23                      inc     hl
     243   01:914C  E5                      push    hl
     244   01:914D  5E                      ld		e,(hl)
     245   01:914E  0E 01               	ld		c,B_CONOUT
     246   01:9150                      	DoBIOS
     246   01:9150  E7                >   rst $20
     247   01:9151  E1                      pop     hl
     248   01:9152  2B                      dec     hl
     249   01:9153  E5                      push    hl
     250   01:9154  5E                      ld		e,(hl)
     251   01:9155  0E 01               	ld		c,B_CONOUT
     252   01:9157                      	DoBIOS
     252   01:9157  E7                >   rst $20
     253   01:9158  E1                      pop     hl
     254   01:9159  23                      inc     hl
     255   01:915A  23                      inc     hl
     256   01:915B  C1                      pop     bc
     257   01:915C  10 EC                   djnz    .loop
     258   01:915E                      
     259   01:915E  C9                      ret
     260   01:915F                      
     261   01:915F                      PrintSectorCount:
     262   01:915F                          ; Input: HL is a ptr to the IDENTIFY response
     263   01:915F                          ; Sector count is a DWORD at buf+120
     264   01:915F  01 78 00                ld      bc,120
     265   01:9162  09                      add     hl,bc
     266   01:9163                      
     267   01:9163  4E                      ld      c,(hl)
     268   01:9164  23                      inc     hl
     269   01:9165  46                      ld      b,(hl)
     270   01:9166  23                      inc     hl
     271   01:9167  C5                      push    bc  ; low 16 bits
     272   01:9168                      
     273   01:9168  4E                      ld      c,(hl)
     274   01:9169  23                      inc     hl
     275   01:916A  46                      ld      b,(hl)
     276   01:916B                          
     277   01:916B  E1                      pop     hl
     278   01:916C  C5                      push    bc  ; low 16 bits
     279   01:916D  E5                      push    hl  ; high 16 bits
     280   01:916E                           
     281   01:916E  21 81 92                ld      hl,strATAFieldSectors
     282   01:9171  E5                      push    hl
     283   01:9172                          PROCYON P_PRINTF
     283   01:9172  CD 0C F1          >     call    (PROCYON_PUBLIC_API_BASE+(3*cmd))
     284   01:9175  E1                      pop     hl
     285   01:9176  E1                      pop     hl
     286   01:9177  E1                      pop     hl
     287   01:9178                      
     288   01:9178  C9                      ret
     289   01:9179                      
     290   01:9179                      ATA_Set8BitMode:
     291   01:9179  3E 01                   ld      a,$01
     292   01:917B  D3 11                   out     (ATA_REG_FEATURES),a
     293   01:917D                      
     294   01:917D  3E EF                   ld      a,ATA_CMD_SET_FEATURE   ; SET-FEATURE
     295   01:917F  D3 17                   out     (ATA_REG_COMMAND),a
     296   01:9181  C9                      ret
     297   01:9182                      
     298   01:9182                      ATA_DoIdentify:
     299   01:9182                          ; Send an IDENTIFY command.
     300   01:9182                          ; Write the 512-byte response to (HL).
     301   01:9182                      
     302   01:9182  E5                      push    hl
     303   01:9183                      
     304   01:9183                          ; Select the master drive.
     305   01:9183  3E A0                   ld      a,$A0
     306   01:9185  D3 16                   out     (ATA_REG_DRIVESELECT),a
     307   01:9187                          ; Set sector count and LBA registers to 0
     308   01:9187  3E 00                   ld      a,0
     309   01:9189  D3 12                   out     (ATA_REG_SECTORCOUNT),a
     310   01:918B  D3 15                   out     (ATA_REG_LBAHI),a
     311   01:918D  D3 14                   out     (ATA_REG_LBAMID),a
     312   01:918F  D3 13                   out     (ATA_REG_LBALO),a
     313   01:9191  3E EC                   ld      a,ATA_CMD_IDENTIFY
     314   01:9193  D3 17                   out     (ATA_REG_COMMAND),a
     315   01:9195                      
     316   01:9195  CD F1 91                call    ATA_PollDriveNotBusy
     317   01:9198  CD F8 91                call    ATA_PollDriveHasData
     318   01:919B                      
     319   01:919B  11 31 92                ld		de,strATAIdent
     320   01:919E  0E 02               	ld		c,B_STROUT
     321   01:91A0                      	DoBIOS
     321   01:91A0  E7                >   rst $20
     322   01:91A1                      
     323   01:91A1                          ; Read 512 bytes into (HL)
     324   01:91A1  E1                      pop     hl
     325   01:91A2  06 00                   ld      b,0
     326   01:91A4                      .readloop1:
     327   01:91A4  DB 10                   in      a,(ATA_REG_DATA)
     328   01:91A6  77                      ld      (hl),a
     329   01:91A7  23                      inc     hl
     330   01:91A8  10 FA                   djnz    .readloop1
     331   01:91AA                      .readloop2:
     332   01:91AA  DB 10                   in      a,(ATA_REG_DATA)
     333   01:91AC  77                      ld      (hl),a
     334   01:91AD  23                      inc     hl
     335   01:91AE  10 FA                   djnz    .readloop2
     336   01:91B0                      
     337   01:91B0  C9                      ret
     338   01:91B1                      
     339   01:91B1                      ATA_DrainBuffer:
     340   01:91B1  DB 17                   in      a,(ATA_REG_STATUS)
     341   01:91B3  FE 08                   cp      ATA_STATUS_DRQ
     342   01:91B5  C0                      ret     nz
     343   01:91B6  DB 10                   in      a,(ATA_REG_DATA)
     344   01:91B8  18 F7                   jr      ATA_DrainBuffer
     345   01:91BA                      
     346   01:91BA                      ;;;;;;;;;;;;;;;;
     347   01:91BA                      ATA_ReadLBASector:
     348   01:91BA  CD B1 91                call    ATA_DrainBuffer
     349   01:91BD                      
     350   01:91BD  3E E0                   ld      a,ATA_DRIVE_MASTER
     351   01:91BF  D3 16                   out     (ATA_REG_DRIVESELECT),a
     352   01:91C1                      
     353   01:91C1                          ; One sector
     354   01:91C1  3A 5F 93                ld      a,(ATA_SectorsToRead)
     355   01:91C4  D3 12                   out     (ATA_REG_SECTORCOUNT),a
     356   01:91C6                      
     357   01:91C6                          ; Write LBA value
     358   01:91C6                          ; for now, just read sector 0
     359   01:91C6  3A 5C 93                ld      a,(ATA_LBA_Lo)
     360   01:91C9  D3 13                   out     (ATA_REG_LBALO),a
     361   01:91CB  3A 5D 93                ld      a,(ATA_LBA_Mid)
     362   01:91CE  D3 14                   out     (ATA_REG_LBAMID),a
     363   01:91D0  3A 5E 93                ld      a,(ATA_LBA_Hi)
     364   01:91D3  D3 15                   out     (ATA_REG_LBAHI),a
     365   01:91D5                      
     366   01:91D5  3E 20                   ld      a,ATA_CMD_READ_SECTORS
     367   01:91D7  D3 17                   out     (ATA_REG_COMMAND),a
     368   01:91D9                      
     369   01:91D9  CD F1 91                call    ATA_PollDriveNotBusy
     370   01:91DC  CD F8 91                call    ATA_PollDriveHasData
     371   01:91DF                      
     372   01:91DF                          ; Read 512 bytes into the sector buffer
     373   01:91DF  2A 5A 93                ld      hl,(ATA_DataBuffer)
     374   01:91E2  06 00                   ld      b,0
     375   01:91E4                      .readloop1:
     376   01:91E4  DB 10                   in      a,(ATA_REG_DATA)
     377   01:91E6  77                      ld      (hl),a
     378   01:91E7  23                      inc     hl
     379   01:91E8  10 FA                   djnz    .readloop1
     380   01:91EA                      .readloop2:
     381   01:91EA  DB 10                   in      a,(ATA_REG_DATA)
     382   01:91EC  77                      ld      (hl),a
     383   01:91ED  23                      inc     hl
     384   01:91EE  10 FA                   djnz    .readloop2    
     385   01:91F0                      
     386   01:91F0  C9                      ret
     387   01:91F1                      
     388   01:91F1                      ATA_PollDriveNotBusy:
     389   01:91F1                          ; Poll the status port until BSY is clear.
     390   01:91F1  DB 17                   in      a,(ATA_REG_STATUS)
     391   01:91F3  E6 80                   and     ATA_STATUS_BSY
     392   01:91F5  28 FA                   jr      z,ATA_PollDriveNotBusy
     393   01:91F7  C9                      ret
     394   01:91F8                      
     395   01:91F8                      ATA_PollDriveHasData:
     396   01:91F8                          ; Poll the status port until DRQ is set.
     397   01:91F8  DB 17                   in      a,(ATA_REG_STATUS)
     398   01:91FA  E6 08                   and     ATA_STATUS_DRQ
     399   01:91FC  28 FA                   jr      z,ATA_PollDriveHasData
     400   01:91FE  C9                      ret    
     401   01:91FF                      
     402   01:91FF                      ;;;;;;;;;;;;;;;;
     403   01:91FF                      
     404   01:91FF                      strCRLF:
     405   01:91FF  0D 0A 00            	db  13,10,0
     406   01:9202                      
     407   01:9202                      strATADetect:   db "* Attempting to detect ATA drive at I/O $10.",13,10,0
     407   01:9202  2A 20 41 74 74 65 6D 70 74 69 6E 67 20 74 6F 20 
     407   01:9212  64 65 74 65 63 74 20 41 54 41 20 64 72 69 76 65 
     407   01:9222  20 61 74 20 49 2F 4F 20 24 31 30 2E 0D 0A 00 
     408   01:9231                      strATAIdent:    db  "* Retrieving IDENTIFY data...",13,10,0
     408   01:9231  2A 20 52 65 74 72 69 65 76 69 6E 67 20 49 44 45 
     408   01:9241  4E 54 49 46 59 20 64 61 74 61 2E 2E 2E 0D 0A 00 
     409   01:9251                      
     410   01:9251                      strATAFieldModel:   db  " Model number: ",0
     410   01:9251  20 4D 6F 64 65 6C 20 6E 75 6D 62 65 72 3A 20 00 
     411   01:9261                      strATAFieldFW:      db  " Firmware ver: ",0
     411   01:9261  20 46 69 72 6D 77 61 72 65 20 76 65 72 3A 20 00 
     412   01:9271                      strATAFieldSerial:  db  "Serial number: ",0
     412   01:9271  53 65 72 69 61 6C 20 6E 75 6D 62 65 72 3A 20 00 
     413   01:9281                      strATAFieldSectors: db  "      Sectors: %lx",13,10,0
     413   01:9281  20 20 20 20 20 20 53 65 63 74 6F 72 73 3A 20 25 
     413   01:9291  6C 78 0D 0A 00 
     414   01:9296                      
     415   01:9296                      strBPBHeader:       db  " B P B    I N F O ",0
     415   01:9296  20 42 20 50 20 42 20 20 20 20 49 20 4E 20 46 20 
     415   01:92A6  4F 20 00 
     416   01:92A9                      strBPBLabel:        db  "           Label: %s",13,10,0
     416   01:92A9  20 20 20 20 20 20 20 20 20 20 20 4C 61 62 65 6C 
     416   01:92B9  3A 20 25 73 0D 0A 00 
     417   01:92C0                      strBPBSectors:      db  "  No. of Sectors: %x",0
     417   01:92C0  20 20 4E 6F 2E 20 6F 66 20 53 65 63 74 6F 72 73 
     417   01:92D0  3A 20 25 78 00 
     418   01:92D5                      strBPBbps:          db  "Bytes per Sector: %d",13,10,0
     418   01:92D5  42 79 74 65 73 20 70 65 72 20 53 65 63 74 6F 72 
     418   01:92E5  3A 20 25 64 0D 0A 00 
     419   01:92EC                      strBPBmd:           db  "Media Descriptor: %x",0
     419   01:92EC  4D 65 64 69 61 20 44 65 73 63 72 69 70 74 6F 72 
     419   01:92FC  3A 20 25 78 00 
     420   01:9301                      strBPBfsType:       db  "Reported FS Type: %s",13,10,0
     420   01:9301  52 65 70 6F 72 74 65 64 20 46 53 20 54 79 70 65 
     420   01:9311  3A 20 25 73 0D 0A 00 
     421   01:9318                      
     422   01:9318  00 (64)             bufStringBuffer:    ds  64
     423   01:9358  00 00               printf_params:      dw  0
     424   01:935A                      
     425   01:935A                      ; ATA driver variables.
     426   01:935A  00 00               ATA_DataBuffer:     dw  0   ; Pointer to where data is read/written.
     427   01:935C  00                  ATA_LBA_Lo:         db  0   ; LBA low 8 bits
     428   01:935D  00                  ATA_LBA_Mid:        db  0   ; LBA mid 8 bits
     429   01:935E  00                  ATA_LBA_Hi:         db  0   ; LBA high 8 bits
     430   01:935F  00                  ATA_SectorsToRead:  db  0   ; Number of sectors to read.
     431   01:9360                      
     432   01:9360                          org $A000
     433   01:A000  00 (512)            bufATACmdResponse:  ds  512
     434   01:A200  00 (512)            bufATASectorBuffer: ds  512

    LABELS
-------------------------------------------------
00:00000000 X P_STRTOHEX8
00:00000001 X P_STRTOHEX16
00:00000002 X P_HEX8TOSTR
00:00000003 X P_HEX16TOSTR
00:00000004   P_PRINTF
00:00000005 X P_B2D8
00:00000006 X P_B2D16
00:00000007 X P_B2D32
00:0000F100   PROCYON_PUBLIC_API_BASE
00:00008300   PROCAPI_DATA_BASE
00:00008300   STRINGTOHEX_SRC
00:00008310   STRINGTOHEX_DEST
00:00008318   HEXTOSTRING_SRC
00:0000831C X HEXTOSTRING_DEST
00:00000000 X B_RESET
00:00000001   B_CONOUT
00:00000002   B_STROUT
00:00000003 X B_CONIN
00:00000004 X B_CONSTAT
00:00000005 X B_STRIN
00:00000001 X DEV_AUX
00:00000002 X DEV_CON
00:00000005 X DEV_SCREEN
00:00000010   ATA_IO_BASE
00:00000010   ATA_REG_DATA
00:00000011 X ATA_REG_ERROR
00:00000011   ATA_REG_FEATURES
00:00000012   ATA_REG_SECTORCOUNT
00:00000013   ATA_REG_LBALO
00:00000014   ATA_REG_LBAMID
00:00000015   ATA_REG_LBAHI
00:00000016   ATA_REG_DRIVESELECT
00:00000017   ATA_REG_STATUS
00:00000017   ATA_REG_COMMAND
00:00000001 X ATA_ERROR_AMNF
00:00000002 X ATA_ERROR_TKZNF
00:00000004 X ATA_ERROR_ABRT
00:00000008 X ATA_ERROR_MCR
00:00000010 X ATA_ERROR_IDNF
00:00000020 X ATA_ERROR_MC
00:00000040 X ATA_ERROR_UNC
00:00000080 X ATA_ERROR_BBK
00:00000001 X ATA_STATUS_ERR
00:00000002 X ATA_STATUS_IDX
00:00000004 X ATA_STATUS_CORR
00:00000008   ATA_STATUS_DRQ
00:00000010 X ATA_STATUS_SRV
00:00000020 X ATA_STATUS_DF
00:00000040 X ATA_STATUS_RDY
00:00000080   ATA_STATUS_BSY
00:000000E0   ATA_DRIVE_MASTER
00:000000F0 X ATA_DRIVE_SLAVE
00:00000020   ATA_CMD_READ_SECTORS
00:000000EC   ATA_CMD_IDENTIFY
00:000000EF   ATA_CMD_SET_FEATURE
00:00000000 X Fat12BPB.jump
00:00000003 X Fat12BPB.oemName
00:0000000B   Fat12BPB.bytesPerSector
00:0000000D X Fat12BPB.sectorsPerCluster
00:0000000E X Fat12BPB.reservedSectors
00:00000010 X Fat12BPB.numberOfFATs
00:00000011 X Fat12BPB.maxRootDirEntries
00:00000013 X Fat12BPB.numLogicalSectors16
00:00000015 X Fat12BPB.mediaDescriptor
00:00000016 X Fat12BPB.sectorsPerFAT
00:00000018 X Fat12BPB.sectorsPerTrack
00:0000001A X Fat12BPB.numHeads
00:0000001C X Fat12BPB.hiddenSectors
00:00000020 X Fat12BPB.numLogicalSectors32
00:00000024 X Fat12BPB.driveNum
00:00000025 X Fat12BPB.reserved
00:00000026 X Fat12BPB.bootSignature
00:00000027 X Fat12BPB.volumeID
00:0000002B   Fat12BPB.volumeLabel
00:00000036   Fat12BPB.fsType
00:0000003E X Fat12BPB.padding
00:000001FE X Fat12BPB.bsignature
00:00000200 X Fat12BPB
01:00009000 X Entry
01:00009003   Math_OperandA
01:00009005   Math_OperandB
01:00009007   Math_ResultR
01:0000900B X AddU16
01:00009015 X AddU16.nocarry
01:0000901F   AddU16.carry
01:00009029 X AddS16
01:0000903B X SubS16
01:00009048 X SubS16.nocarry
01:00009052   SubS16.carry
01:0000905C   START
01:000090BA X strPrintfTest
01:000090D0   PrintBPBInfo
01:000090DC X PrintBPBInfo.volumeLabel
01:000090F8 X PrintBPBInfo.bytesPerSector
01:0000910C X PrintBPBInfo.fsType
01:00009129   PrintSerialNumber
01:0000912F   PrintSerialNumber.loop
01:00009144   PrintModelNumber
01:0000914A   PrintModelNumber.loop
01:0000915F   PrintSectorCount
01:00009179   ATA_Set8BitMode
01:00009182   ATA_DoIdentify
01:000091A4   ATA_DoIdentify.readloop1
01:000091AA   ATA_DoIdentify.readloop2
01:000091B1   ATA_DrainBuffer
01:000091BA   ATA_ReadLBASector
01:000091E4   ATA_ReadLBASector.readloop1
01:000091EA   ATA_ReadLBASector.readloop2
01:000091F1   ATA_PollDriveNotBusy
01:000091F8   ATA_PollDriveHasData
01:000091FF   strCRLF
01:00009202   strATADetect
01:00009231   strATAIdent
01:00009251   strATAFieldModel
01:00009261 X strATAFieldFW
01:00009271   strATAFieldSerial
01:00009281   strATAFieldSectors
01:00009296   strBPBHeader
01:000092A9   strBPBLabel
01:000092C0 X strBPBSectors
01:000092D5   strBPBbps
01:000092EC X strBPBmd
01:00009301   strBPBfsType
01:00009318   bufStringBuffer
01:00009358 X printf_params
01:0000935A   ATA_DataBuffer
01:0000935C   ATA_LBA_Lo
01:0000935D   ATA_LBA_Mid
01:0000935E   ATA_LBA_Hi
01:0000935F   ATA_SectorsToRead
01:0000A000   bufATACmdResponse
01:0000A200   bufATASectorBuffer


 Output: testprogs/atatest.out
-------------------------------------------------

 Page: 00
  Org: 0000A000  Size: *  Used: 00000000

    No output

 Output: testprogs\out\atatest.bin
-------------------------------------------------

 Page: 01
  Org: 00009000  Size: *  Used: 00000760

   Address   Length Align   Label
   00009000    1888         Entry

 Page: 02
  Org: 00009760  Size: *  Used: 00000000

    No output
